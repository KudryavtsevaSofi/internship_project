{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/pagination/utils/compatibility_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport messageLocalization from \"../../../common/core/localization/message\";\nimport { PaginationConfigContext } from \"../common/pagination_config_context\";\nfunction getPaginationConfig(context) {\n  if (context[PaginationConfigContext.id]) {\n    return context[PaginationConfigContext.id];\n  }\n  return PaginationConfigContext.defaultValue;\n}\nexport function isGridCompatibilityMode(context) {\n  var _getPaginationConfig;\n  return !!(null !== (_getPaginationConfig = getPaginationConfig(context)) && void 0 !== _getPaginationConfig && _getPaginationConfig.isGridCompatibilityMode);\n}\nexport function getLocalizationMessage(context, key) {\n  let actualKey = key;\n  if (isGridCompatibilityMode(context)) {\n    actualKey = key.replace(\"dxPagination\", \"dxPager\");\n  }\n  return messageLocalization.getFormatter(actualKey)();\n}","map":{"version":3,"names":["messageLocalization","PaginationConfigContext","getPaginationConfig","context","id","defaultValue","isGridCompatibilityMode","_getPaginationConfig","getLocalizationMessage","key","actualKey","replace","getFormatter"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/pagination/utils/compatibility_utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/pagination/utils/compatibility_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport messageLocalization from \"../../../common/core/localization/message\";\r\nimport {\r\n    PaginationConfigContext\r\n} from \"../common/pagination_config_context\";\r\n\r\nfunction getPaginationConfig(context) {\r\n    if (context[PaginationConfigContext.id]) {\r\n        return context[PaginationConfigContext.id]\r\n    }\r\n    return PaginationConfigContext.defaultValue\r\n}\r\nexport function isGridCompatibilityMode(context) {\r\n    var _getPaginationConfig;\r\n    return !!(null !== (_getPaginationConfig = getPaginationConfig(context)) && void 0 !== _getPaginationConfig && _getPaginationConfig.isGridCompatibilityMode)\r\n}\r\nexport function getLocalizationMessage(context, key) {\r\n    let actualKey = key;\r\n    if (isGridCompatibilityMode(context)) {\r\n        actualKey = key.replace(\"dxPagination\", \"dxPager\")\r\n    }\r\n    return messageLocalization.getFormatter(actualKey)()\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,mBAAmB,MAAM,2CAA2C;AAC3E,SACIC,uBAAuB,QACpB,qCAAqC;AAE5C,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EAClC,IAAIA,OAAO,CAACF,uBAAuB,CAACG,EAAE,CAAC,EAAE;IACrC,OAAOD,OAAO,CAACF,uBAAuB,CAACG,EAAE,CAAC;EAC9C;EACA,OAAOH,uBAAuB,CAACI,YAAY;AAC/C;AACA,OAAO,SAASC,uBAAuBA,CAACH,OAAO,EAAE;EAC7C,IAAII,oBAAoB;EACxB,OAAO,CAAC,EAAE,IAAI,MAAMA,oBAAoB,GAAGL,mBAAmB,CAACC,OAAO,CAAC,CAAC,IAAI,KAAK,CAAC,KAAKI,oBAAoB,IAAIA,oBAAoB,CAACD,uBAAuB,CAAC;AAChK;AACA,OAAO,SAASE,sBAAsBA,CAACL,OAAO,EAAEM,GAAG,EAAE;EACjD,IAAIC,SAAS,GAAGD,GAAG;EACnB,IAAIH,uBAAuB,CAACH,OAAO,CAAC,EAAE;IAClCO,SAAS,GAAGD,GAAG,CAACE,OAAO,CAAC,cAAc,EAAE,SAAS,CAAC;EACtD;EACA,OAAOX,mBAAmB,CAACY,YAAY,CAACF,SAAS,CAAC,CAAC,CAAC;AACxD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}