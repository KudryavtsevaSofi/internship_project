{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/utils/memoize.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { equalByValue } from \"../../core/utils/common\";\nconst compareByReference = (args, lastArgs) => args.length === lastArgs.length && !Object.keys(args).some(key => args[key] !== lastArgs[key]);\nconst compareByValue = (args, lastArgs) => equalByValue(args, lastArgs, {\n  maxDepth: 4\n});\nconst createCacheFunc = (firstArgs, firstResult, originFunc, compareFunc) => {\n  let lastArgs = firstArgs;\n  let lastResult = firstResult;\n  return function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    const argsEquals = compareFunc(args, lastArgs);\n    if (argsEquals) {\n      return lastResult;\n    }\n    lastArgs = args;\n    lastResult = originFunc(...lastArgs);\n    return lastResult;\n  };\n};\nconst MEMOIZE_DEFAULT_OPTIONS = {\n  compareType: \"reference\"\n};\nexport const memoize = function (func) {\n  let {\n    compareType: compareType\n  } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : MEMOIZE_DEFAULT_OPTIONS;\n  let cachedFunc = null;\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    if (!cachedFunc) {\n      const firstResult = func(...args);\n      cachedFunc = createCacheFunc(args, firstResult, func, \"reference\" === compareType ? compareByReference : compareByValue);\n      return firstResult;\n    }\n    return cachedFunc(...args);\n  };\n};","map":{"version":3,"names":["equalByValue","compareByReference","args","lastArgs","length","Object","keys","some","key","compareByValue","maxDepth","createCacheFunc","firstArgs","firstResult","originFunc","compareFunc","lastResult","_len","arguments","Array","_key","argsEquals","MEMOIZE_DEFAULT_OPTIONS","compareType","memoize","func","cachedFunc","_len2","_key2"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/utils/memoize.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/utils/memoize.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    equalByValue\r\n} from \"../../core/utils/common\";\r\nconst compareByReference = (args, lastArgs) => args.length === lastArgs.length && !Object.keys(args).some((key => args[key] !== lastArgs[key]));\r\nconst compareByValue = (args, lastArgs) => equalByValue(args, lastArgs, {\r\n    maxDepth: 4\r\n});\r\nconst createCacheFunc = (firstArgs, firstResult, originFunc, compareFunc) => {\r\n    let lastArgs = firstArgs;\r\n    let lastResult = firstResult;\r\n    return function() {\r\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n            args[_key] = arguments[_key]\r\n        }\r\n        const argsEquals = compareFunc(args, lastArgs);\r\n        if (argsEquals) {\r\n            return lastResult\r\n        }\r\n        lastArgs = args;\r\n        lastResult = originFunc(...lastArgs);\r\n        return lastResult\r\n    }\r\n};\r\nconst MEMOIZE_DEFAULT_OPTIONS = {\r\n    compareType: \"reference\"\r\n};\r\nexport const memoize = function(func) {\r\n    let {\r\n        compareType: compareType\r\n    } = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : MEMOIZE_DEFAULT_OPTIONS;\r\n    let cachedFunc = null;\r\n    return function() {\r\n        for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n            args[_key2] = arguments[_key2]\r\n        }\r\n        if (!cachedFunc) {\r\n            const firstResult = func(...args);\r\n            cachedFunc = createCacheFunc(args, firstResult, func, \"reference\" === compareType ? compareByReference : compareByValue);\r\n            return firstResult\r\n        }\r\n        return cachedFunc(...args)\r\n    }\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SACIA,YAAY,QACT,yBAAyB;AAChC,MAAMC,kBAAkB,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAKD,IAAI,CAACE,MAAM,KAAKD,QAAQ,CAACC,MAAM,IAAI,CAACC,MAAM,CAACC,IAAI,CAACJ,IAAI,CAAC,CAACK,IAAI,CAAEC,GAAG,IAAIN,IAAI,CAACM,GAAG,CAAC,KAAKL,QAAQ,CAACK,GAAG,CAAE,CAAC;AAC/I,MAAMC,cAAc,GAAGA,CAACP,IAAI,EAAEC,QAAQ,KAAKH,YAAY,CAACE,IAAI,EAAEC,QAAQ,EAAE;EACpEO,QAAQ,EAAE;AACd,CAAC,CAAC;AACF,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,WAAW,EAAEC,UAAU,EAAEC,WAAW,KAAK;EACzE,IAAIZ,QAAQ,GAAGS,SAAS;EACxB,IAAII,UAAU,GAAGH,WAAW;EAC5B,OAAO,YAAW;IACd,KAAK,IAAII,IAAI,GAAGC,SAAS,CAACd,MAAM,EAAEF,IAAI,GAAG,IAAIiB,KAAK,CAACF,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;MACrFlB,IAAI,CAACkB,IAAI,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC;IAChC;IACA,MAAMC,UAAU,GAAGN,WAAW,CAACb,IAAI,EAAEC,QAAQ,CAAC;IAC9C,IAAIkB,UAAU,EAAE;MACZ,OAAOL,UAAU;IACrB;IACAb,QAAQ,GAAGD,IAAI;IACfc,UAAU,GAAGF,UAAU,CAAC,GAAGX,QAAQ,CAAC;IACpC,OAAOa,UAAU;EACrB,CAAC;AACL,CAAC;AACD,MAAMM,uBAAuB,GAAG;EAC5BC,WAAW,EAAE;AACjB,CAAC;AACD,OAAO,MAAMC,OAAO,GAAG,SAAAA,CAASC,IAAI,EAAE;EAClC,IAAI;IACAF,WAAW,EAAEA;EACjB,CAAC,GAAGL,SAAS,CAACd,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,KAAKc,SAAS,CAAC,CAAC,CAAC,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAGI,uBAAuB;EAC5F,IAAII,UAAU,GAAG,IAAI;EACrB,OAAO,YAAW;IACd,KAAK,IAAIC,KAAK,GAAGT,SAAS,CAACd,MAAM,EAAEF,IAAI,GAAG,IAAIiB,KAAK,CAACQ,KAAK,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;MAC3F1B,IAAI,CAAC0B,KAAK,CAAC,GAAGV,SAAS,CAACU,KAAK,CAAC;IAClC;IACA,IAAI,CAACF,UAAU,EAAE;MACb,MAAMb,WAAW,GAAGY,IAAI,CAAC,GAAGvB,IAAI,CAAC;MACjCwB,UAAU,GAAGf,eAAe,CAACT,IAAI,EAAEW,WAAW,EAAEY,IAAI,EAAE,WAAW,KAAKF,WAAW,GAAGtB,kBAAkB,GAAGQ,cAAc,CAAC;MACxH,OAAOI,WAAW;IACtB;IACA,OAAOa,UAAU,CAAC,GAAGxB,IAAI,CAAC;EAC9B,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}