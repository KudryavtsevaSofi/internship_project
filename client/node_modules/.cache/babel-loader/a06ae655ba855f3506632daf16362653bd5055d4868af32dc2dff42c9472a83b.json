{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofia\\\\Desktop\\\\\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0438\\u0439 \\u0426\\u041A\\\\internship_project\\\\src\\\\components\\\\BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table';\nimport planets from '../server/database/data.json';\nimport { COLUMNS } from \"./columns\";\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n  // Мемоизация колонок и данных для оптимизации производительности\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => planets, []);\n\n  // Используем useReactTable с getCoreRowModel для базовой функциональности\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel() // Добавляем модель строк\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n          children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n        }, header.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this))\n      }, headerGroup.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n          children: flexRender(cell.column.columnDef.cell, cell.getContext())\n        }, cell.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this))\n      }, row.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n};\n_s(BasicTable, \"D6Rp7iZbFJ+5cuJqrb4rMdLFbaM=\", false, function () {\n  return [useReactTable];\n});\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useReactTable","getCoreRowModel","flexRender","planets","COLUMNS","jsxDEV","_jsxDEV","BasicTable","_s","columns","data","table","children","getHeaderGroups","map","headerGroup","headers","header","isPlaceholder","column","columnDef","getContext","id","fileName","_jsxFileName","lineNumber","columnNumber","getRowModel","rows","row","getVisibleCells","cell","_c","$RefreshReg$"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/src/components/BasicTable.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useReactTable, getCoreRowModel, flexRender } from '@tanstack/react-table'\r\nimport planets from '../server/database/data.json'\r\nimport { COLUMNS } from \"./columns\";\r\nimport './table.css';\r\n\r\nexport const BasicTable = () => {\r\n    // Мемоизация колонок и данных для оптимизации производительности\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const data = useMemo(() => planets, []);\r\n  \r\n    // Используем useReactTable с getCoreRowModel для базовой функциональности\r\n    const table = useReactTable({\r\n      data,\r\n      columns,\r\n      getCoreRowModel: getCoreRowModel(), // Добавляем модель строк\r\n    });\r\n  \r\n    return (\r\n      <table>\r\n        <thead>\r\n          {/* Используем table.getHeaderGroups() вместо headerGroups */}\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id}>\r\n                  {/* Используем flexRender для рендеринга заголовков */}\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(header.column.columnDef.header, header.getContext())}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {/* Используем table.getRowModel().rows вместо rows */}\r\n          {table.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td key={cell.id}>\r\n                  {/* Используем flexRender для рендеринга ячеек */}\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,aAAa,EAAEC,eAAe,EAAEC,UAAU,QAAQ,uBAAuB;AAClF,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,OAAO,GAAGV,OAAO,CAAC,MAAMK,OAAO,EAAE,EAAE,CAAC;EAC1C,MAAMM,IAAI,GAAGX,OAAO,CAAC,MAAMI,OAAO,EAAE,EAAE,CAAC;;EAEvC;EACA,MAAMQ,KAAK,GAAGX,aAAa,CAAC;IAC1BU,IAAI;IACJD,OAAO;IACPR,eAAe,EAAEA,eAAe,CAAC,CAAC,CAAE;EACtC,CAAC,CAAC;EAEF,oBACEK,OAAA;IAAAM,QAAA,gBACEN,OAAA;MAAAM,QAAA,EAEGD,KAAK,CAACE,eAAe,CAAC,CAAC,CAACC,GAAG,CAAEC,WAAW,iBACvCT,OAAA;QAAAM,QAAA,EACGG,WAAW,CAACC,OAAO,CAACF,GAAG,CAAEG,MAAM,iBAC9BX,OAAA;UAAAM,QAAA,EAEGK,MAAM,CAACC,aAAa,GACjB,IAAI,GACJhB,UAAU,CAACe,MAAM,CAACE,MAAM,CAACC,SAAS,CAACH,MAAM,EAAEA,MAAM,CAACI,UAAU,CAAC,CAAC;QAAC,GAJ5DJ,MAAM,CAACK,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKd,CACL;MAAC,GARKX,WAAW,CAACO,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASnB,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRpB,OAAA;MAAAM,QAAA,EAEGD,KAAK,CAACgB,WAAW,CAAC,CAAC,CAACC,IAAI,CAACd,GAAG,CAAEe,GAAG,iBAChCvB,OAAA;QAAAM,QAAA,EACGiB,GAAG,CAACC,eAAe,CAAC,CAAC,CAAChB,GAAG,CAAEiB,IAAI,iBAC9BzB,OAAA;UAAAM,QAAA,EAEGV,UAAU,CAAC6B,IAAI,CAACZ,MAAM,CAACC,SAAS,CAACW,IAAI,EAAEA,IAAI,CAACV,UAAU,CAAC,CAAC;QAAC,GAFnDU,IAAI,CAACT,EAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGZ,CACL;MAAC,GANKG,GAAG,CAACP,EAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOX,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEZ,CAAC;AAAClB,EAAA,CA5CSD,UAAU;EAAA,QAMLP,aAAa;AAAA;AAAAgC,EAAA,GANlBzB,UAAU;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}