{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/form/components/m_field_item.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { name as clickEventName } from \"../../../../common/core/events/click\";\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\nimport { getPublicElement } from \"../../../../core/element\";\nimport $ from \"../../../../core/renderer\";\nimport { captionize } from \"../../../../core/utils/inflector\";\nimport { format } from \"../../../../core/utils/string\";\nimport { isMaterialBased } from \"../../../../ui/themes\";\nimport Validator from \"../../../../ui/validator\";\nimport errors from \"../../../../ui/widget/ui.errors\";\nimport { FIELD_ITEM_CONTENT_CLASS } from \"../constants\";\nimport { renderLabel } from \"./m_label\";\nexport const FLEX_LAYOUT_CLASS = \"dx-flex-layout\";\nexport const FIELD_ITEM_OPTIONAL_CLASS = \"dx-field-item-optional\";\nexport const FIELD_ITEM_REQUIRED_CLASS = \"dx-field-item-required\";\nexport const FIELD_ITEM_CONTENT_WRAPPER_CLASS = \"dx-field-item-content-wrapper\";\nexport const FIELD_ITEM_CONTENT_LOCATION_CLASS = \"dx-field-item-content-location-\";\nexport const FIELD_ITEM_LABEL_ALIGN_CLASS = \"dx-field-item-label-align\";\nexport const FIELD_ITEM_HELP_TEXT_CLASS = \"dx-field-item-help-text\";\nexport const LABEL_VERTICAL_ALIGNMENT_CLASS = \"dx-label-v-align\";\nexport const LABEL_HORIZONTAL_ALIGNMENT_CLASS = \"dx-label-h-align\";\nexport const TOGGLE_CONTROLS_PADDING_CLASS = \"dx-toggle-controls-paddings\";\nconst TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\nconst VALIDATION_TARGET_CLASS = \"dx-validation-target\";\nconst INVALID_CLASS = \"dx-invalid\";\nexport function renderFieldItem(_ref) {\n  let {\n    $parent: $parent,\n    rootElementCssClassList: rootElementCssClassList,\n    formOrLayoutManager: formOrLayoutManager,\n    createComponentCallback: createComponentCallback,\n    labelOptions: labelOptions,\n    labelNeedBaselineAlign: labelNeedBaselineAlign,\n    labelLocation: labelLocation,\n    needRenderLabel: needRenderLabel,\n    formLabelLocation: formLabelLocation,\n    item: item,\n    editorOptions: editorOptions,\n    isSimpleItem: isSimpleItem,\n    isRequired: isRequired,\n    template: template,\n    helpID: helpID,\n    labelID: labelID,\n    name: name,\n    helpText: helpText,\n    requiredMessageTemplate: requiredMessageTemplate,\n    validationGroup: validationGroup\n  } = _ref;\n  const $rootElement = $(\"<div>\").addClass(rootElementCssClassList.join(\" \")).appendTo($parent);\n  $rootElement.addClass(isRequired ? \"dx-field-item-required\" : \"dx-field-item-optional\");\n  if (isSimpleItem) {\n    $rootElement.addClass(\"dx-flex-layout\");\n  }\n  if (isSimpleItem && labelNeedBaselineAlign) {\n    $rootElement.addClass(\"dx-field-item-label-align\");\n  }\n  const $fieldEditorContainer = $(\"<div>\");\n  $fieldEditorContainer.data(\"dx-form-item\", item);\n  $fieldEditorContainer.addClass(FIELD_ITEM_CONTENT_CLASS).addClass(\"dx-field-item-content-location-\" + {\n    right: \"left\",\n    left: \"right\",\n    top: \"bottom\"\n  }[formLabelLocation]);\n  let $label = null;\n  if (needRenderLabel) {\n    if (labelOptions.labelTemplate) {\n      labelOptions.labelTemplateData = getTemplateData(item, editorOptions, formOrLayoutManager);\n    }\n    $label = renderLabel(labelOptions);\n  }\n  if ($label) {\n    const {\n      editorType: editorType\n    } = item;\n    $rootElement.append($label);\n    if (\"top\" === labelLocation || \"left\" === labelLocation) {\n      $rootElement.append($fieldEditorContainer);\n    }\n    if (\"right\" === labelLocation) {\n      $rootElement.prepend($fieldEditorContainer);\n    }\n    if (\"top\" === labelLocation) {\n      $rootElement.addClass(\"dx-label-v-align\");\n    } else {\n      $rootElement.addClass(\"dx-label-h-align\");\n    }\n    if (\"dxCheckBox\" === editorType || \"dxSwitch\" === editorType) {\n      eventsEngine.on($label, clickEventName, () => {\n        eventsEngine.trigger($fieldEditorContainer.children(), clickEventName);\n      });\n    }\n    const toggleControls = [\"dxCheckBox\", \"dxSwitch\", \"dxRadioGroup\"];\n    const isToggleControls = toggleControls.includes(editorType);\n    const labelAlignment = labelOptions.alignment;\n    const isLabelAlignmentLeft = \"left\" === labelAlignment || !labelAlignment;\n    const hasNotTemplate = !template;\n    const isLabelOnTop = \"top\" === labelLocation;\n    if (hasNotTemplate && isToggleControls && isLabelOnTop && isLabelAlignmentLeft) {\n      $fieldEditorContainer.addClass(\"dx-toggle-controls-paddings\");\n    }\n  } else {\n    $rootElement.append($fieldEditorContainer);\n  }\n  let widgetInstance;\n  if (template) {\n    template.render({\n      container: getPublicElement($fieldEditorContainer),\n      model: getTemplateData(item, editorOptions, formOrLayoutManager),\n      onRendered() {\n        const $validationTarget = getValidationTarget($fieldEditorContainer);\n        const validationTargetInstance = tryGetValidationTargetInstance($validationTarget);\n        subscribeWrapperInvalidClassToggle(validationTargetInstance);\n      }\n    });\n  } else {\n    const $div = $(\"<div>\").appendTo($fieldEditorContainer);\n    try {\n      widgetInstance = createComponentCallback($div, item.editorType, editorOptions);\n      widgetInstance.setAria(\"describedby\", helpID);\n      if (labelID) {\n        widgetInstance.setAria(\"labelledby\", labelID);\n      }\n      widgetInstance.setAria(\"required\", isRequired);\n    } catch (e) {\n      errors.log(\"E1035\", e.message);\n    }\n  }\n  const $validationTarget = getValidationTarget($fieldEditorContainer);\n  const validationTargetInstance = $validationTarget && $validationTarget.data(\"dx-validation-target\");\n  if (validationTargetInstance) {\n    const isItemHaveCustomLabel = item.label && item.label.text;\n    const itemName = isItemHaveCustomLabel ? null : name;\n    const fieldName = isItemHaveCustomLabel ? item.label.text : itemName && captionize(itemName);\n    let validationRules;\n    if (isSimpleItem) {\n      if (item.validationRules) {\n        validationRules = item.validationRules;\n      } else {\n        const requiredMessage = format(requiredMessageTemplate, fieldName || \"\");\n        validationRules = item.isRequired ? [{\n          type: \"required\",\n          message: requiredMessage\n        }] : null;\n      }\n    }\n    if (Array.isArray(validationRules) && validationRules.length) {\n      createComponentCallback($validationTarget, Validator, {\n        validationRules: validationRules,\n        validationGroup: validationGroup,\n        dataGetter: () => ({\n          formItem: item\n        })\n      });\n    }\n    subscribeWrapperInvalidClassToggle(validationTargetInstance);\n  }\n  if (helpText && isSimpleItem) {\n    const $editorParent = $fieldEditorContainer.parent();\n    $editorParent.append($(\"<div>\").addClass(\"dx-field-item-content-wrapper\").append($fieldEditorContainer).append($(\"<div>\").addClass(\"dx-field-item-help-text\").attr(\"id\", helpID).text(helpText)));\n  }\n  return {\n    $fieldEditorContainer: $fieldEditorContainer,\n    $rootElement: $rootElement,\n    widgetInstance: widgetInstance\n  };\n}\nfunction getValidationTarget($fieldEditorContainer) {\n  const $editor = $fieldEditorContainer.children().first();\n  return $editor.hasClass(\"dx-template-wrapper\") ? $editor.children().first() : $editor;\n}\nfunction tryGetValidationTargetInstance($validationTarget) {\n  var _$validationTarget$pa;\n  return (null === $validationTarget || void 0 === $validationTarget ? void 0 : $validationTarget.data(\"dx-validation-target\")) || (null === $validationTarget || void 0 === $validationTarget || null === (_$validationTarget$pa = $validationTarget.parent) || void 0 === _$validationTarget$pa || null === (_$validationTarget$pa = _$validationTarget$pa.call($validationTarget)) || void 0 === _$validationTarget$pa ? void 0 : _$validationTarget$pa.data(\"dx-validation-target\"));\n}\nfunction subscribeWrapperInvalidClassToggle(validationTargetInstance) {\n  if (validationTargetInstance && isMaterialBased()) {\n    const wrapperClass = \".dx-field-item-content-wrapper\";\n    const toggleInvalidClass = _ref2 => {\n      let {\n        element: element,\n        component: component\n      } = _ref2;\n      const {\n        isValid: isValid,\n        validationMessageMode: validationMessageMode\n      } = component.option();\n      $(element).parents(wrapperClass).toggleClass(\"dx-invalid\", false === isValid && (component._isFocused() || \"always\" === validationMessageMode));\n    };\n    validationTargetInstance.on(\"optionChanged\", e => {\n      if (\"isValid\" !== e.name) {\n        return;\n      }\n      toggleInvalidClass(e);\n    });\n    validationTargetInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass).on(\"enterKey\", toggleInvalidClass);\n  }\n}\nfunction getTemplateData(item, editorOptions, formOrLayoutManager) {\n  return {\n    dataField: item.dataField,\n    editorType: item.editorType,\n    editorOptions: editorOptions,\n    component: formOrLayoutManager,\n    name: item.name\n  };\n}","map":{"version":3,"names":["name","clickEventName","eventsEngine","getPublicElement","$","captionize","format","isMaterialBased","Validator","errors","FIELD_ITEM_CONTENT_CLASS","renderLabel","FLEX_LAYOUT_CLASS","FIELD_ITEM_OPTIONAL_CLASS","FIELD_ITEM_REQUIRED_CLASS","FIELD_ITEM_CONTENT_WRAPPER_CLASS","FIELD_ITEM_CONTENT_LOCATION_CLASS","FIELD_ITEM_LABEL_ALIGN_CLASS","FIELD_ITEM_HELP_TEXT_CLASS","LABEL_VERTICAL_ALIGNMENT_CLASS","LABEL_HORIZONTAL_ALIGNMENT_CLASS","TOGGLE_CONTROLS_PADDING_CLASS","TEMPLATE_WRAPPER_CLASS","VALIDATION_TARGET_CLASS","INVALID_CLASS","renderFieldItem","_ref","$parent","rootElementCssClassList","formOrLayoutManager","createComponentCallback","labelOptions","labelNeedBaselineAlign","labelLocation","needRenderLabel","formLabelLocation","item","editorOptions","isSimpleItem","isRequired","template","helpID","labelID","helpText","requiredMessageTemplate","validationGroup","$rootElement","addClass","join","appendTo","$fieldEditorContainer","data","right","left","top","$label","labelTemplate","labelTemplateData","getTemplateData","editorType","append","prepend","on","trigger","children","toggleControls","isToggleControls","includes","labelAlignment","alignment","isLabelAlignmentLeft","hasNotTemplate","isLabelOnTop","widgetInstance","render","container","model","onRendered","$validationTarget","getValidationTarget","validationTargetInstance","tryGetValidationTargetInstance","subscribeWrapperInvalidClassToggle","$div","setAria","e","log","message","isItemHaveCustomLabel","label","text","itemName","fieldName","validationRules","requiredMessage","type","Array","isArray","length","dataGetter","formItem","$editorParent","parent","attr","$editor","first","hasClass","_$validationTarget$pa","call","wrapperClass","toggleInvalidClass","_ref2","element","component","isValid","validationMessageMode","option","parents","toggleClass","_isFocused","dataField"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/ui/form/components/m_field_item.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/form/components/m_field_item.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../../core/element\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport {\r\n    captionize\r\n} from \"../../../../core/utils/inflector\";\r\nimport {\r\n    format\r\n} from \"../../../../core/utils/string\";\r\nimport {\r\n    isMaterialBased\r\n} from \"../../../../ui/themes\";\r\nimport Validator from \"../../../../ui/validator\";\r\nimport errors from \"../../../../ui/widget/ui.errors\";\r\nimport {\r\n    FIELD_ITEM_CONTENT_CLASS\r\n} from \"../constants\";\r\nimport {\r\n    renderLabel\r\n} from \"./m_label\";\r\nexport const FLEX_LAYOUT_CLASS = \"dx-flex-layout\";\r\nexport const FIELD_ITEM_OPTIONAL_CLASS = \"dx-field-item-optional\";\r\nexport const FIELD_ITEM_REQUIRED_CLASS = \"dx-field-item-required\";\r\nexport const FIELD_ITEM_CONTENT_WRAPPER_CLASS = \"dx-field-item-content-wrapper\";\r\nexport const FIELD_ITEM_CONTENT_LOCATION_CLASS = \"dx-field-item-content-location-\";\r\nexport const FIELD_ITEM_LABEL_ALIGN_CLASS = \"dx-field-item-label-align\";\r\nexport const FIELD_ITEM_HELP_TEXT_CLASS = \"dx-field-item-help-text\";\r\nexport const LABEL_VERTICAL_ALIGNMENT_CLASS = \"dx-label-v-align\";\r\nexport const LABEL_HORIZONTAL_ALIGNMENT_CLASS = \"dx-label-h-align\";\r\nexport const TOGGLE_CONTROLS_PADDING_CLASS = \"dx-toggle-controls-paddings\";\r\nconst TEMPLATE_WRAPPER_CLASS = \"dx-template-wrapper\";\r\nconst VALIDATION_TARGET_CLASS = \"dx-validation-target\";\r\nconst INVALID_CLASS = \"dx-invalid\";\r\nexport function renderFieldItem(_ref) {\r\n    let {\r\n        $parent: $parent,\r\n        rootElementCssClassList: rootElementCssClassList,\r\n        formOrLayoutManager: formOrLayoutManager,\r\n        createComponentCallback: createComponentCallback,\r\n        labelOptions: labelOptions,\r\n        labelNeedBaselineAlign: labelNeedBaselineAlign,\r\n        labelLocation: labelLocation,\r\n        needRenderLabel: needRenderLabel,\r\n        formLabelLocation: formLabelLocation,\r\n        item: item,\r\n        editorOptions: editorOptions,\r\n        isSimpleItem: isSimpleItem,\r\n        isRequired: isRequired,\r\n        template: template,\r\n        helpID: helpID,\r\n        labelID: labelID,\r\n        name: name,\r\n        helpText: helpText,\r\n        requiredMessageTemplate: requiredMessageTemplate,\r\n        validationGroup: validationGroup\r\n    } = _ref;\r\n    const $rootElement = $(\"<div>\").addClass(rootElementCssClassList.join(\" \")).appendTo($parent);\r\n    $rootElement.addClass(isRequired ? \"dx-field-item-required\" : \"dx-field-item-optional\");\r\n    if (isSimpleItem) {\r\n        $rootElement.addClass(\"dx-flex-layout\")\r\n    }\r\n    if (isSimpleItem && labelNeedBaselineAlign) {\r\n        $rootElement.addClass(\"dx-field-item-label-align\")\r\n    }\r\n    const $fieldEditorContainer = $(\"<div>\");\r\n    $fieldEditorContainer.data(\"dx-form-item\", item);\r\n    $fieldEditorContainer.addClass(FIELD_ITEM_CONTENT_CLASS).addClass(\"dx-field-item-content-location-\" + {\r\n        right: \"left\",\r\n        left: \"right\",\r\n        top: \"bottom\"\r\n    } [formLabelLocation]);\r\n    let $label = null;\r\n    if (needRenderLabel) {\r\n        if (labelOptions.labelTemplate) {\r\n            labelOptions.labelTemplateData = getTemplateData(item, editorOptions, formOrLayoutManager)\r\n        }\r\n        $label = renderLabel(labelOptions)\r\n    }\r\n    if ($label) {\r\n        const {\r\n            editorType: editorType\r\n        } = item;\r\n        $rootElement.append($label);\r\n        if (\"top\" === labelLocation || \"left\" === labelLocation) {\r\n            $rootElement.append($fieldEditorContainer)\r\n        }\r\n        if (\"right\" === labelLocation) {\r\n            $rootElement.prepend($fieldEditorContainer)\r\n        }\r\n        if (\"top\" === labelLocation) {\r\n            $rootElement.addClass(\"dx-label-v-align\")\r\n        } else {\r\n            $rootElement.addClass(\"dx-label-h-align\")\r\n        }\r\n        if (\"dxCheckBox\" === editorType || \"dxSwitch\" === editorType) {\r\n            eventsEngine.on($label, clickEventName, (() => {\r\n                eventsEngine.trigger($fieldEditorContainer.children(), clickEventName)\r\n            }))\r\n        }\r\n        const toggleControls = [\"dxCheckBox\", \"dxSwitch\", \"dxRadioGroup\"];\r\n        const isToggleControls = toggleControls.includes(editorType);\r\n        const labelAlignment = labelOptions.alignment;\r\n        const isLabelAlignmentLeft = \"left\" === labelAlignment || !labelAlignment;\r\n        const hasNotTemplate = !template;\r\n        const isLabelOnTop = \"top\" === labelLocation;\r\n        if (hasNotTemplate && isToggleControls && isLabelOnTop && isLabelAlignmentLeft) {\r\n            $fieldEditorContainer.addClass(\"dx-toggle-controls-paddings\")\r\n        }\r\n    } else {\r\n        $rootElement.append($fieldEditorContainer)\r\n    }\r\n    let widgetInstance;\r\n    if (template) {\r\n        template.render({\r\n            container: getPublicElement($fieldEditorContainer),\r\n            model: getTemplateData(item, editorOptions, formOrLayoutManager),\r\n            onRendered() {\r\n                const $validationTarget = getValidationTarget($fieldEditorContainer);\r\n                const validationTargetInstance = tryGetValidationTargetInstance($validationTarget);\r\n                subscribeWrapperInvalidClassToggle(validationTargetInstance)\r\n            }\r\n        })\r\n    } else {\r\n        const $div = $(\"<div>\").appendTo($fieldEditorContainer);\r\n        try {\r\n            widgetInstance = createComponentCallback($div, item.editorType, editorOptions);\r\n            widgetInstance.setAria(\"describedby\", helpID);\r\n            if (labelID) {\r\n                widgetInstance.setAria(\"labelledby\", labelID)\r\n            }\r\n            widgetInstance.setAria(\"required\", isRequired)\r\n        } catch (e) {\r\n            errors.log(\"E1035\", e.message)\r\n        }\r\n    }\r\n    const $validationTarget = getValidationTarget($fieldEditorContainer);\r\n    const validationTargetInstance = $validationTarget && $validationTarget.data(\"dx-validation-target\");\r\n    if (validationTargetInstance) {\r\n        const isItemHaveCustomLabel = item.label && item.label.text;\r\n        const itemName = isItemHaveCustomLabel ? null : name;\r\n        const fieldName = isItemHaveCustomLabel ? item.label.text : itemName && captionize(itemName);\r\n        let validationRules;\r\n        if (isSimpleItem) {\r\n            if (item.validationRules) {\r\n                validationRules = item.validationRules\r\n            } else {\r\n                const requiredMessage = format(requiredMessageTemplate, fieldName || \"\");\r\n                validationRules = item.isRequired ? [{\r\n                    type: \"required\",\r\n                    message: requiredMessage\r\n                }] : null\r\n            }\r\n        }\r\n        if (Array.isArray(validationRules) && validationRules.length) {\r\n            createComponentCallback($validationTarget, Validator, {\r\n                validationRules: validationRules,\r\n                validationGroup: validationGroup,\r\n                dataGetter: () => ({\r\n                    formItem: item\r\n                })\r\n            })\r\n        }\r\n        subscribeWrapperInvalidClassToggle(validationTargetInstance)\r\n    }\r\n    if (helpText && isSimpleItem) {\r\n        const $editorParent = $fieldEditorContainer.parent();\r\n        $editorParent.append($(\"<div>\").addClass(\"dx-field-item-content-wrapper\").append($fieldEditorContainer).append($(\"<div>\").addClass(\"dx-field-item-help-text\").attr(\"id\", helpID).text(helpText)))\r\n    }\r\n    return {\r\n        $fieldEditorContainer: $fieldEditorContainer,\r\n        $rootElement: $rootElement,\r\n        widgetInstance: widgetInstance\r\n    }\r\n}\r\n\r\nfunction getValidationTarget($fieldEditorContainer) {\r\n    const $editor = $fieldEditorContainer.children().first();\r\n    return $editor.hasClass(\"dx-template-wrapper\") ? $editor.children().first() : $editor\r\n}\r\n\r\nfunction tryGetValidationTargetInstance($validationTarget) {\r\n    var _$validationTarget$pa;\r\n    return (null === $validationTarget || void 0 === $validationTarget ? void 0 : $validationTarget.data(\"dx-validation-target\")) || (null === $validationTarget || void 0 === $validationTarget || null === (_$validationTarget$pa = $validationTarget.parent) || void 0 === _$validationTarget$pa || null === (_$validationTarget$pa = _$validationTarget$pa.call($validationTarget)) || void 0 === _$validationTarget$pa ? void 0 : _$validationTarget$pa.data(\"dx-validation-target\"))\r\n}\r\n\r\nfunction subscribeWrapperInvalidClassToggle(validationTargetInstance) {\r\n    if (validationTargetInstance && isMaterialBased()) {\r\n        const wrapperClass = \".dx-field-item-content-wrapper\";\r\n        const toggleInvalidClass = _ref2 => {\r\n            let {\r\n                element: element,\r\n                component: component\r\n            } = _ref2;\r\n            const {\r\n                isValid: isValid,\r\n                validationMessageMode: validationMessageMode\r\n            } = component.option();\r\n            $(element).parents(wrapperClass).toggleClass(\"dx-invalid\", false === isValid && (component._isFocused() || \"always\" === validationMessageMode))\r\n        };\r\n        validationTargetInstance.on(\"optionChanged\", (e => {\r\n            if (\"isValid\" !== e.name) {\r\n                return\r\n            }\r\n            toggleInvalidClass(e)\r\n        }));\r\n        validationTargetInstance.on(\"focusIn\", toggleInvalidClass).on(\"focusOut\", toggleInvalidClass).on(\"enterKey\", toggleInvalidClass)\r\n    }\r\n}\r\n\r\nfunction getTemplateData(item, editorOptions, formOrLayoutManager) {\r\n    return {\r\n        dataField: item.dataField,\r\n        editorType: item.editorType,\r\n        editorOptions: editorOptions,\r\n        component: formOrLayoutManager,\r\n        name: item.name\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}