{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/form/m_form.item_options_actions.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { data } from \"../../../core/element_data\";\nimport { extend } from \"../../../core/utils/extend\";\nimport ItemOptionAction from \"./m_form.item_option_action\";\nimport { getFullOptionName } from \"./m_form.utils\";\nclass WidgetOptionItemOptionAction extends ItemOptionAction {\n  tryExecute() {\n    const {\n      value: value\n    } = this._options;\n    const instance = this.findInstance();\n    if (instance) {\n      instance.option(value);\n      return true;\n    }\n    return false;\n  }\n}\nclass TabOptionItemOptionAction extends ItemOptionAction {\n  tryExecute() {\n    const tabPanel = this.findInstance();\n    if (tabPanel) {\n      const {\n        optionName: optionName,\n        item: item,\n        value: value\n      } = this._options;\n      const itemIndex = this._itemsRunTimeInfo.findItemIndexByItem(item);\n      if (itemIndex >= 0) {\n        tabPanel.option(getFullOptionName(`items[${itemIndex}]`, optionName), value);\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass SimpleItemTemplateChangedAction extends ItemOptionAction {\n  tryExecute() {\n    return false;\n  }\n}\nclass GroupItemTemplateChangedAction extends ItemOptionAction {\n  tryExecute() {\n    const preparedItem = this.findPreparedItem();\n    if (null != preparedItem && preparedItem._prepareGroupItemTemplate && preparedItem._renderGroupContentTemplate) {\n      preparedItem._prepareGroupItemTemplate(this._options.item.template);\n      preparedItem._renderGroupContentTemplate();\n      return true;\n    }\n    return false;\n  }\n}\nclass TabsOptionItemOptionAction extends ItemOptionAction {\n  tryExecute() {\n    const tabPanel = this.findInstance();\n    if (tabPanel) {\n      const {\n        value: value\n      } = this._options;\n      tabPanel.option(\"dataSource\", value);\n      return true;\n    }\n    return false;\n  }\n}\nclass ValidationRulesItemOptionAction extends ItemOptionAction {\n  tryExecute() {\n    const {\n      item: item\n    } = this._options;\n    const instance = this.findInstance();\n    const validator = instance && data(instance.$element()[0], \"dxValidator\");\n    if (validator && item) {\n      const filterRequired = item => \"required\" === item.type;\n      const oldContainsRequired = (validator.option(\"validationRules\") || []).some(filterRequired);\n      const newContainsRequired = (item.validationRules || []).some(filterRequired);\n      if (!oldContainsRequired && !newContainsRequired || oldContainsRequired && newContainsRequired) {\n        validator.option(\"validationRules\", item.validationRules);\n        return true;\n      }\n    }\n    return false;\n  }\n}\nclass CssClassItemOptionAction extends ItemOptionAction {\n  tryExecute() {\n    const $itemContainer = this.findItemContainer();\n    const {\n      previousValue: previousValue,\n      value: value\n    } = this._options;\n    if ($itemContainer) {\n      $itemContainer.removeClass(previousValue).addClass(value);\n      return true;\n    }\n    return false;\n  }\n}\nconst tryCreateItemOptionAction = (optionName, itemActionOptions) => {\n  switch (optionName) {\n    case \"editorOptions\":\n    case \"buttonOptions\":\n      return new WidgetOptionItemOptionAction(itemActionOptions);\n    case \"validationRules\":\n      return new ValidationRulesItemOptionAction(itemActionOptions);\n    case \"cssClass\":\n      return new CssClassItemOptionAction(itemActionOptions);\n    case \"badge\":\n    case \"disabled\":\n    case \"icon\":\n    case \"tabTemplate\":\n    case \"title\":\n      return new TabOptionItemOptionAction(extend(itemActionOptions, {\n        optionName: optionName\n      }));\n    case \"tabs\":\n      return new TabsOptionItemOptionAction(itemActionOptions);\n    case \"template\":\n      {\n        var _itemActionOptions$it, _itemActionOptions$it2;\n        const itemType = (null === itemActionOptions || void 0 === itemActionOptions || null === (_itemActionOptions$it = itemActionOptions.item) || void 0 === _itemActionOptions$it ? void 0 : _itemActionOptions$it.itemType) ?? (null === (_itemActionOptions$it2 = itemActionOptions.itemsRunTimeInfo.findPreparedItemByItem(null === itemActionOptions || void 0 === itemActionOptions ? void 0 : itemActionOptions.item)) || void 0 === _itemActionOptions$it2 ? void 0 : _itemActionOptions$it2.itemType);\n        if (\"simple\" === itemType) {\n          return new SimpleItemTemplateChangedAction(itemActionOptions);\n        }\n        if (\"group\" === itemType) {\n          return new GroupItemTemplateChangedAction(itemActionOptions);\n        }\n        return new TabOptionItemOptionAction(extend(itemActionOptions, {\n          optionName: optionName\n        }));\n      }\n    default:\n      return null;\n  }\n};\nexport default tryCreateItemOptionAction;","map":{"version":3,"names":["data","extend","ItemOptionAction","getFullOptionName","WidgetOptionItemOptionAction","tryExecute","value","_options","instance","findInstance","option","TabOptionItemOptionAction","tabPanel","optionName","item","itemIndex","_itemsRunTimeInfo","findItemIndexByItem","SimpleItemTemplateChangedAction","GroupItemTemplateChangedAction","preparedItem","findPreparedItem","_prepareGroupItemTemplate","_renderGroupContentTemplate","template","TabsOptionItemOptionAction","ValidationRulesItemOptionAction","validator","$element","filterRequired","type","oldContainsRequired","some","newContainsRequired","validationRules","CssClassItemOptionAction","$itemContainer","findItemContainer","previousValue","removeClass","addClass","tryCreateItemOptionAction","itemActionOptions","_itemActionOptions$it","_itemActionOptions$it2","itemType","itemsRunTimeInfo","findPreparedItemByItem"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/ui/form/m_form.item_options_actions.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/form/m_form.item_options_actions.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    data\r\n} from \"../../../core/element_data\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport ItemOptionAction from \"./m_form.item_option_action\";\r\nimport {\r\n    getFullOptionName\r\n} from \"./m_form.utils\";\r\nclass WidgetOptionItemOptionAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const {\r\n            value: value\r\n        } = this._options;\r\n        const instance = this.findInstance();\r\n        if (instance) {\r\n            instance.option(value);\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\nclass TabOptionItemOptionAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const tabPanel = this.findInstance();\r\n        if (tabPanel) {\r\n            const {\r\n                optionName: optionName,\r\n                item: item,\r\n                value: value\r\n            } = this._options;\r\n            const itemIndex = this._itemsRunTimeInfo.findItemIndexByItem(item);\r\n            if (itemIndex >= 0) {\r\n                tabPanel.option(getFullOptionName(`items[${itemIndex}]`, optionName), value);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}\r\nclass SimpleItemTemplateChangedAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        return false\r\n    }\r\n}\r\nclass GroupItemTemplateChangedAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const preparedItem = this.findPreparedItem();\r\n        if (null != preparedItem && preparedItem._prepareGroupItemTemplate && preparedItem._renderGroupContentTemplate) {\r\n            preparedItem._prepareGroupItemTemplate(this._options.item.template);\r\n            preparedItem._renderGroupContentTemplate();\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\nclass TabsOptionItemOptionAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const tabPanel = this.findInstance();\r\n        if (tabPanel) {\r\n            const {\r\n                value: value\r\n            } = this._options;\r\n            tabPanel.option(\"dataSource\", value);\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\nclass ValidationRulesItemOptionAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const {\r\n            item: item\r\n        } = this._options;\r\n        const instance = this.findInstance();\r\n        const validator = instance && data(instance.$element()[0], \"dxValidator\");\r\n        if (validator && item) {\r\n            const filterRequired = item => \"required\" === item.type;\r\n            const oldContainsRequired = (validator.option(\"validationRules\") || []).some(filterRequired);\r\n            const newContainsRequired = (item.validationRules || []).some(filterRequired);\r\n            if (!oldContainsRequired && !newContainsRequired || oldContainsRequired && newContainsRequired) {\r\n                validator.option(\"validationRules\", item.validationRules);\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n}\r\nclass CssClassItemOptionAction extends ItemOptionAction {\r\n    tryExecute() {\r\n        const $itemContainer = this.findItemContainer();\r\n        const {\r\n            previousValue: previousValue,\r\n            value: value\r\n        } = this._options;\r\n        if ($itemContainer) {\r\n            $itemContainer.removeClass(previousValue).addClass(value);\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n}\r\nconst tryCreateItemOptionAction = (optionName, itemActionOptions) => {\r\n    switch (optionName) {\r\n        case \"editorOptions\":\r\n        case \"buttonOptions\":\r\n            return new WidgetOptionItemOptionAction(itemActionOptions);\r\n        case \"validationRules\":\r\n            return new ValidationRulesItemOptionAction(itemActionOptions);\r\n        case \"cssClass\":\r\n            return new CssClassItemOptionAction(itemActionOptions);\r\n        case \"badge\":\r\n        case \"disabled\":\r\n        case \"icon\":\r\n        case \"tabTemplate\":\r\n        case \"title\":\r\n            return new TabOptionItemOptionAction(extend(itemActionOptions, {\r\n                optionName: optionName\r\n            }));\r\n        case \"tabs\":\r\n            return new TabsOptionItemOptionAction(itemActionOptions);\r\n        case \"template\": {\r\n            var _itemActionOptions$it, _itemActionOptions$it2;\r\n            const itemType = (null === itemActionOptions || void 0 === itemActionOptions || null === (_itemActionOptions$it = itemActionOptions.item) || void 0 === _itemActionOptions$it ? void 0 : _itemActionOptions$it.itemType) ?? (null === (_itemActionOptions$it2 = itemActionOptions.itemsRunTimeInfo.findPreparedItemByItem(null === itemActionOptions || void 0 === itemActionOptions ? void 0 : itemActionOptions.item)) || void 0 === _itemActionOptions$it2 ? void 0 : _itemActionOptions$it2.itemType);\r\n            if (\"simple\" === itemType) {\r\n                return new SimpleItemTemplateChangedAction(itemActionOptions)\r\n            }\r\n            if (\"group\" === itemType) {\r\n                return new GroupItemTemplateChangedAction(itemActionOptions)\r\n            }\r\n            return new TabOptionItemOptionAction(extend(itemActionOptions, {\r\n                optionName: optionName\r\n            }))\r\n        }\r\n        default:\r\n            return null\r\n    }\r\n};\r\nexport default tryCreateItemOptionAction;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}