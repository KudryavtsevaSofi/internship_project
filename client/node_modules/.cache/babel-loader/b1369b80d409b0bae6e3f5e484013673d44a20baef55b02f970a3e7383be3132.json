{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/tabs/tabs.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport holdEvent from \"../../../common/core/events/hold\";\nimport pointerEvents from \"../../../common/core/events/pointer\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport devices from \"../../../core/devices\";\nimport $ from \"../../../core/renderer\";\nimport { BindableTemplate } from \"../../../core/templates/bindable_template\";\nimport { getImageContainer } from \"../../../core/utils/icon\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getHeight, getOuterWidth, getWidth } from \"../../../core/utils/size\";\nimport { isDefined, isPlainObject } from \"../../../core/utils/type\";\nimport { hasWindow } from \"../../../core/utils/window\";\nimport Button from \"../../../ui/button\";\nimport { default as CollectionWidget } from \"../../../ui/collection/ui.collection_widget.live_update\";\nimport { current as currentTheme, isFluent, isMaterial } from \"../../../ui/themes\";\nimport { render } from \"../../../ui/widget/utils.ink_ripple\";\nimport Scrollable from \"../../ui/scroll_view/m_scrollable\";\nimport { isReachedBottom, isReachedLeft, isReachedRight, isReachedTop } from \"../../ui/scroll_view/utils/get_boundary_props\";\nimport { getScrollLeftMax } from \"../../ui/scroll_view/utils/get_scroll_left_max\";\nimport { TABS_EXPANDED_CLASS } from \"./constants\";\nimport TabsItem from \"./item\";\nconst TABS_CLASS = \"dx-tabs\";\nconst TABS_WRAPPER_CLASS = \"dx-tabs-wrapper\";\nconst TABS_STRETCHED_CLASS = \"dx-tabs-stretched\";\nconst TABS_SCROLLABLE_CLASS = \"dx-tabs-scrollable\";\nconst TABS_NAV_BUTTONS_CLASS = \"dx-tabs-nav-buttons\";\nconst OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\nconst TABS_ITEM_CLASS = \"dx-tab\";\nconst TABS_ITEM_SELECTED_CLASS = \"dx-tab-selected\";\nconst TABS_SCROLLING_ENABLED_CLASS = \"dx-tabs-scrolling-enabled\";\nconst TABS_NAV_BUTTON_CLASS = \"dx-tabs-nav-button\";\nconst TABS_LEFT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-left\";\nconst TABS_RIGHT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-right\";\nconst TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\nconst TABS_ITEM_TEXT_SPAN_CLASS = \"dx-tab-text-span\";\nconst TABS_ITEM_TEXT_SPAN_PSEUDO_CLASS = \"dx-tab-text-span-pseudo\";\nconst STATE_DISABLED_CLASS = \"dx-state-disabled\";\nconst FOCUSED_DISABLED_NEXT_TAB_CLASS = \"dx-focused-disabled-next-tab\";\nconst FOCUSED_DISABLED_PREV_TAB_CLASS = \"dx-focused-disabled-prev-tab\";\nconst TABS_ORIENTATION_CLASS = {\n  vertical: \"dx-tabs-vertical\",\n  horizontal: \"dx-tabs-horizontal\"\n};\nconst INDICATOR_POSITION_CLASS = {\n  top: \"dx-tab-indicator-position-top\",\n  right: \"dx-tab-indicator-position-right\",\n  bottom: \"dx-tab-indicator-position-bottom\",\n  left: \"dx-tab-indicator-position-left\"\n};\nconst TABS_ICON_POSITION_CLASS = {\n  top: \"dx-tabs-icon-position-top\",\n  end: \"dx-tabs-icon-position-end\",\n  bottom: \"dx-tabs-icon-position-bottom\",\n  start: \"dx-tabs-icon-position-start\"\n};\nconst TABS_STYLING_MODE_CLASS = {\n  primary: \"dx-tabs-styling-mode-primary\",\n  secondary: \"dx-tabs-styling-mode-secondary\"\n};\nconst TABS_ITEM_DATA_KEY = \"dxTabData\";\nconst BUTTON_NEXT_ICON = \"chevronnext\";\nconst BUTTON_PREV_ICON = \"chevronprev\";\nconst FEEDBACK_HIDE_TIMEOUT = 100;\nconst FEEDBACK_DURATION_INTERVAL = 5;\nconst FEEDBACK_SCROLL_TIMEOUT = 300;\nconst TAB_OFFSET = 30;\nconst ORIENTATION = {\n  horizontal: \"horizontal\",\n  vertical: \"vertical\"\n};\nconst INDICATOR_POSITION = {\n  top: \"top\",\n  right: \"right\",\n  bottom: \"bottom\",\n  left: \"left\"\n};\nconst SCROLLABLE_DIRECTION = {\n  horizontal: \"horizontal\",\n  vertical: \"vertical\"\n};\nconst ICON_POSITION = {\n  top: \"top\",\n  end: \"end\",\n  bottom: \"bottom\",\n  start: \"start\"\n};\nconst STYLING_MODE = {\n  primary: \"primary\",\n  secondary: \"secondary\"\n};\nclass Tabs extends CollectionWidget {\n  _getDefaultOptions() {\n    return _extends({}, super._getDefaultOptions(), {\n      hoverStateEnabled: true,\n      showNavButtons: true,\n      scrollByContent: true,\n      scrollingEnabled: true,\n      selectionMode: \"single\",\n      orientation: ORIENTATION.horizontal,\n      iconPosition: ICON_POSITION.start,\n      stylingMode: STYLING_MODE.primary,\n      activeStateEnabled: true,\n      selectionRequired: false,\n      selectOnFocus: true,\n      loopItemFocus: false,\n      useInkRipple: false,\n      badgeExpr: data => null === data || void 0 === data ? void 0 : data.badge,\n      _itemAttributes: {\n        role: \"tab\"\n      },\n      _indicatorPosition: null\n    });\n  }\n  _defaultOptionsRules() {\n    const themeName = currentTheme();\n    return super._defaultOptionsRules().concat([{\n      device: () => \"desktop\" !== devices.real().deviceType,\n      options: {\n        showNavButtons: false\n      }\n    }, {\n      device: {\n        deviceType: \"desktop\"\n      },\n      options: {\n        scrollByContent: false\n      }\n    }, {\n      device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: () => isFluent(themeName),\n      options: {\n        iconPosition: ICON_POSITION.top,\n        stylingMode: STYLING_MODE.secondary\n      }\n    }, {\n      device: () => isMaterial(themeName),\n      options: {\n        useInkRipple: true,\n        selectOnFocus: false,\n        iconPosition: ICON_POSITION.top\n      }\n    }]);\n  }\n  _init() {\n    const {\n      orientation: orientation,\n      stylingMode: stylingMode,\n      scrollingEnabled: scrollingEnabled\n    } = this.option();\n    const indicatorPosition = this._getIndicatorPosition();\n    super._init();\n    this._activeStateUnit = \".dx-tab\";\n    this.setAria(\"role\", \"tablist\");\n    this.$element().addClass(\"dx-tabs\");\n    this._toggleScrollingEnabledClass(scrollingEnabled);\n    this._toggleOrientationClass(orientation);\n    this._toggleIndicatorPositionClass(indicatorPosition);\n    this._toggleIconPositionClass();\n    this._toggleStylingModeClass(stylingMode);\n    this._renderWrapper();\n    this._renderMultiple();\n    this._feedbackHideTimeout = 100;\n  }\n  _prepareDefaultItemTemplate(data, $container) {\n    const text = isPlainObject(data) ? null === data || void 0 === data ? void 0 : data.text : data;\n    if (isDefined(text)) {\n      const $tabTextSpan = $(\"<span>\").addClass(\"dx-tab-text-span\");\n      $tabTextSpan.text(text);\n      const $tabTextSpanPseudo = $(\"<span>\").addClass(\"dx-tab-text-span-pseudo\");\n      $tabTextSpanPseudo.text(text);\n      $tabTextSpanPseudo.appendTo($tabTextSpan);\n      $tabTextSpan.appendTo($container);\n    }\n    if (isDefined(data.html)) {\n      $container.html(data.html);\n    }\n  }\n  _initTemplates() {\n    super._initTemplates();\n    this._templateManager.addDefaultTemplates({\n      item: new BindableTemplate(($container, data) => {\n        this._prepareDefaultItemTemplate(data, $container);\n        const $iconElement = getImageContainer(data.icon);\n        if ($iconElement) {\n          $iconElement.prependTo($container);\n        }\n        const $tabItem = $(\"<div>\").addClass(\"dx-tab-text\");\n        $container.wrapInner($tabItem);\n      }, [\"text\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\n    });\n  }\n  _itemClass() {\n    return \"dx-tab\";\n  }\n  _selectedItemClass() {\n    return \"dx-tab-selected\";\n  }\n  _itemDataKey() {\n    return \"dxTabData\";\n  }\n  _initMarkup() {\n    super._initMarkup();\n    if (this.option(\"useInkRipple\")) {\n      this._renderInkRipple();\n    }\n    this.$element().addClass(\"dx-overflow-hidden\");\n  }\n  _postProcessRenderItems() {\n    this._renderScrolling();\n  }\n  _renderScrolling() {\n    const removeClasses = [\"dx-tabs-stretched\", TABS_EXPANDED_CLASS, \"dx-overflow-hidden\"];\n    this.$element().removeClass(removeClasses.join(\" \"));\n    if (this.option(\"scrollingEnabled\") && this._isItemsSizeExceeded()) {\n      if (!this._scrollable) {\n        this._renderScrollable();\n        this._renderNavButtons();\n      }\n      const scrollable = this.getScrollable();\n      null === scrollable || void 0 === scrollable || scrollable.update();\n      if (this.option(\"rtlEnabled\")) {\n        const maxLeftOffset = getScrollLeftMax($(this.getScrollable().container()).get(0));\n        null === scrollable || void 0 === scrollable || scrollable.scrollTo({\n          left: maxLeftOffset\n        });\n      }\n      this._updateNavButtonsState();\n      const {\n        selectedItem: selectedItem\n      } = this.option();\n      this._scrollToItem(selectedItem);\n    }\n    if (!(this.option(\"scrollingEnabled\") && this._isItemsSizeExceeded())) {\n      this._cleanScrolling();\n      if (this._needStretchItems()) {\n        this.$element().addClass(\"dx-tabs-stretched\");\n      }\n      this.$element().removeClass(\"dx-tabs-nav-buttons\").addClass(TABS_EXPANDED_CLASS);\n    }\n  }\n  _isVertical() {\n    const {\n      orientation: orientation\n    } = this.option();\n    return orientation === ORIENTATION.vertical;\n  }\n  _isItemsSizeExceeded() {\n    const isVertical = this._isVertical();\n    const isItemsSizeExceeded = isVertical ? this._isItemsHeightExceeded() : this._isItemsWidthExceeded();\n    return isItemsSizeExceeded;\n  }\n  _isItemsWidthExceeded() {\n    const $visibleItems = this._getVisibleItems();\n    const tabItemTotalWidth = this._getSummaryItemsSize(\"width\", $visibleItems, true);\n    const elementWidth = getWidth(this.$element());\n    if ([tabItemTotalWidth, elementWidth].includes(0)) {\n      return false;\n    }\n    const isItemsWidthExceeded = tabItemTotalWidth > elementWidth - 1;\n    return isItemsWidthExceeded;\n  }\n  _isItemsHeightExceeded() {\n    const $visibleItems = this._getVisibleItems();\n    const itemsHeight = this._getSummaryItemsSize(\"height\", $visibleItems, true);\n    const elementHeight = getHeight(this.$element());\n    const isItemsHeightExceeded = itemsHeight - 1 > elementHeight;\n    return isItemsHeightExceeded;\n  }\n  _needStretchItems() {\n    const $visibleItems = this._getVisibleItems();\n    const elementWidth = getWidth(this.$element());\n    const itemsWidth = [];\n    each($visibleItems, (_, item) => {\n      itemsWidth.push(getOuterWidth(item, true));\n    });\n    const maxTabItemWidth = Math.max.apply(null, itemsWidth);\n    const requireWidth = elementWidth / $visibleItems.length;\n    const needStretchItems = maxTabItemWidth > requireWidth + 1;\n    return needStretchItems;\n  }\n  _cleanNavButtons() {\n    if (!this._leftButton || !this._rightButton) {\n      return;\n    }\n    this._leftButton.$element().remove();\n    this._rightButton.$element().remove();\n    this._leftButton = null;\n    this._rightButton = null;\n  }\n  _cleanScrolling() {\n    if (!this._scrollable) {\n      return;\n    }\n    this._$wrapper.appendTo(this.$element());\n    this._scrollable.$element().remove();\n    this._scrollable = null;\n    this._cleanNavButtons();\n  }\n  _renderInkRipple() {\n    this._inkRipple = render();\n  }\n  _getPointerEvent() {\n    return pointerEvents.up;\n  }\n  _toggleActiveState($element, value, e) {\n    super._toggleActiveState($element, value, e);\n    if (!this._inkRipple) {\n      return;\n    }\n    const config = {\n      element: $element,\n      event: e\n    };\n    if (value) {\n      this._inkRipple.showWave(config);\n    } else {\n      this._inkRipple.hideWave(config);\n    }\n  }\n  _renderMultiple() {\n    const {\n      selectionMode: selectionMode\n    } = this.option();\n    if (\"multiple\" === selectionMode) {\n      this.option(\"selectOnFocus\", false);\n    }\n  }\n  _renderWrapper() {\n    this._$wrapper = $(\"<div>\").addClass(\"dx-tabs-wrapper\");\n    this.$element().append(this._$wrapper);\n  }\n  _itemContainer() {\n    return this._$wrapper;\n  }\n  _getScrollableDirection() {\n    const isVertical = this._isVertical();\n    const scrollableDirection = isVertical ? SCROLLABLE_DIRECTION.vertical : SCROLLABLE_DIRECTION.horizontal;\n    return scrollableDirection;\n  }\n  _updateScrollable() {\n    if (this.getScrollable()) {\n      this._cleanScrolling();\n    }\n    this._renderScrolling();\n  }\n  _renderScrollable() {\n    const $itemContainer = this.$element().wrapInner($(\"<div>\").addClass(\"dx-tabs-scrollable\")).children();\n    this._scrollable = this._createComponent($itemContainer, Scrollable, {\n      direction: this._getScrollableDirection(),\n      showScrollbar: \"never\",\n      useKeyboard: false,\n      useNative: false,\n      scrollByContent: this.option(\"scrollByContent\"),\n      onScroll: () => {\n        this._updateNavButtonsState();\n      }\n    });\n    this.$element().append(this._scrollable.$element());\n  }\n  _scrollToItem(item) {\n    if (!this._scrollable) {\n      return;\n    }\n    const $item = this._editStrategy.getItemElement(item);\n    this._scrollable.scrollToElement($item);\n  }\n  _renderNavButtons() {\n    const {\n      showNavButtons: showNavButtons,\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    this.$element().toggleClass(\"dx-tabs-nav-buttons\", showNavButtons);\n    if (!showNavButtons) {\n      return;\n    }\n    this._leftButton = this._createNavButton(-30, rtlEnabled ? \"chevronnext\" : \"chevronprev\");\n    const $leftButton = this._leftButton.$element();\n    $leftButton.addClass(\"dx-tabs-nav-button-left\");\n    this.$element().prepend($leftButton);\n    this._rightButton = this._createNavButton(30, rtlEnabled ? \"chevronprev\" : \"chevronnext\");\n    const $rightButton = this._rightButton.$element();\n    $rightButton.addClass(\"dx-tabs-nav-button-right\");\n    this.$element().append($rightButton);\n  }\n  _updateNavButtonsAriaDisabled() {\n    const buttons = [this._leftButton, this._rightButton];\n    buttons.forEach(button => {\n      null === button || void 0 === button || button.$element().attr({\n        \"aria-disabled\": null\n      });\n    });\n  }\n  _updateNavButtonsState() {\n    const isVertical = this._isVertical();\n    const scrollable = this.getScrollable();\n    if (isVertical) {\n      var _this$_leftButton, _this$_rightButton;\n      null === (_this$_leftButton = this._leftButton) || void 0 === _this$_leftButton || _this$_leftButton.option(\"disabled\", isReachedTop(scrollable.scrollTop(), 1));\n      null === (_this$_rightButton = this._rightButton) || void 0 === _this$_rightButton || _this$_rightButton.option(\"disabled\", isReachedBottom($(scrollable.container()).get(0), scrollable.scrollTop(), 0, 1));\n    } else {\n      var _this$_leftButton2, _this$_rightButton2;\n      null === (_this$_leftButton2 = this._leftButton) || void 0 === _this$_leftButton2 || _this$_leftButton2.option(\"disabled\", isReachedLeft(scrollable.scrollLeft(), 1));\n      null === (_this$_rightButton2 = this._rightButton) || void 0 === _this$_rightButton2 || _this$_rightButton2.option(\"disabled\", isReachedRight($(scrollable.container()).get(0), scrollable.scrollLeft(), 1));\n    }\n    this._updateNavButtonsAriaDisabled();\n  }\n  _updateScrollPosition(offset, duration) {\n    var _this$_scrollable, _this$_scrollable2;\n    null === (_this$_scrollable = this._scrollable) || void 0 === _this$_scrollable || _this$_scrollable.update();\n    null === (_this$_scrollable2 = this._scrollable) || void 0 === _this$_scrollable2 || _this$_scrollable2.scrollBy(offset / duration);\n  }\n  _createNavButton(offset, icon) {\n    const holdAction = this._createAction(() => {\n      this._holdInterval = setInterval(() => {\n        this._updateScrollPosition(offset, 5);\n      }, 5);\n    });\n    const holdEventName = addNamespace(holdEvent.name, \"dxNavButton\");\n    const pointerUpEventName = addNamespace(pointerEvents.up, \"dxNavButton\");\n    const pointerOutEventName = addNamespace(pointerEvents.out, \"dxNavButton\");\n    const navButton = this._createComponent($(\"<div>\").addClass(\"dx-tabs-nav-button\"), Button, {\n      focusStateEnabled: false,\n      icon: icon,\n      integrationOptions: {},\n      elementAttr: {\n        role: null,\n        \"aria-label\": null,\n        \"aria-disabled\": null\n      },\n      onClick: () => {\n        this._updateScrollPosition(offset, 1);\n      }\n    });\n    const $navButton = navButton.$element();\n    eventsEngine.on($navButton, holdEventName, {\n      timeout: 300\n    }, e => {\n      holdAction({\n        event: e\n      });\n    });\n    eventsEngine.on($navButton, pointerUpEventName, () => {\n      this._clearInterval();\n    });\n    eventsEngine.on($navButton, pointerOutEventName, () => {\n      this._clearInterval();\n    });\n    return navButton;\n  }\n  _clearInterval() {\n    if (this._holdInterval) {\n      clearInterval(this._holdInterval);\n    }\n  }\n  _updateSelection(addedSelection) {\n    if (this._scrollable) {\n      return this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]));\n    }\n    return;\n  }\n  _visibilityChanged(visible) {\n    if (visible) {\n      this._dimensionChanged();\n    }\n  }\n  _dimensionChanged() {\n    this._renderScrolling();\n  }\n  _enterKeyHandler(e) {\n    const {\n      focusedElement: focusedElement\n    } = this.option();\n    super._enterKeyHandler(e);\n    this.option(\"focusedElement\", focusedElement);\n  }\n  _itemSelectHandler(e) {\n    const {\n      selectionMode: selectionMode\n    } = this.option();\n    if (\"single\" === selectionMode && this.isItemSelected(e.currentTarget)) {\n      return;\n    }\n    super._itemSelectHandler(e);\n  }\n  _clean() {\n    this._cleanScrolling();\n    super._clean();\n  }\n  _toggleTabsVerticalClass(value) {\n    this.$element().toggleClass(TABS_ORIENTATION_CLASS.vertical, value);\n  }\n  _toggleTabsHorizontalClass(value) {\n    this.$element().toggleClass(TABS_ORIENTATION_CLASS.horizontal, value);\n  }\n  _getIndicatorPositionClass(indicatorPosition) {\n    return INDICATOR_POSITION_CLASS[indicatorPosition];\n  }\n  _getIndicatorPosition() {\n    const {\n      _indicatorPosition: _indicatorPosition,\n      rtlEnabled: rtlEnabled\n    } = this.option();\n    if (_indicatorPosition) {\n      return _indicatorPosition;\n    }\n    const isVertical = this._isVertical();\n    if (rtlEnabled) {\n      return isVertical ? INDICATOR_POSITION.left : INDICATOR_POSITION.bottom;\n    }\n    return isVertical ? INDICATOR_POSITION.right : INDICATOR_POSITION.bottom;\n  }\n  _toggleIndicatorPositionClass(indicatorPosition) {\n    const newClass = this._getIndicatorPositionClass(indicatorPosition);\n    this._toggleElementClasses(INDICATOR_POSITION_CLASS, newClass);\n  }\n  _toggleScrollingEnabledClass(scrollingEnabled) {\n    this.$element().toggleClass(\"dx-tabs-scrolling-enabled\", Boolean(scrollingEnabled));\n  }\n  _toggleOrientationClass(orientation) {\n    const isVertical = orientation === ORIENTATION.vertical;\n    this._toggleTabsVerticalClass(isVertical);\n    this._toggleTabsHorizontalClass(!isVertical);\n  }\n  _getTabsIconPositionClass() {\n    const {\n      iconPosition: iconPosition\n    } = this.option();\n    switch (iconPosition) {\n      case ICON_POSITION.top:\n        return TABS_ICON_POSITION_CLASS.top;\n      case ICON_POSITION.end:\n        return TABS_ICON_POSITION_CLASS.end;\n      case ICON_POSITION.bottom:\n        return TABS_ICON_POSITION_CLASS.bottom;\n      default:\n        return TABS_ICON_POSITION_CLASS.start;\n    }\n  }\n  _toggleIconPositionClass() {\n    const newClass = this._getTabsIconPositionClass();\n    this._toggleElementClasses(TABS_ICON_POSITION_CLASS, newClass);\n  }\n  _toggleStylingModeClass(value) {\n    const newClass = TABS_STYLING_MODE_CLASS[value ?? \"primary\"];\n    this._toggleElementClasses(TABS_STYLING_MODE_CLASS, newClass);\n  }\n  _toggleElementClasses(classMap, newClass) {\n    for (const key in classMap) {\n      this.$element().removeClass(classMap[key]);\n    }\n    this.$element().addClass(newClass);\n  }\n  _toggleFocusedDisabledNextClass(currentIndex, isNextDisabled) {\n    this._itemElements().eq(currentIndex).toggleClass(\"dx-focused-disabled-next-tab\", isNextDisabled);\n  }\n  _toggleFocusedDisabledPrevClass(currentIndex, isPrevDisabled) {\n    this._itemElements().eq(currentIndex).toggleClass(\"dx-focused-disabled-prev-tab\", isPrevDisabled);\n  }\n  _toggleFocusedDisabledClasses(value) {\n    const {\n      selectedIndex: currentIndex\n    } = this.option();\n    this._itemElements().removeClass(\"dx-focused-disabled-next-tab\").removeClass(\"dx-focused-disabled-prev-tab\");\n    const prevItemIndex = currentIndex - 1;\n    const nextItemIndex = currentIndex + 1;\n    const nextFocusedIndex = $(value).index();\n    const isNextDisabled = this._itemElements().eq(nextItemIndex).hasClass(\"dx-state-disabled\");\n    const isPrevDisabled = this._itemElements().eq(prevItemIndex).hasClass(\"dx-state-disabled\");\n    const shouldNextClassBeSetted = isNextDisabled && nextFocusedIndex === nextItemIndex;\n    const shouldPrevClassBeSetted = isPrevDisabled && nextFocusedIndex === prevItemIndex;\n    this._toggleFocusedDisabledNextClass(currentIndex, shouldNextClassBeSetted);\n    this._toggleFocusedDisabledPrevClass(currentIndex, shouldPrevClassBeSetted);\n  }\n  _updateFocusedElement() {\n    const {\n      focusStateEnabled: focusStateEnabled,\n      selectedIndex: selectedIndex\n    } = this.option();\n    const itemElements = this._itemElements();\n    if (focusStateEnabled && itemElements.length) {\n      const selectedItem = itemElements.get(selectedIndex);\n      this.option({\n        focusedElement: selectedItem\n      });\n    }\n  }\n  _optionChanged(args) {\n    var _this$_scrollable3;\n    const {\n      name: name,\n      value: value\n    } = args;\n    switch (name) {\n      case \"useInkRipple\":\n      case \"scrollingEnabled\":\n        this._toggleScrollingEnabledClass(value);\n        this._invalidate();\n        break;\n      case \"showNavButtons\":\n      case \"badgeExpr\":\n        this._invalidate();\n        break;\n      case \"scrollByContent\":\n        null === (_this$_scrollable3 = this._scrollable) || void 0 === _this$_scrollable3 || _this$_scrollable3.option(name, value);\n        break;\n      case \"width\":\n      case \"height\":\n        super._optionChanged(args);\n        this._dimensionChanged();\n        break;\n      case \"selectionMode\":\n        this._renderMultiple();\n        super._optionChanged(args);\n        break;\n      case \"focusedElement\":\n        this._toggleFocusedDisabledClasses(value);\n        super._optionChanged(args);\n        this._scrollToItem(value);\n        break;\n      case \"rtlEnabled\":\n        {\n          super._optionChanged(args);\n          const indicatorPosition = this._getIndicatorPosition();\n          this._toggleIndicatorPositionClass(indicatorPosition);\n          break;\n        }\n      case \"orientation\":\n        {\n          this._toggleOrientationClass(value);\n          const indicatorPosition = this._getIndicatorPosition();\n          this._toggleIndicatorPositionClass(indicatorPosition);\n          if (hasWindow()) {\n            this._updateScrollable();\n          }\n          break;\n        }\n      case \"iconPosition\":\n        this._toggleIconPositionClass();\n        if (hasWindow()) {\n          this._dimensionChanged();\n        }\n        break;\n      case \"stylingMode\":\n        this._toggleStylingModeClass(value);\n        if (hasWindow()) {\n          this._dimensionChanged();\n        }\n        break;\n      case \"_indicatorPosition\":\n        {\n          const indicatorPosition = this._getIndicatorPosition();\n          this._toggleIndicatorPositionClass(indicatorPosition);\n          break;\n        }\n      case \"selectedIndex\":\n      case \"selectedItem\":\n      case \"selectedItems\":\n        super._optionChanged(args);\n        this._updateFocusedElement();\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  _afterItemElementInserted() {\n    super._afterItemElementInserted();\n    this._planPostRenderActions();\n  }\n  _afterItemElementDeleted($item, deletedActionArgs) {\n    super._afterItemElementDeleted($item, deletedActionArgs);\n    this._renderScrolling();\n  }\n  getScrollable() {\n    return this._scrollable;\n  }\n}\nTabs.ItemClass = TabsItem;\nregisterComponent(\"dxTabs\", Tabs);\nexport default Tabs;","map":{"version":3,"names":["_extends","eventsEngine","holdEvent","pointerEvents","addNamespace","registerComponent","devices","$","BindableTemplate","getImageContainer","each","getHeight","getOuterWidth","getWidth","isDefined","isPlainObject","hasWindow","Button","default","CollectionWidget","current","currentTheme","isFluent","isMaterial","render","Scrollable","isReachedBottom","isReachedLeft","isReachedRight","isReachedTop","getScrollLeftMax","TABS_EXPANDED_CLASS","TabsItem","TABS_CLASS","TABS_WRAPPER_CLASS","TABS_STRETCHED_CLASS","TABS_SCROLLABLE_CLASS","TABS_NAV_BUTTONS_CLASS","OVERFLOW_HIDDEN_CLASS","TABS_ITEM_CLASS","TABS_ITEM_SELECTED_CLASS","TABS_SCROLLING_ENABLED_CLASS","TABS_NAV_BUTTON_CLASS","TABS_LEFT_NAV_BUTTON_CLASS","TABS_RIGHT_NAV_BUTTON_CLASS","TABS_ITEM_TEXT_CLASS","TABS_ITEM_TEXT_SPAN_CLASS","TABS_ITEM_TEXT_SPAN_PSEUDO_CLASS","STATE_DISABLED_CLASS","FOCUSED_DISABLED_NEXT_TAB_CLASS","FOCUSED_DISABLED_PREV_TAB_CLASS","TABS_ORIENTATION_CLASS","vertical","horizontal","INDICATOR_POSITION_CLASS","top","right","bottom","left","TABS_ICON_POSITION_CLASS","end","start","TABS_STYLING_MODE_CLASS","primary","secondary","TABS_ITEM_DATA_KEY","BUTTON_NEXT_ICON","BUTTON_PREV_ICON","FEEDBACK_HIDE_TIMEOUT","FEEDBACK_DURATION_INTERVAL","FEEDBACK_SCROLL_TIMEOUT","TAB_OFFSET","ORIENTATION","INDICATOR_POSITION","SCROLLABLE_DIRECTION","ICON_POSITION","STYLING_MODE","Tabs","_getDefaultOptions","hoverStateEnabled","showNavButtons","scrollByContent","scrollingEnabled","selectionMode","orientation","iconPosition","stylingMode","activeStateEnabled","selectionRequired","selectOnFocus","loopItemFocus","useInkRipple","badgeExpr","data","badge","_itemAttributes","role","_indicatorPosition","_defaultOptionsRules","themeName","concat","device","real","deviceType","options","isSimulator","focusStateEnabled","_init","option","indicatorPosition","_getIndicatorPosition","_activeStateUnit","setAria","$element","addClass","_toggleScrollingEnabledClass","_toggleOrientationClass","_toggleIndicatorPositionClass","_toggleIconPositionClass","_toggleStylingModeClass","_renderWrapper","_renderMultiple","_feedbackHideTimeout","_prepareDefaultItemTemplate","$container","text","$tabTextSpan","$tabTextSpanPseudo","appendTo","html","_initTemplates","_templateManager","addDefaultTemplates","item","$iconElement","icon","prependTo","$tabItem","wrapInner","_itemClass","_selectedItemClass","_itemDataKey","_initMarkup","_renderInkRipple","_postProcessRenderItems","_renderScrolling","removeClasses","removeClass","join","_isItemsSizeExceeded","_scrollable","_renderScrollable","_renderNavButtons","scrollable","getScrollable","update","maxLeftOffset","container","get","scrollTo","_updateNavButtonsState","selectedItem","_scrollToItem","_cleanScrolling","_needStretchItems","_isVertical","isVertical","isItemsSizeExceeded","_isItemsHeightExceeded","_isItemsWidthExceeded","$visibleItems","_getVisibleItems","tabItemTotalWidth","_getSummaryItemsSize","elementWidth","includes","isItemsWidthExceeded","itemsHeight","elementHeight","isItemsHeightExceeded","itemsWidth","_","push","maxTabItemWidth","Math","max","apply","requireWidth","length","needStretchItems","_cleanNavButtons","_leftButton","_rightButton","remove","_$wrapper","_inkRipple","_getPointerEvent","up","_toggleActiveState","value","e","config","element","event","showWave","hideWave","append","_itemContainer","_getScrollableDirection","scrollableDirection","_updateScrollable","$itemContainer","children","_createComponent","direction","showScrollbar","useKeyboard","useNative","onScroll","$item","_editStrategy","getItemElement","scrollToElement","rtlEnabled","toggleClass","_createNavButton","$leftButton","prepend","$rightButton","_updateNavButtonsAriaDisabled","buttons","forEach","button","attr","_this$_leftButton","_this$_rightButton","scrollTop","_this$_leftButton2","_this$_rightButton2","scrollLeft","_updateScrollPosition","offset","duration","_this$_scrollable","_this$_scrollable2","scrollBy","holdAction","_createAction","_holdInterval","setInterval","holdEventName","name","pointerUpEventName","pointerOutEventName","out","navButton","integrationOptions","elementAttr","onClick","$navButton","on","timeout","_clearInterval","clearInterval","_updateSelection","addedSelection","itemElements","eq","_visibilityChanged","visible","_dimensionChanged","_enterKeyHandler","focusedElement","_itemSelectHandler","isItemSelected","currentTarget","_clean","_toggleTabsVerticalClass","_toggleTabsHorizontalClass","_getIndicatorPositionClass","newClass","_toggleElementClasses","Boolean","_getTabsIconPositionClass","classMap","key","_toggleFocusedDisabledNextClass","currentIndex","isNextDisabled","_itemElements","_toggleFocusedDisabledPrevClass","isPrevDisabled","_toggleFocusedDisabledClasses","selectedIndex","prevItemIndex","nextItemIndex","nextFocusedIndex","index","hasClass","shouldNextClassBeSetted","shouldPrevClassBeSetted","_updateFocusedElement","_optionChanged","args","_this$_scrollable3","_invalidate","_afterItemElementInserted","_planPostRenderActions","_afterItemElementDeleted","deletedActionArgs","ItemClass"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/ui/tabs/tabs.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/tabs/tabs.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport holdEvent from \"../../../common/core/events/hold\";\r\nimport pointerEvents from \"../../../common/core/events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport devices from \"../../../core/devices\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../../core/templates/bindable_template\";\r\nimport {\r\n    getImageContainer\r\n} from \"../../../core/utils/icon\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDefined,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../../core/utils/window\";\r\nimport Button from \"../../../ui/button\";\r\nimport {\r\n    default as CollectionWidget\r\n} from \"../../../ui/collection/ui.collection_widget.live_update\";\r\nimport {\r\n    current as currentTheme,\r\n    isFluent,\r\n    isMaterial\r\n} from \"../../../ui/themes\";\r\nimport {\r\n    render\r\n} from \"../../../ui/widget/utils.ink_ripple\";\r\nimport Scrollable from \"../../ui/scroll_view/m_scrollable\";\r\nimport {\r\n    isReachedBottom,\r\n    isReachedLeft,\r\n    isReachedRight,\r\n    isReachedTop\r\n} from \"../../ui/scroll_view/utils/get_boundary_props\";\r\nimport {\r\n    getScrollLeftMax\r\n} from \"../../ui/scroll_view/utils/get_scroll_left_max\";\r\nimport {\r\n    TABS_EXPANDED_CLASS\r\n} from \"./constants\";\r\nimport TabsItem from \"./item\";\r\nconst TABS_CLASS = \"dx-tabs\";\r\nconst TABS_WRAPPER_CLASS = \"dx-tabs-wrapper\";\r\nconst TABS_STRETCHED_CLASS = \"dx-tabs-stretched\";\r\nconst TABS_SCROLLABLE_CLASS = \"dx-tabs-scrollable\";\r\nconst TABS_NAV_BUTTONS_CLASS = \"dx-tabs-nav-buttons\";\r\nconst OVERFLOW_HIDDEN_CLASS = \"dx-overflow-hidden\";\r\nconst TABS_ITEM_CLASS = \"dx-tab\";\r\nconst TABS_ITEM_SELECTED_CLASS = \"dx-tab-selected\";\r\nconst TABS_SCROLLING_ENABLED_CLASS = \"dx-tabs-scrolling-enabled\";\r\nconst TABS_NAV_BUTTON_CLASS = \"dx-tabs-nav-button\";\r\nconst TABS_LEFT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-left\";\r\nconst TABS_RIGHT_NAV_BUTTON_CLASS = \"dx-tabs-nav-button-right\";\r\nconst TABS_ITEM_TEXT_CLASS = \"dx-tab-text\";\r\nconst TABS_ITEM_TEXT_SPAN_CLASS = \"dx-tab-text-span\";\r\nconst TABS_ITEM_TEXT_SPAN_PSEUDO_CLASS = \"dx-tab-text-span-pseudo\";\r\nconst STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nconst FOCUSED_DISABLED_NEXT_TAB_CLASS = \"dx-focused-disabled-next-tab\";\r\nconst FOCUSED_DISABLED_PREV_TAB_CLASS = \"dx-focused-disabled-prev-tab\";\r\nconst TABS_ORIENTATION_CLASS = {\r\n    vertical: \"dx-tabs-vertical\",\r\n    horizontal: \"dx-tabs-horizontal\"\r\n};\r\nconst INDICATOR_POSITION_CLASS = {\r\n    top: \"dx-tab-indicator-position-top\",\r\n    right: \"dx-tab-indicator-position-right\",\r\n    bottom: \"dx-tab-indicator-position-bottom\",\r\n    left: \"dx-tab-indicator-position-left\"\r\n};\r\nconst TABS_ICON_POSITION_CLASS = {\r\n    top: \"dx-tabs-icon-position-top\",\r\n    end: \"dx-tabs-icon-position-end\",\r\n    bottom: \"dx-tabs-icon-position-bottom\",\r\n    start: \"dx-tabs-icon-position-start\"\r\n};\r\nconst TABS_STYLING_MODE_CLASS = {\r\n    primary: \"dx-tabs-styling-mode-primary\",\r\n    secondary: \"dx-tabs-styling-mode-secondary\"\r\n};\r\nconst TABS_ITEM_DATA_KEY = \"dxTabData\";\r\nconst BUTTON_NEXT_ICON = \"chevronnext\";\r\nconst BUTTON_PREV_ICON = \"chevronprev\";\r\nconst FEEDBACK_HIDE_TIMEOUT = 100;\r\nconst FEEDBACK_DURATION_INTERVAL = 5;\r\nconst FEEDBACK_SCROLL_TIMEOUT = 300;\r\nconst TAB_OFFSET = 30;\r\nconst ORIENTATION = {\r\n    horizontal: \"horizontal\",\r\n    vertical: \"vertical\"\r\n};\r\nconst INDICATOR_POSITION = {\r\n    top: \"top\",\r\n    right: \"right\",\r\n    bottom: \"bottom\",\r\n    left: \"left\"\r\n};\r\nconst SCROLLABLE_DIRECTION = {\r\n    horizontal: \"horizontal\",\r\n    vertical: \"vertical\"\r\n};\r\nconst ICON_POSITION = {\r\n    top: \"top\",\r\n    end: \"end\",\r\n    bottom: \"bottom\",\r\n    start: \"start\"\r\n};\r\nconst STYLING_MODE = {\r\n    primary: \"primary\",\r\n    secondary: \"secondary\"\r\n};\r\nclass Tabs extends CollectionWidget {\r\n    _getDefaultOptions() {\r\n        return _extends({}, super._getDefaultOptions(), {\r\n            hoverStateEnabled: true,\r\n            showNavButtons: true,\r\n            scrollByContent: true,\r\n            scrollingEnabled: true,\r\n            selectionMode: \"single\",\r\n            orientation: ORIENTATION.horizontal,\r\n            iconPosition: ICON_POSITION.start,\r\n            stylingMode: STYLING_MODE.primary,\r\n            activeStateEnabled: true,\r\n            selectionRequired: false,\r\n            selectOnFocus: true,\r\n            loopItemFocus: false,\r\n            useInkRipple: false,\r\n            badgeExpr: data => null === data || void 0 === data ? void 0 : data.badge,\r\n            _itemAttributes: {\r\n                role: \"tab\"\r\n            },\r\n            _indicatorPosition: null\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        const themeName = currentTheme();\r\n        return super._defaultOptionsRules().concat([{\r\n            device: () => \"desktop\" !== devices.real().deviceType,\r\n            options: {\r\n                showNavButtons: false\r\n            }\r\n        }, {\r\n            device: {\r\n                deviceType: \"desktop\"\r\n            },\r\n            options: {\r\n                scrollByContent: false\r\n            }\r\n        }, {\r\n            device: () => \"desktop\" === devices.real().deviceType && !devices.isSimulator(),\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: () => isFluent(themeName),\r\n            options: {\r\n                iconPosition: ICON_POSITION.top,\r\n                stylingMode: STYLING_MODE.secondary\r\n            }\r\n        }, {\r\n            device: () => isMaterial(themeName),\r\n            options: {\r\n                useInkRipple: true,\r\n                selectOnFocus: false,\r\n                iconPosition: ICON_POSITION.top\r\n            }\r\n        }])\r\n    }\r\n    _init() {\r\n        const {\r\n            orientation: orientation,\r\n            stylingMode: stylingMode,\r\n            scrollingEnabled: scrollingEnabled\r\n        } = this.option();\r\n        const indicatorPosition = this._getIndicatorPosition();\r\n        super._init();\r\n        this._activeStateUnit = \".dx-tab\";\r\n        this.setAria(\"role\", \"tablist\");\r\n        this.$element().addClass(\"dx-tabs\");\r\n        this._toggleScrollingEnabledClass(scrollingEnabled);\r\n        this._toggleOrientationClass(orientation);\r\n        this._toggleIndicatorPositionClass(indicatorPosition);\r\n        this._toggleIconPositionClass();\r\n        this._toggleStylingModeClass(stylingMode);\r\n        this._renderWrapper();\r\n        this._renderMultiple();\r\n        this._feedbackHideTimeout = 100\r\n    }\r\n    _prepareDefaultItemTemplate(data, $container) {\r\n        const text = isPlainObject(data) ? null === data || void 0 === data ? void 0 : data.text : data;\r\n        if (isDefined(text)) {\r\n            const $tabTextSpan = $(\"<span>\").addClass(\"dx-tab-text-span\");\r\n            $tabTextSpan.text(text);\r\n            const $tabTextSpanPseudo = $(\"<span>\").addClass(\"dx-tab-text-span-pseudo\");\r\n            $tabTextSpanPseudo.text(text);\r\n            $tabTextSpanPseudo.appendTo($tabTextSpan);\r\n            $tabTextSpan.appendTo($container)\r\n        }\r\n        if (isDefined(data.html)) {\r\n            $container.html(data.html)\r\n        }\r\n    }\r\n    _initTemplates() {\r\n        super._initTemplates();\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate((($container, data) => {\r\n                this._prepareDefaultItemTemplate(data, $container);\r\n                const $iconElement = getImageContainer(data.icon);\r\n                if ($iconElement) {\r\n                    $iconElement.prependTo($container)\r\n                }\r\n                const $tabItem = $(\"<div>\").addClass(\"dx-tab-text\");\r\n                $container.wrapInner($tabItem)\r\n            }), [\"text\", \"html\", \"icon\"], this.option(\"integrationOptions.watchMethod\"))\r\n        })\r\n    }\r\n    _itemClass() {\r\n        return \"dx-tab\"\r\n    }\r\n    _selectedItemClass() {\r\n        return \"dx-tab-selected\"\r\n    }\r\n    _itemDataKey() {\r\n        return \"dxTabData\"\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        if (this.option(\"useInkRipple\")) {\r\n            this._renderInkRipple()\r\n        }\r\n        this.$element().addClass(\"dx-overflow-hidden\")\r\n    }\r\n    _postProcessRenderItems() {\r\n        this._renderScrolling()\r\n    }\r\n    _renderScrolling() {\r\n        const removeClasses = [\"dx-tabs-stretched\", TABS_EXPANDED_CLASS, \"dx-overflow-hidden\"];\r\n        this.$element().removeClass(removeClasses.join(\" \"));\r\n        if (this.option(\"scrollingEnabled\") && this._isItemsSizeExceeded()) {\r\n            if (!this._scrollable) {\r\n                this._renderScrollable();\r\n                this._renderNavButtons()\r\n            }\r\n            const scrollable = this.getScrollable();\r\n            null === scrollable || void 0 === scrollable || scrollable.update();\r\n            if (this.option(\"rtlEnabled\")) {\r\n                const maxLeftOffset = getScrollLeftMax($(this.getScrollable().container()).get(0));\r\n                null === scrollable || void 0 === scrollable || scrollable.scrollTo({\r\n                    left: maxLeftOffset\r\n                })\r\n            }\r\n            this._updateNavButtonsState();\r\n            const {\r\n                selectedItem: selectedItem\r\n            } = this.option();\r\n            this._scrollToItem(selectedItem)\r\n        }\r\n        if (!(this.option(\"scrollingEnabled\") && this._isItemsSizeExceeded())) {\r\n            this._cleanScrolling();\r\n            if (this._needStretchItems()) {\r\n                this.$element().addClass(\"dx-tabs-stretched\")\r\n            }\r\n            this.$element().removeClass(\"dx-tabs-nav-buttons\").addClass(TABS_EXPANDED_CLASS)\r\n        }\r\n    }\r\n    _isVertical() {\r\n        const {\r\n            orientation: orientation\r\n        } = this.option();\r\n        return orientation === ORIENTATION.vertical\r\n    }\r\n    _isItemsSizeExceeded() {\r\n        const isVertical = this._isVertical();\r\n        const isItemsSizeExceeded = isVertical ? this._isItemsHeightExceeded() : this._isItemsWidthExceeded();\r\n        return isItemsSizeExceeded\r\n    }\r\n    _isItemsWidthExceeded() {\r\n        const $visibleItems = this._getVisibleItems();\r\n        const tabItemTotalWidth = this._getSummaryItemsSize(\"width\", $visibleItems, true);\r\n        const elementWidth = getWidth(this.$element());\r\n        if ([tabItemTotalWidth, elementWidth].includes(0)) {\r\n            return false\r\n        }\r\n        const isItemsWidthExceeded = tabItemTotalWidth > elementWidth - 1;\r\n        return isItemsWidthExceeded\r\n    }\r\n    _isItemsHeightExceeded() {\r\n        const $visibleItems = this._getVisibleItems();\r\n        const itemsHeight = this._getSummaryItemsSize(\"height\", $visibleItems, true);\r\n        const elementHeight = getHeight(this.$element());\r\n        const isItemsHeightExceeded = itemsHeight - 1 > elementHeight;\r\n        return isItemsHeightExceeded\r\n    }\r\n    _needStretchItems() {\r\n        const $visibleItems = this._getVisibleItems();\r\n        const elementWidth = getWidth(this.$element());\r\n        const itemsWidth = [];\r\n        each($visibleItems, ((_, item) => {\r\n            itemsWidth.push(getOuterWidth(item, true))\r\n        }));\r\n        const maxTabItemWidth = Math.max.apply(null, itemsWidth);\r\n        const requireWidth = elementWidth / $visibleItems.length;\r\n        const needStretchItems = maxTabItemWidth > requireWidth + 1;\r\n        return needStretchItems\r\n    }\r\n    _cleanNavButtons() {\r\n        if (!this._leftButton || !this._rightButton) {\r\n            return\r\n        }\r\n        this._leftButton.$element().remove();\r\n        this._rightButton.$element().remove();\r\n        this._leftButton = null;\r\n        this._rightButton = null\r\n    }\r\n    _cleanScrolling() {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        this._$wrapper.appendTo(this.$element());\r\n        this._scrollable.$element().remove();\r\n        this._scrollable = null;\r\n        this._cleanNavButtons()\r\n    }\r\n    _renderInkRipple() {\r\n        this._inkRipple = render()\r\n    }\r\n    _getPointerEvent() {\r\n        return pointerEvents.up\r\n    }\r\n    _toggleActiveState($element, value, e) {\r\n        super._toggleActiveState($element, value, e);\r\n        if (!this._inkRipple) {\r\n            return\r\n        }\r\n        const config = {\r\n            element: $element,\r\n            event: e\r\n        };\r\n        if (value) {\r\n            this._inkRipple.showWave(config)\r\n        } else {\r\n            this._inkRipple.hideWave(config)\r\n        }\r\n    }\r\n    _renderMultiple() {\r\n        const {\r\n            selectionMode: selectionMode\r\n        } = this.option();\r\n        if (\"multiple\" === selectionMode) {\r\n            this.option(\"selectOnFocus\", false)\r\n        }\r\n    }\r\n    _renderWrapper() {\r\n        this._$wrapper = $(\"<div>\").addClass(\"dx-tabs-wrapper\");\r\n        this.$element().append(this._$wrapper)\r\n    }\r\n    _itemContainer() {\r\n        return this._$wrapper\r\n    }\r\n    _getScrollableDirection() {\r\n        const isVertical = this._isVertical();\r\n        const scrollableDirection = isVertical ? SCROLLABLE_DIRECTION.vertical : SCROLLABLE_DIRECTION.horizontal;\r\n        return scrollableDirection\r\n    }\r\n    _updateScrollable() {\r\n        if (this.getScrollable()) {\r\n            this._cleanScrolling()\r\n        }\r\n        this._renderScrolling()\r\n    }\r\n    _renderScrollable() {\r\n        const $itemContainer = this.$element().wrapInner($(\"<div>\").addClass(\"dx-tabs-scrollable\")).children();\r\n        this._scrollable = this._createComponent($itemContainer, Scrollable, {\r\n            direction: this._getScrollableDirection(),\r\n            showScrollbar: \"never\",\r\n            useKeyboard: false,\r\n            useNative: false,\r\n            scrollByContent: this.option(\"scrollByContent\"),\r\n            onScroll: () => {\r\n                this._updateNavButtonsState()\r\n            }\r\n        });\r\n        this.$element().append(this._scrollable.$element())\r\n    }\r\n    _scrollToItem(item) {\r\n        if (!this._scrollable) {\r\n            return\r\n        }\r\n        const $item = this._editStrategy.getItemElement(item);\r\n        this._scrollable.scrollToElement($item)\r\n    }\r\n    _renderNavButtons() {\r\n        const {\r\n            showNavButtons: showNavButtons,\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        this.$element().toggleClass(\"dx-tabs-nav-buttons\", showNavButtons);\r\n        if (!showNavButtons) {\r\n            return\r\n        }\r\n        this._leftButton = this._createNavButton(-30, rtlEnabled ? \"chevronnext\" : \"chevronprev\");\r\n        const $leftButton = this._leftButton.$element();\r\n        $leftButton.addClass(\"dx-tabs-nav-button-left\");\r\n        this.$element().prepend($leftButton);\r\n        this._rightButton = this._createNavButton(30, rtlEnabled ? \"chevronprev\" : \"chevronnext\");\r\n        const $rightButton = this._rightButton.$element();\r\n        $rightButton.addClass(\"dx-tabs-nav-button-right\");\r\n        this.$element().append($rightButton)\r\n    }\r\n    _updateNavButtonsAriaDisabled() {\r\n        const buttons = [this._leftButton, this._rightButton];\r\n        buttons.forEach((button => {\r\n            null === button || void 0 === button || button.$element().attr({\r\n                \"aria-disabled\": null\r\n            })\r\n        }))\r\n    }\r\n    _updateNavButtonsState() {\r\n        const isVertical = this._isVertical();\r\n        const scrollable = this.getScrollable();\r\n        if (isVertical) {\r\n            var _this$_leftButton, _this$_rightButton;\r\n            null === (_this$_leftButton = this._leftButton) || void 0 === _this$_leftButton || _this$_leftButton.option(\"disabled\", isReachedTop(scrollable.scrollTop(), 1));\r\n            null === (_this$_rightButton = this._rightButton) || void 0 === _this$_rightButton || _this$_rightButton.option(\"disabled\", isReachedBottom($(scrollable.container()).get(0), scrollable.scrollTop(), 0, 1))\r\n        } else {\r\n            var _this$_leftButton2, _this$_rightButton2;\r\n            null === (_this$_leftButton2 = this._leftButton) || void 0 === _this$_leftButton2 || _this$_leftButton2.option(\"disabled\", isReachedLeft(scrollable.scrollLeft(), 1));\r\n            null === (_this$_rightButton2 = this._rightButton) || void 0 === _this$_rightButton2 || _this$_rightButton2.option(\"disabled\", isReachedRight($(scrollable.container()).get(0), scrollable.scrollLeft(), 1))\r\n        }\r\n        this._updateNavButtonsAriaDisabled()\r\n    }\r\n    _updateScrollPosition(offset, duration) {\r\n        var _this$_scrollable, _this$_scrollable2;\r\n        null === (_this$_scrollable = this._scrollable) || void 0 === _this$_scrollable || _this$_scrollable.update();\r\n        null === (_this$_scrollable2 = this._scrollable) || void 0 === _this$_scrollable2 || _this$_scrollable2.scrollBy(offset / duration)\r\n    }\r\n    _createNavButton(offset, icon) {\r\n        const holdAction = this._createAction((() => {\r\n            this._holdInterval = setInterval((() => {\r\n                this._updateScrollPosition(offset, 5)\r\n            }), 5)\r\n        }));\r\n        const holdEventName = addNamespace(holdEvent.name, \"dxNavButton\");\r\n        const pointerUpEventName = addNamespace(pointerEvents.up, \"dxNavButton\");\r\n        const pointerOutEventName = addNamespace(pointerEvents.out, \"dxNavButton\");\r\n        const navButton = this._createComponent($(\"<div>\").addClass(\"dx-tabs-nav-button\"), Button, {\r\n            focusStateEnabled: false,\r\n            icon: icon,\r\n            integrationOptions: {},\r\n            elementAttr: {\r\n                role: null,\r\n                \"aria-label\": null,\r\n                \"aria-disabled\": null\r\n            },\r\n            onClick: () => {\r\n                this._updateScrollPosition(offset, 1)\r\n            }\r\n        });\r\n        const $navButton = navButton.$element();\r\n        eventsEngine.on($navButton, holdEventName, {\r\n            timeout: 300\r\n        }, (e => {\r\n            holdAction({\r\n                event: e\r\n            })\r\n        }));\r\n        eventsEngine.on($navButton, pointerUpEventName, (() => {\r\n            this._clearInterval()\r\n        }));\r\n        eventsEngine.on($navButton, pointerOutEventName, (() => {\r\n            this._clearInterval()\r\n        }));\r\n        return navButton\r\n    }\r\n    _clearInterval() {\r\n        if (this._holdInterval) {\r\n            clearInterval(this._holdInterval)\r\n        }\r\n    }\r\n    _updateSelection(addedSelection) {\r\n        if (this._scrollable) {\r\n            return this._scrollable.scrollToElement(this.itemElements().eq(addedSelection[0]))\r\n        }\r\n        return\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        this._renderScrolling()\r\n    }\r\n    _enterKeyHandler(e) {\r\n        const {\r\n            focusedElement: focusedElement\r\n        } = this.option();\r\n        super._enterKeyHandler(e);\r\n        this.option(\"focusedElement\", focusedElement)\r\n    }\r\n    _itemSelectHandler(e) {\r\n        const {\r\n            selectionMode: selectionMode\r\n        } = this.option();\r\n        if (\"single\" === selectionMode && this.isItemSelected(e.currentTarget)) {\r\n            return\r\n        }\r\n        super._itemSelectHandler(e)\r\n    }\r\n    _clean() {\r\n        this._cleanScrolling();\r\n        super._clean()\r\n    }\r\n    _toggleTabsVerticalClass(value) {\r\n        this.$element().toggleClass(TABS_ORIENTATION_CLASS.vertical, value)\r\n    }\r\n    _toggleTabsHorizontalClass(value) {\r\n        this.$element().toggleClass(TABS_ORIENTATION_CLASS.horizontal, value)\r\n    }\r\n    _getIndicatorPositionClass(indicatorPosition) {\r\n        return INDICATOR_POSITION_CLASS[indicatorPosition]\r\n    }\r\n    _getIndicatorPosition() {\r\n        const {\r\n            _indicatorPosition: _indicatorPosition,\r\n            rtlEnabled: rtlEnabled\r\n        } = this.option();\r\n        if (_indicatorPosition) {\r\n            return _indicatorPosition\r\n        }\r\n        const isVertical = this._isVertical();\r\n        if (rtlEnabled) {\r\n            return isVertical ? INDICATOR_POSITION.left : INDICATOR_POSITION.bottom\r\n        }\r\n        return isVertical ? INDICATOR_POSITION.right : INDICATOR_POSITION.bottom\r\n    }\r\n    _toggleIndicatorPositionClass(indicatorPosition) {\r\n        const newClass = this._getIndicatorPositionClass(indicatorPosition);\r\n        this._toggleElementClasses(INDICATOR_POSITION_CLASS, newClass)\r\n    }\r\n    _toggleScrollingEnabledClass(scrollingEnabled) {\r\n        this.$element().toggleClass(\"dx-tabs-scrolling-enabled\", Boolean(scrollingEnabled))\r\n    }\r\n    _toggleOrientationClass(orientation) {\r\n        const isVertical = orientation === ORIENTATION.vertical;\r\n        this._toggleTabsVerticalClass(isVertical);\r\n        this._toggleTabsHorizontalClass(!isVertical)\r\n    }\r\n    _getTabsIconPositionClass() {\r\n        const {\r\n            iconPosition: iconPosition\r\n        } = this.option();\r\n        switch (iconPosition) {\r\n            case ICON_POSITION.top:\r\n                return TABS_ICON_POSITION_CLASS.top;\r\n            case ICON_POSITION.end:\r\n                return TABS_ICON_POSITION_CLASS.end;\r\n            case ICON_POSITION.bottom:\r\n                return TABS_ICON_POSITION_CLASS.bottom;\r\n            default:\r\n                return TABS_ICON_POSITION_CLASS.start\r\n        }\r\n    }\r\n    _toggleIconPositionClass() {\r\n        const newClass = this._getTabsIconPositionClass();\r\n        this._toggleElementClasses(TABS_ICON_POSITION_CLASS, newClass)\r\n    }\r\n    _toggleStylingModeClass(value) {\r\n        const newClass = TABS_STYLING_MODE_CLASS[value ?? \"primary\"];\r\n        this._toggleElementClasses(TABS_STYLING_MODE_CLASS, newClass)\r\n    }\r\n    _toggleElementClasses(classMap, newClass) {\r\n        for (const key in classMap) {\r\n            this.$element().removeClass(classMap[key])\r\n        }\r\n        this.$element().addClass(newClass)\r\n    }\r\n    _toggleFocusedDisabledNextClass(currentIndex, isNextDisabled) {\r\n        this._itemElements().eq(currentIndex).toggleClass(\"dx-focused-disabled-next-tab\", isNextDisabled)\r\n    }\r\n    _toggleFocusedDisabledPrevClass(currentIndex, isPrevDisabled) {\r\n        this._itemElements().eq(currentIndex).toggleClass(\"dx-focused-disabled-prev-tab\", isPrevDisabled)\r\n    }\r\n    _toggleFocusedDisabledClasses(value) {\r\n        const {\r\n            selectedIndex: currentIndex\r\n        } = this.option();\r\n        this._itemElements().removeClass(\"dx-focused-disabled-next-tab\").removeClass(\"dx-focused-disabled-prev-tab\");\r\n        const prevItemIndex = currentIndex - 1;\r\n        const nextItemIndex = currentIndex + 1;\r\n        const nextFocusedIndex = $(value).index();\r\n        const isNextDisabled = this._itemElements().eq(nextItemIndex).hasClass(\"dx-state-disabled\");\r\n        const isPrevDisabled = this._itemElements().eq(prevItemIndex).hasClass(\"dx-state-disabled\");\r\n        const shouldNextClassBeSetted = isNextDisabled && nextFocusedIndex === nextItemIndex;\r\n        const shouldPrevClassBeSetted = isPrevDisabled && nextFocusedIndex === prevItemIndex;\r\n        this._toggleFocusedDisabledNextClass(currentIndex, shouldNextClassBeSetted);\r\n        this._toggleFocusedDisabledPrevClass(currentIndex, shouldPrevClassBeSetted)\r\n    }\r\n    _updateFocusedElement() {\r\n        const {\r\n            focusStateEnabled: focusStateEnabled,\r\n            selectedIndex: selectedIndex\r\n        } = this.option();\r\n        const itemElements = this._itemElements();\r\n        if (focusStateEnabled && itemElements.length) {\r\n            const selectedItem = itemElements.get(selectedIndex);\r\n            this.option({\r\n                focusedElement: selectedItem\r\n            })\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        var _this$_scrollable3;\r\n        const {\r\n            name: name,\r\n            value: value\r\n        } = args;\r\n        switch (name) {\r\n            case \"useInkRipple\":\r\n            case \"scrollingEnabled\":\r\n                this._toggleScrollingEnabledClass(value);\r\n                this._invalidate();\r\n                break;\r\n            case \"showNavButtons\":\r\n            case \"badgeExpr\":\r\n                this._invalidate();\r\n                break;\r\n            case \"scrollByContent\":\r\n                null === (_this$_scrollable3 = this._scrollable) || void 0 === _this$_scrollable3 || _this$_scrollable3.option(name, value);\r\n                break;\r\n            case \"width\":\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"selectionMode\":\r\n                this._renderMultiple();\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"focusedElement\":\r\n                this._toggleFocusedDisabledClasses(value);\r\n                super._optionChanged(args);\r\n                this._scrollToItem(value);\r\n                break;\r\n            case \"rtlEnabled\": {\r\n                super._optionChanged(args);\r\n                const indicatorPosition = this._getIndicatorPosition();\r\n                this._toggleIndicatorPositionClass(indicatorPosition);\r\n                break\r\n            }\r\n            case \"orientation\": {\r\n                this._toggleOrientationClass(value);\r\n                const indicatorPosition = this._getIndicatorPosition();\r\n                this._toggleIndicatorPositionClass(indicatorPosition);\r\n                if (hasWindow()) {\r\n                    this._updateScrollable()\r\n                }\r\n                break\r\n            }\r\n            case \"iconPosition\":\r\n                this._toggleIconPositionClass();\r\n                if (hasWindow()) {\r\n                    this._dimensionChanged()\r\n                }\r\n                break;\r\n            case \"stylingMode\":\r\n                this._toggleStylingModeClass(value);\r\n                if (hasWindow()) {\r\n                    this._dimensionChanged()\r\n                }\r\n                break;\r\n            case \"_indicatorPosition\": {\r\n                const indicatorPosition = this._getIndicatorPosition();\r\n                this._toggleIndicatorPositionClass(indicatorPosition);\r\n                break\r\n            }\r\n            case \"selectedIndex\":\r\n            case \"selectedItem\":\r\n            case \"selectedItems\":\r\n                super._optionChanged(args);\r\n                this._updateFocusedElement();\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _afterItemElementInserted() {\r\n        super._afterItemElementInserted();\r\n        this._planPostRenderActions()\r\n    }\r\n    _afterItemElementDeleted($item, deletedActionArgs) {\r\n        super._afterItemElementDeleted($item, deletedActionArgs);\r\n        this._renderScrolling()\r\n    }\r\n    getScrollable() {\r\n        return this._scrollable\r\n    }\r\n}\r\nTabs.ItemClass = TabsItem;\r\nregisterComponent(\"dxTabs\", Tabs);\r\nexport default Tabs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}