{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofia\\\\Desktop\\\\\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0438\\u0439 \\u0426\\u041A\\\\internship_project\\\\client\\\\src\\\\components\\\\BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\nimport { COLUMNS } from \"./columns\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n  // State for planets and suitabilities\n  const [planets, setPlanets] = useState([]);\n  const [suitabilities, setSuitabilities] = useState([]);\n  // State for form data with default empty strings to ensure controlled inputs\n  const [formData, setFormData] = useState({\n    id: \"\",\n    name: \"\",\n    type: \"\",\n    distance: \"\",\n    suitabilityId: \"\",\n    note: \"\"\n  });\n  // State to track if we're editing\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch planets and suitabilities on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [planetsResponse, suitabilitiesResponse] = await Promise.all([fetch(\"http://localhost:5000/planets\"), fetch(\"http://localhost:5000/suitabilities\")]);\n        const planetsData = await planetsResponse.json();\n        const suitabilitiesData = await suitabilitiesResponse.json();\n        setPlanets(planetsData);\n        setSuitabilities(suitabilitiesData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Memoized columns\n  const columns = useMemo(() => [...COLUMNS.filter(col => col.accessorKey !== \"suitabilityId\"), {\n    id: \"suitability\",\n    header: \"Suitability\",\n    accessorFn: row => {\n      const suitability = suitabilities.find(s => s.id === row.suitabilityId);\n      return suitability ? suitability.name : row.suitabilityId || \"Unknown\";\n    }\n  }, {\n    id: \"actions\",\n    header: \"Actions\",\n    cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(row.original),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this)\n  }], [suitabilities]);\n\n  // Memoized data\n  const data = useMemo(() => planets, [planets]);\n\n  // Table instance\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission (Create or Update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const planetData = {\n      name: formData.name,\n      type: formData.type,\n      distance: parseFloat(formData.distance) || 0,\n      suitabilityId: parseInt(formData.suitabilityId) || 0,\n      note: formData.note\n    };\n    try {\n      if (isEditing) {\n        // Update existing planet\n        const response = await fetch(`http://localhost:5000/planets/${formData.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(planetData)\n        });\n        if (response.ok) {\n          const updatedPlanet = await response.json();\n          setPlanets(prev => prev.map(planet => planet.id.toString() === formData.id ? updatedPlanet : planet));\n        }\n      } else {\n        // Create new planet\n        const response = await fetch(\"http://localhost:5000/planets\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(planetData)\n        });\n        if (response.ok) {\n          const newPlanet = await response.json();\n          setPlanets(prev => [...prev, newPlanet]);\n        }\n      }\n      // Reset form with defined values\n      setFormData({\n        id: \"\",\n        name: \"\",\n        type: \"\",\n        distance: \"\",\n        suitabilityId: \"\",\n        note: \"\"\n      });\n      setIsEditing(false);\n    } catch (error) {\n      console.error(\"Failed to save planet:\", error);\n    }\n  };\n\n  // Handle edit button click\n  const handleEdit = planet => {\n    var _planet$id, _ref, _planet$distance, _planet$suitabilityId;\n    // Ensure all fields are defined to prevent uncontrolled inputs\n    setFormData({\n      id: ((_planet$id = planet.id) === null || _planet$id === void 0 ? void 0 : _planet$id.toString()) || \"\",\n      name: planet.name || \"\",\n      type: planet.type || \"\",\n      distance: ((_ref = (_planet$distance = planet.distance) !== null && _planet$distance !== void 0 ? _planet$distance : planet.distanceFromEarth) !== null && _ref !== void 0 ? _ref : \"\").toString(),\n      suitabilityId: ((_planet$suitabilityId = planet.suitabilityId) === null || _planet$suitabilityId === void 0 ? void 0 : _planet$suitabilityId.toString()) || \"\",\n      note: planet.note || \"\"\n    });\n    setIsEditing(true);\n  };\n\n  // Handle delete button click\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/planets/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        // Update state by filtering out the deleted planet\n        setPlanets(prev => {\n          const updatedPlanets = prev.filter(planet => planet.id.toString() !== id.toString());\n          // console.log(\"Updated planets:\", updatedPlanets); // Debug log\n          return updatedPlanets;\n        });\n      } else {\n        console.error(\"Delete request failed with status:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Failed to delete planet:\", error);\n    }\n  };\n\n  // Handle form reset/cancel\n  const handleCancel = () => {\n    // Reset form with defined values\n    setFormData({\n      id: \"\",\n      name: \"\",\n      type: \"\",\n      distance: \"\",\n      suitabilityId: \"\",\n      note: \"\"\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isEditing ? \"Edit Planet\" : \"Add New Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"form-group col-md-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"name\",\n              value: formData.name,\n              onChange: handleInputChange,\n              required: true,\n              className: \"form-control\",\n              placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"type\",\n              value: formData.type,\n              onChange: handleInputChange,\n              required: true,\n              className: \"form-control\",\n              placeholder: \"\\u0422\\u0438\\u043F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col mb-2\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"distance\",\n              value: formData.distance,\n              onChange: handleInputChange,\n              required: true,\n              className: \"form-control\",\n              placeholder: \"\\u0420\\u0430\\u0441\\u0441\\u0442\\u043E\\u044F\\u043D\\u0438\\u0435 \\u0434\\u043E \\u0417\\u0435\\u043C\\u043B\\u0438 (\\u0441\\u0432. \\u0433\\u043E\\u0434)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"form-group col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col mb-2\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"note\",\n            value: formData.note,\n            onChange: handleInputChange,\n            required: true,\n            className: \"form-control\",\n            placeholder: \"\\u041F\\u0440\\u0438\\u043C\\u0435\\u0447\\u0430\\u043D\\u0438\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Suitability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"suitabilityId\",\n          value: formData.suitabilityId,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Suitability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), suitabilities.map(suitability => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: suitability.id,\n            children: suitability.name\n          }, suitability.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancel,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicTable, \"2vn0X6Avd9UsbzYi6zbLS5knv28=\", false, function () {\n  return [useReactTable];\n});\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","COLUMNS","jsxDEV","_jsxDEV","BasicTable","_s","planets","setPlanets","suitabilities","setSuitabilities","formData","setFormData","id","name","type","distance","suitabilityId","note","isEditing","setIsEditing","fetchData","planetsResponse","suitabilitiesResponse","Promise","all","fetch","planetsData","json","suitabilitiesData","error","console","columns","filter","col","accessorKey","header","accessorFn","row","suitability","find","s","cell","children","onClick","handleEdit","original","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","data","table","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","planetData","parseFloat","parseInt","response","method","headers","body","JSON","stringify","ok","updatedPlanet","map","planet","toString","newPlanet","_planet$id","_ref","_planet$distance","_planet$suitabilityId","distanceFromEarth","updatedPlanets","status","handleCancel","onSubmit","style","marginBottom","class","onChange","required","className","placeholder","marginLeft","getHeaderGroups","headerGroup","isPlaceholder","column","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/src/components/BasicTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport \"./table.css\";\r\n\r\nexport const BasicTable = () => {\r\n  // State for planets and suitabilities\r\n  const [planets, setPlanets] = useState([]);\r\n  const [suitabilities, setSuitabilities] = useState([]);\r\n  // State for form data with default empty strings to ensure controlled inputs\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    distance: \"\",\r\n    suitabilityId: \"\",\r\n    note: \"\",\r\n  });\r\n  // State to track if we're editing\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Fetch planets and suitabilities on mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [planetsResponse, suitabilitiesResponse] = await Promise.all([\r\n          fetch(\"http://localhost:5000/planets\"),\r\n          fetch(\"http://localhost:5000/suitabilities\"),\r\n        ]);\r\n        const planetsData = await planetsResponse.json();\r\n        const suitabilitiesData = await suitabilitiesResponse.json();\r\n        setPlanets(planetsData);\r\n        setSuitabilities(suitabilitiesData);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Memoized columns\r\n  const columns = useMemo(\r\n    () => [\r\n      ...COLUMNS.filter((col) => col.accessorKey !== \"suitabilityId\"),\r\n      {\r\n        id: \"suitability\",\r\n        header: \"Suitability\",\r\n        accessorFn: (row) => {\r\n          const suitability = suitabilities.find((s) => s.id === row.suitabilityId);\r\n          return suitability ? suitability.name : row.suitabilityId || \"Unknown\";\r\n        },\r\n      },\r\n      {\r\n        id: \"actions\",\r\n        header: \"Actions\",\r\n        cell: ({ row }) => (\r\n          <div>\r\n            <button onClick={() => handleEdit(row.original)}>Edit</button>\r\n            <button onClick={() => handleDelete(row.original.id)}>Delete</button>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    [suitabilities]\r\n  );\r\n\r\n  // Memoized data\r\n  const data = useMemo(() => planets, [planets]);\r\n\r\n  // Table instance\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n  });\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission (Create or Update)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const planetData = {\r\n      name: formData.name,\r\n      type: formData.type,\r\n      distance: parseFloat(formData.distance) || 0,\r\n      suitabilityId: parseInt(formData.suitabilityId) || 0,\r\n      note: formData.note,\r\n    };\r\n\r\n    try {\r\n      if (isEditing) {\r\n        // Update existing planet\r\n        const response = await fetch(`http://localhost:5000/planets/${formData.id}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(planetData),\r\n        });\r\n        if (response.ok) {\r\n          const updatedPlanet = await response.json();\r\n          setPlanets((prev) =>\r\n            prev.map((planet) => (planet.id.toString() === formData.id ? updatedPlanet : planet))\r\n          );\r\n        }\r\n      } else {\r\n        // Create new planet\r\n        const response = await fetch(\"http://localhost:5000/planets\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(planetData),\r\n        });\r\n        if (response.ok) {\r\n          const newPlanet = await response.json();\r\n          setPlanets((prev) => [...prev, newPlanet]);\r\n        }\r\n      }\r\n      // Reset form with defined values\r\n      setFormData({\r\n        id: \"\",\r\n        name: \"\",\r\n        type: \"\",\r\n        distance: \"\",\r\n        suitabilityId: \"\",\r\n        note: \"\",\r\n      });\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to save planet:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle edit button click\r\n  const handleEdit = (planet) => {\r\n    // Ensure all fields are defined to prevent uncontrolled inputs\r\n    setFormData({\r\n      id: planet.id?.toString() || \"\",\r\n      name: planet.name || \"\",\r\n      type: planet.type || \"\",\r\n      distance: (planet.distance ?? planet.distanceFromEarth ?? \"\").toString(),\r\n      suitabilityId: planet.suitabilityId?.toString() || \"\",\r\n      note: planet.note || \"\",\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle delete button click\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/planets/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (response.ok) {\r\n        // Update state by filtering out the deleted planet\r\n        setPlanets((prev) => {\r\n          const updatedPlanets = prev.filter((planet) => planet.id.toString() !== id.toString());\r\n          // console.log(\"Updated planets:\", updatedPlanets); // Debug log\r\n          return updatedPlanets;\r\n        });\r\n      } else {\r\n        console.error(\"Delete request failed with status:\", response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to delete planet:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle form reset/cancel\r\n  const handleCancel = () => {\r\n    // Reset form with defined values\r\n    setFormData({\r\n      id: \"\",\r\n      name: \"\",\r\n      type: \"\",\r\n      distance: \"\",\r\n      suitabilityId: \"\",\r\n      note: \"\",\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Form for creating/editing planets */}\r\n      <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n        <h3>{isEditing ? \"Edit Planet\" : \"Add New Planet\"}</h3>\r\n        <div class=\"form-row\">\r\n          <div class=\"form-group col-md-6\">\r\n            <div class=\"col mb-2\">\r\n              <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={formData.name}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"form-control\"\r\n                placeholder=\"Название\"\r\n              />\r\n            </div>\r\n            <div class=\"col mb-2\">\r\n                <input\r\n                type=\"text\"\r\n                name=\"type\"\r\n                value={formData.type}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"form-control\"\r\n                placeholder=\"Тип\"\r\n              />\r\n            </div>\r\n            <div class=\"col mb-2\">\r\n                <input\r\n                type=\"number\"\r\n                name=\"distance\"\r\n                value={formData.distance}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"form-control\"\r\n                placeholder=\"Расстояние до Земли (св. год)\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n          <div class=\"form-group col-md-6\">\r\n            <div class=\"col mb-2\">\r\n                <input\r\n                type=\"text\"\r\n                name=\"note\"\r\n                value={formData.note}\r\n                onChange={handleInputChange}\r\n                required\r\n                className=\"form-control\"\r\n                placeholder=\"Примечание\"\r\n              />\r\n            </div>\r\n          </div>\r\n        \r\n        <div>\r\n          <label>Note:</label>\r\n          \r\n        </div>\r\n        <div>\r\n          <label>Suitability:</label>\r\n          <select\r\n            name=\"suitabilityId\"\r\n            value={formData.suitabilityId}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select Suitability</option>\r\n            {suitabilities.map((suitability) => (\r\n              <option key={suitability.id} value={suitability.id}>\r\n                {suitability.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">{isEditing ? \"Update\" : \"Create\"}</button>\r\n        <button type=\"button\" onClick={handleCancel} style={{ marginLeft: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n\r\n      {/* Table */}\r\n      <table>\r\n        <thead>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id}>\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(header.column.columnDef.header, header.getContext())}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td key={cell.id}>\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}