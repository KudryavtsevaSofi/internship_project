{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/context_menu/m_context_menu.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { getPublicElement } from \"../../../../core/element\";\nimport $ from \"../../../../core/renderer\";\nimport { each } from \"../../../../core/utils/iterator\";\nimport ContextMenu from \"../../../../ui/context_menu\";\nimport modules from \"../m_modules\";\nconst CONTEXT_MENU = \"dx-context-menu\";\nconst viewName = {\n  columnHeadersView: \"header\",\n  rowsView: \"content\",\n  footerView: \"footer\",\n  headerPanel: \"headerPanel\"\n};\nconst VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\nexport class ContextMenuController extends modules.ViewController {\n  init() {\n    this.createAction(\"onContextMenuPreparing\");\n  }\n  getContextMenuItems(dxEvent) {\n    if (!dxEvent) {\n      return false;\n    }\n    const that = this;\n    const $targetElement = $(dxEvent.target);\n    let $element;\n    let $targetRowElement;\n    let $targetCellElement;\n    let menuItems;\n    each(VIEW_NAMES, function () {\n      const view = that.getView(this);\n      $element = view && view.element();\n      if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\n        var _rowOptions$cells;\n        $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\n        $targetRowElement = $targetCellElement.parent();\n        const rowIndex = view.getRowIndex($targetRowElement);\n        const columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\n        const rowOptions = $targetRowElement.data(\"options\");\n        const options = {\n          event: dxEvent,\n          targetElement: getPublicElement($targetElement),\n          target: viewName[this],\n          rowIndex: rowIndex,\n          row: view._getRows()[rowIndex],\n          columnIndex: columnIndex,\n          column: null === rowOptions || void 0 === rowOptions || null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells || null === (_rowOptions$cells = _rowOptions$cells[columnIndex]) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells.column\n        };\n        options.items = view.getContextMenuItems && view.getContextMenuItems(options);\n        that.executeAction(\"onContextMenuPreparing\", options);\n        that._contextMenuPrepared(options);\n        menuItems = options.items;\n        if (menuItems) {\n          return false;\n        }\n      }\n      return;\n    });\n    return menuItems;\n  }\n  _contextMenuPrepared(options) {}\n}\nexport class ContextMenuView extends modules.View {\n  init() {\n    super.init();\n    this._contextMenuController = this.getController(\"contextMenu\");\n  }\n  _renderCore() {\n    const $element = this.element().addClass(CONTEXT_MENU);\n    this.setAria(\"role\", \"presentation\", $element);\n    this._createComponent($element, ContextMenu, {\n      onPositioning: actionArgs => {\n        const {\n          event: event\n        } = actionArgs;\n        const contextMenuInstance = actionArgs.component;\n        const items = this._contextMenuController.getContextMenuItems(event);\n        if (items) {\n          contextMenuInstance.option(\"items\", items);\n          event.stopPropagation();\n        } else {\n          actionArgs.cancel = true;\n        }\n      },\n      onItemClick(params) {\n        var _params$itemData, _params$itemData$onIt;\n        null === (_params$itemData = params.itemData) || void 0 === _params$itemData || null === (_params$itemData$onIt = _params$itemData.onItemClick) || void 0 === _params$itemData$onIt || _params$itemData$onIt.call(_params$itemData, params);\n      },\n      cssClass: this.getWidgetContainerClass(),\n      target: this.component.$element()\n    });\n  }\n}\nexport const contextMenuModule = {\n  defaultOptions: () => ({\n    onContextMenuPreparing: null\n  }),\n  controllers: {\n    contextMenu: ContextMenuController\n  },\n  views: {\n    contextMenuView: ContextMenuView\n  }\n};","map":{"version":3,"names":["getPublicElement","$","each","ContextMenu","modules","CONTEXT_MENU","viewName","columnHeadersView","rowsView","footerView","headerPanel","VIEW_NAMES","ContextMenuController","ViewController","init","createAction","getContextMenuItems","dxEvent","that","$targetElement","target","$element","$targetRowElement","$targetCellElement","menuItems","view","getView","element","is","find","length","_rowOptions$cells","closest","parent","rowIndex","getRowIndex","columnIndex","cellIndex","rowOptions","data","options","event","targetElement","row","_getRows","column","cells","items","executeAction","_contextMenuPrepared","ContextMenuView","View","_contextMenuController","getController","_renderCore","addClass","setAria","_createComponent","onPositioning","actionArgs","contextMenuInstance","component","option","stopPropagation","cancel","onItemClick","params","_params$itemData","_params$itemData$onIt","itemData","call","cssClass","getWidgetContainerClass","contextMenuModule","defaultOptions","onContextMenuPreparing","controllers","contextMenu","views","contextMenuView"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/context_menu/m_context_menu.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/context_menu/m_context_menu.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    getPublicElement\r\n} from \"../../../../core/element\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../../../core/utils/iterator\";\r\nimport ContextMenu from \"../../../../ui/context_menu\";\r\nimport modules from \"../m_modules\";\r\nconst CONTEXT_MENU = \"dx-context-menu\";\r\nconst viewName = {\r\n    columnHeadersView: \"header\",\r\n    rowsView: \"content\",\r\n    footerView: \"footer\",\r\n    headerPanel: \"headerPanel\"\r\n};\r\nconst VIEW_NAMES = [\"columnHeadersView\", \"rowsView\", \"footerView\", \"headerPanel\"];\r\nexport class ContextMenuController extends modules.ViewController {\r\n    init() {\r\n        this.createAction(\"onContextMenuPreparing\")\r\n    }\r\n    getContextMenuItems(dxEvent) {\r\n        if (!dxEvent) {\r\n            return false\r\n        }\r\n        const that = this;\r\n        const $targetElement = $(dxEvent.target);\r\n        let $element;\r\n        let $targetRowElement;\r\n        let $targetCellElement;\r\n        let menuItems;\r\n        each(VIEW_NAMES, (function() {\r\n            const view = that.getView(this);\r\n            $element = view && view.element();\r\n            if ($element && ($element.is($targetElement) || $element.find($targetElement).length)) {\r\n                var _rowOptions$cells;\r\n                $targetCellElement = $targetElement.closest(\".dx-row > td, .dx-row > tr\");\r\n                $targetRowElement = $targetCellElement.parent();\r\n                const rowIndex = view.getRowIndex($targetRowElement);\r\n                const columnIndex = $targetCellElement[0] && $targetCellElement[0].cellIndex;\r\n                const rowOptions = $targetRowElement.data(\"options\");\r\n                const options = {\r\n                    event: dxEvent,\r\n                    targetElement: getPublicElement($targetElement),\r\n                    target: viewName[this],\r\n                    rowIndex: rowIndex,\r\n                    row: view._getRows()[rowIndex],\r\n                    columnIndex: columnIndex,\r\n                    column: null === rowOptions || void 0 === rowOptions || null === (_rowOptions$cells = rowOptions.cells) || void 0 === _rowOptions$cells || null === (_rowOptions$cells = _rowOptions$cells[columnIndex]) || void 0 === _rowOptions$cells ? void 0 : _rowOptions$cells.column\r\n                };\r\n                options.items = view.getContextMenuItems && view.getContextMenuItems(options);\r\n                that.executeAction(\"onContextMenuPreparing\", options);\r\n                that._contextMenuPrepared(options);\r\n                menuItems = options.items;\r\n                if (menuItems) {\r\n                    return false\r\n                }\r\n            }\r\n            return\r\n        }));\r\n        return menuItems\r\n    }\r\n    _contextMenuPrepared(options) {}\r\n}\r\nexport class ContextMenuView extends modules.View {\r\n    init() {\r\n        super.init();\r\n        this._contextMenuController = this.getController(\"contextMenu\")\r\n    }\r\n    _renderCore() {\r\n        const $element = this.element().addClass(CONTEXT_MENU);\r\n        this.setAria(\"role\", \"presentation\", $element);\r\n        this._createComponent($element, ContextMenu, {\r\n            onPositioning: actionArgs => {\r\n                const {\r\n                    event: event\r\n                } = actionArgs;\r\n                const contextMenuInstance = actionArgs.component;\r\n                const items = this._contextMenuController.getContextMenuItems(event);\r\n                if (items) {\r\n                    contextMenuInstance.option(\"items\", items);\r\n                    event.stopPropagation()\r\n                } else {\r\n                    actionArgs.cancel = true\r\n                }\r\n            },\r\n            onItemClick(params) {\r\n                var _params$itemData, _params$itemData$onIt;\r\n                null === (_params$itemData = params.itemData) || void 0 === _params$itemData || null === (_params$itemData$onIt = _params$itemData.onItemClick) || void 0 === _params$itemData$onIt || _params$itemData$onIt.call(_params$itemData, params)\r\n            },\r\n            cssClass: this.getWidgetContainerClass(),\r\n            target: this.component.$element()\r\n        })\r\n    }\r\n}\r\nexport const contextMenuModule = {\r\n    defaultOptions: () => ({\r\n        onContextMenuPreparing: null\r\n    }),\r\n    controllers: {\r\n        contextMenu: ContextMenuController\r\n    },\r\n    views: {\r\n        contextMenuView: ContextMenuView\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}