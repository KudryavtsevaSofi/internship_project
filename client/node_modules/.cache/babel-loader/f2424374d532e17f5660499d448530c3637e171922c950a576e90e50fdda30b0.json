{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/error_handling/m_error_handling.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { name as clickEventName } from \"../../../../common/core/events/click\";\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\nimport messageLocalization from \"../../../../common/core/localization/message\";\nimport $ from \"../../../../core/renderer\";\nimport { each } from \"../../../../core/utils/iterator\";\nimport modules from \"../m_modules\";\nconst ERROR_ROW_CLASS = \"dx-error-row\";\nconst ERROR_MESSAGE_CLASS = \"dx-error-message\";\nconst ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\nconst ACTION_CLASS = \"action\";\nexport class ErrorHandlingController extends modules.ViewController {\n  init() {\n    this._resizingController = this.getController(\"resizing\");\n    this._columnsController = this.getController(\"columns\");\n    this._columnHeadersView = this.getView(\"columnHeadersView\");\n    this._rowsView = this.getView(\"rowsView\");\n  }\n  _createErrorRow(error, $tableElements) {\n    let $errorRow;\n    let $closeButton;\n    const $errorMessage = this._renderErrorMessage(error);\n    if ($tableElements) {\n      $errorRow = $(\"<tr>\").attr(\"role\", \"row\").addClass(\"dx-error-row\");\n      $closeButton = $(\"<div>\").addClass(\"dx-closebutton\").addClass(this.addWidgetPrefix(\"action\"));\n      eventsEngine.on($closeButton, clickEventName, this.createAction(args => {\n        var _this$_resizingContro, _this$_resizingContro2;\n        const e = args.event;\n        let $errorRow;\n        const errorRowIndex = $(e.currentTarget).closest(\".dx-error-row\").index();\n        e.stopPropagation();\n        each($tableElements, (_, tableElement) => {\n          $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\n          this.removeErrorRow($errorRow);\n        });\n        null === (_this$_resizingContro = this._resizingController) || void 0 === _this$_resizingContro || null === (_this$_resizingContro2 = _this$_resizingContro.fireContentReadyAction) || void 0 === _this$_resizingContro2 || _this$_resizingContro2.call(_this$_resizingContro);\n      }));\n      $(\"<td>\").attr({\n        colSpan: this._columnsController.getVisibleColumns().length,\n        role: \"gridcell\"\n      }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\n      return $errorRow;\n    }\n    return $errorMessage;\n  }\n  _renderErrorMessage(error) {\n    const message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\n    const $message = $(\"<div>\").attr(\"role\", \"alert\").attr(\"aria-roledescription\", messageLocalization.format(\"dxDataGrid-ariaError\")).addClass(\"dx-error-message\").text(message);\n    if (error.url) {\n      $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message);\n    }\n    return $message;\n  }\n  renderErrorRow(error, rowIndex, $popupContent) {\n    var _this$_resizingContro3, _this$_resizingContro4;\n    const that = this;\n    let $errorMessageElement;\n    let $firstErrorRow;\n    if ($popupContent) {\n      $popupContent.find(\".dx-error-message\").remove();\n      $errorMessageElement = that._createErrorRow(error);\n      $popupContent.prepend($errorMessageElement);\n      return $errorMessageElement;\n    }\n    const viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\n    const $tableElements = viewElement.getTableElements();\n    each($tableElements, (_, tableElement) => {\n      $errorMessageElement = that._createErrorRow(error, $tableElements);\n      $firstErrorRow = $firstErrorRow || $errorMessageElement;\n      if (rowIndex >= 0) {\n        const $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\n        that.removeErrorRow($row.next());\n        $errorMessageElement.insertAfter($row);\n      } else {\n        const $tbody = $(tableElement).children(\"tbody\");\n        const rowElements = $tbody.children(\"tr\");\n        if (that._columnHeadersView.isVisible()) {\n          that.removeErrorRow(rowElements.last());\n          $(tableElement).append($errorMessageElement);\n        } else {\n          that.removeErrorRow(rowElements.first());\n          $tbody.first().prepend($errorMessageElement);\n        }\n      }\n    });\n    null === (_this$_resizingContro3 = this._resizingController) || void 0 === _this$_resizingContro3 || null === (_this$_resizingContro4 = _this$_resizingContro3.fireContentReadyAction) || void 0 === _this$_resizingContro4 || _this$_resizingContro4.call(_this$_resizingContro3);\n    return $firstErrorRow;\n  }\n  removeErrorRow($row) {\n    if (!$row) {\n      const $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\n      $row = $columnHeaders && $columnHeaders.find(\".dx-error-row\");\n      if (!$row || !$row.length) {\n        const $rowsViewElement = this._rowsView.element();\n        $row = $rowsViewElement && $rowsViewElement.find(\".dx-error-row\");\n      }\n    }\n    $row && $row.hasClass(\"dx-error-row\") && $row.remove();\n  }\n  optionChanged(args) {\n    if (\"errorRowEnabled\" === args.name) {\n      args.handled = true;\n    } else {\n      super.optionChanged(args);\n    }\n  }\n}\nconst data = Base => class extends Base {\n  init() {\n    super.init();\n    this.dataErrorOccurred.add((error, $popupContent) => {\n      if (this.option(\"errorRowEnabled\")) {\n        this._errorHandlingController.renderErrorRow(error, void 0, $popupContent);\n      }\n    });\n    this.changed.add(e => {\n      if (e && \"loadError\" === e.changeType) {\n        return;\n      }\n      if (this._editingController && !this._editingController.hasChanges()) {\n        var _this$_errorHandlingC, _this$_errorHandlingC2;\n        null === (_this$_errorHandlingC = this._errorHandlingController) || void 0 === _this$_errorHandlingC || null === (_this$_errorHandlingC2 = _this$_errorHandlingC.removeErrorRow) || void 0 === _this$_errorHandlingC2 || _this$_errorHandlingC2.call(_this$_errorHandlingC);\n      }\n    });\n  }\n};\nexport const errorHandlingModule = {\n  defaultOptions: () => ({\n    errorRowEnabled: true\n  }),\n  controllers: {\n    errorHandling: ErrorHandlingController\n  },\n  extenders: {\n    controllers: {\n      data: data\n    }\n  }\n};","map":{"version":3,"names":["name","clickEventName","eventsEngine","messageLocalization","$","each","modules","ERROR_ROW_CLASS","ERROR_MESSAGE_CLASS","ERROR_CLOSEBUTTON_CLASS","ACTION_CLASS","ErrorHandlingController","ViewController","init","_resizingController","getController","_columnsController","_columnHeadersView","getView","_rowsView","_createErrorRow","error","$tableElements","$errorRow","$closeButton","$errorMessage","_renderErrorMessage","attr","addClass","addWidgetPrefix","on","createAction","args","_this$_resizingContro","_this$_resizingContro2","e","event","errorRowIndex","currentTarget","closest","index","stopPropagation","_","tableElement","children","eq","removeErrorRow","fireContentReadyAction","call","colSpan","getVisibleColumns","length","role","prepend","append","appendTo","message","url","replace","$message","format","text","renderErrorRow","rowIndex","$popupContent","_this$_resizingContro3","_this$_resizingContro4","that","$errorMessageElement","$firstErrorRow","find","remove","viewElement","isVisible","getTableElements","$row","_getRowElements","next","insertAfter","$tbody","rowElements","last","first","$columnHeaders","element","$rowsViewElement","hasClass","optionChanged","handled","data","Base","dataErrorOccurred","add","option","_errorHandlingController","changed","changeType","_editingController","hasChanges","_this$_errorHandlingC","_this$_errorHandlingC2","errorHandlingModule","defaultOptions","errorRowEnabled","controllers","errorHandling","extenders"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/error_handling/m_error_handling.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/error_handling/m_error_handling.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\r\nimport messageLocalization from \"../../../../common/core/localization/message\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport {\r\n    each\r\n} from \"../../../../core/utils/iterator\";\r\nimport modules from \"../m_modules\";\r\nconst ERROR_ROW_CLASS = \"dx-error-row\";\r\nconst ERROR_MESSAGE_CLASS = \"dx-error-message\";\r\nconst ERROR_CLOSEBUTTON_CLASS = \"dx-closebutton\";\r\nconst ACTION_CLASS = \"action\";\r\nexport class ErrorHandlingController extends modules.ViewController {\r\n    init() {\r\n        this._resizingController = this.getController(\"resizing\");\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._columnHeadersView = this.getView(\"columnHeadersView\");\r\n        this._rowsView = this.getView(\"rowsView\")\r\n    }\r\n    _createErrorRow(error, $tableElements) {\r\n        let $errorRow;\r\n        let $closeButton;\r\n        const $errorMessage = this._renderErrorMessage(error);\r\n        if ($tableElements) {\r\n            $errorRow = $(\"<tr>\").attr(\"role\", \"row\").addClass(\"dx-error-row\");\r\n            $closeButton = $(\"<div>\").addClass(\"dx-closebutton\").addClass(this.addWidgetPrefix(\"action\"));\r\n            eventsEngine.on($closeButton, clickEventName, this.createAction((args => {\r\n                var _this$_resizingContro, _this$_resizingContro2;\r\n                const e = args.event;\r\n                let $errorRow;\r\n                const errorRowIndex = $(e.currentTarget).closest(\".dx-error-row\").index();\r\n                e.stopPropagation();\r\n                each($tableElements, ((_, tableElement) => {\r\n                    $errorRow = $(tableElement).children(\"tbody\").children(\"tr\").eq(errorRowIndex);\r\n                    this.removeErrorRow($errorRow)\r\n                }));\r\n                null === (_this$_resizingContro = this._resizingController) || void 0 === _this$_resizingContro || null === (_this$_resizingContro2 = _this$_resizingContro.fireContentReadyAction) || void 0 === _this$_resizingContro2 || _this$_resizingContro2.call(_this$_resizingContro)\r\n            })));\r\n            $(\"<td>\").attr({\r\n                colSpan: this._columnsController.getVisibleColumns().length,\r\n                role: \"gridcell\"\r\n            }).prepend($closeButton).append($errorMessage).appendTo($errorRow);\r\n            return $errorRow\r\n        }\r\n        return $errorMessage\r\n    }\r\n    _renderErrorMessage(error) {\r\n        const message = error.url ? error.message.replace(error.url, \"\") : error.message || error;\r\n        const $message = $(\"<div>\").attr(\"role\", \"alert\").attr(\"aria-roledescription\", messageLocalization.format(\"dxDataGrid-ariaError\")).addClass(\"dx-error-message\").text(message);\r\n        if (error.url) {\r\n            $(\"<a>\").attr(\"href\", error.url).text(error.url).appendTo($message)\r\n        }\r\n        return $message\r\n    }\r\n    renderErrorRow(error, rowIndex, $popupContent) {\r\n        var _this$_resizingContro3, _this$_resizingContro4;\r\n        const that = this;\r\n        let $errorMessageElement;\r\n        let $firstErrorRow;\r\n        if ($popupContent) {\r\n            $popupContent.find(\".dx-error-message\").remove();\r\n            $errorMessageElement = that._createErrorRow(error);\r\n            $popupContent.prepend($errorMessageElement);\r\n            return $errorMessageElement\r\n        }\r\n        const viewElement = rowIndex >= 0 || !that._columnHeadersView.isVisible() ? that._rowsView : that._columnHeadersView;\r\n        const $tableElements = viewElement.getTableElements();\r\n        each($tableElements, ((_, tableElement) => {\r\n            $errorMessageElement = that._createErrorRow(error, $tableElements);\r\n            $firstErrorRow = $firstErrorRow || $errorMessageElement;\r\n            if (rowIndex >= 0) {\r\n                const $row = viewElement._getRowElements($(tableElement)).eq(rowIndex);\r\n                that.removeErrorRow($row.next());\r\n                $errorMessageElement.insertAfter($row)\r\n            } else {\r\n                const $tbody = $(tableElement).children(\"tbody\");\r\n                const rowElements = $tbody.children(\"tr\");\r\n                if (that._columnHeadersView.isVisible()) {\r\n                    that.removeErrorRow(rowElements.last());\r\n                    $(tableElement).append($errorMessageElement)\r\n                } else {\r\n                    that.removeErrorRow(rowElements.first());\r\n                    $tbody.first().prepend($errorMessageElement)\r\n                }\r\n            }\r\n        }));\r\n        null === (_this$_resizingContro3 = this._resizingController) || void 0 === _this$_resizingContro3 || null === (_this$_resizingContro4 = _this$_resizingContro3.fireContentReadyAction) || void 0 === _this$_resizingContro4 || _this$_resizingContro4.call(_this$_resizingContro3);\r\n        return $firstErrorRow\r\n    }\r\n    removeErrorRow($row) {\r\n        if (!$row) {\r\n            const $columnHeaders = this._columnHeadersView && this._columnHeadersView.element();\r\n            $row = $columnHeaders && $columnHeaders.find(\".dx-error-row\");\r\n            if (!$row || !$row.length) {\r\n                const $rowsViewElement = this._rowsView.element();\r\n                $row = $rowsViewElement && $rowsViewElement.find(\".dx-error-row\")\r\n            }\r\n        }\r\n        $row && $row.hasClass(\"dx-error-row\") && $row.remove()\r\n    }\r\n    optionChanged(args) {\r\n        if (\"errorRowEnabled\" === args.name) {\r\n            args.handled = true\r\n        } else {\r\n            super.optionChanged(args)\r\n        }\r\n    }\r\n}\r\nconst data = Base => class extends Base {\r\n    init() {\r\n        super.init();\r\n        this.dataErrorOccurred.add(((error, $popupContent) => {\r\n            if (this.option(\"errorRowEnabled\")) {\r\n                this._errorHandlingController.renderErrorRow(error, void 0, $popupContent)\r\n            }\r\n        }));\r\n        this.changed.add((e => {\r\n            if (e && \"loadError\" === e.changeType) {\r\n                return\r\n            }\r\n            if (this._editingController && !this._editingController.hasChanges()) {\r\n                var _this$_errorHandlingC, _this$_errorHandlingC2;\r\n                null === (_this$_errorHandlingC = this._errorHandlingController) || void 0 === _this$_errorHandlingC || null === (_this$_errorHandlingC2 = _this$_errorHandlingC.removeErrorRow) || void 0 === _this$_errorHandlingC2 || _this$_errorHandlingC2.call(_this$_errorHandlingC)\r\n            }\r\n        }))\r\n    }\r\n};\r\nexport const errorHandlingModule = {\r\n    defaultOptions: () => ({\r\n        errorRowEnabled: true\r\n    }),\r\n    controllers: {\r\n        errorHandling: ErrorHandlingController\r\n    },\r\n    extenders: {\r\n        controllers: {\r\n            data: data\r\n        }\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}