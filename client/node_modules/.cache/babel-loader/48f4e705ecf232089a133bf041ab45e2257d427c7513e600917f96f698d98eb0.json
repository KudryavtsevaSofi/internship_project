{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/ui/menu/m_menu.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\nimport { end as hoverEventEnd } from \"../../../common/core/events/hover\";\nimport pointerEvents from \"../../../common/core/events/pointer\";\nimport { addNamespace } from \"../../../common/core/events/utils/index\";\nimport registerComponent from \"../../../core/component_registrator\";\nimport { getPublicElement } from \"../../../core/element\";\nimport $ from \"../../../core/renderer\";\nimport { noop } from \"../../../core/utils/common\";\nimport { extend } from \"../../../core/utils/extend\";\nimport { each } from \"../../../core/utils/iterator\";\nimport { getOuterWidth } from \"../../../core/utils/size\";\nimport { isDefined, isObject, isPlainObject } from \"../../../core/utils/type\";\nimport Button from \"../../../ui/button\";\nimport Overlay from \"../../../ui/overlay/ui.overlay\";\nimport TreeView from \"../../../ui/tree_view\";\nimport MenuBase from \"../../ui/context_menu/m_menu_base\";\nimport { getElementMaxHeightByWindow } from \"../../ui/overlay/m_utils\";\nimport Submenu from \"./m_submenu\";\nconst DX_MENU_CLASS = \"dx-menu\";\nconst DX_MENU_VERTICAL_CLASS = \"dx-menu-vertical\";\nconst DX_MENU_HORIZONTAL_CLASS = \"dx-menu-horizontal\";\nconst DX_MENU_ITEM_CLASS = \"dx-menu-item\";\nconst DX_MENU_ITEMS_CONTAINER_CLASS = \"dx-menu-items-container\";\nconst DX_MENU_ITEM_EXPANDED_CLASS = \"dx-menu-item-expanded\";\nconst DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\nconst DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = \"dx-context-menu-container-border\";\nconst DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\nconst DX_SUBMENU_CLASS = \"dx-submenu\";\nconst DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\nconst DX_STATE_HOVER_CLASS = \"dx-state-hover\";\nconst DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\nconst DX_ADAPTIVE_MODE_CLASS = \"dx-menu-adaptive-mode\";\nconst DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = \"dx-menu-hamburger-button\";\nconst DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = `${DX_ADAPTIVE_MODE_CLASS}-overlay-wrapper`;\nconst FOCUS_UP = \"up\";\nconst FOCUS_DOWN = \"down\";\nconst FOCUS_LEFT = \"left\";\nconst FOCUS_RIGHT = \"right\";\nconst SHOW_SUBMENU_OPERATION = \"showSubmenu\";\nconst NEXTITEM_OPERATION = \"nextItem\";\nconst PREVITEM_OPERATION = \"prevItem\";\nconst DEFAULT_DELAY = {\n  show: 50,\n  hide: 300\n};\nconst ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\nclass Menu extends MenuBase {\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      orientation: \"horizontal\",\n      submenuDirection: \"auto\",\n      showFirstSubmenuMode: {\n        name: \"onClick\",\n        delay: {\n          show: 50,\n          hide: 300\n        }\n      },\n      hideSubmenuOnMouseLeave: false,\n      onSubmenuShowing: null,\n      onSubmenuShown: null,\n      onSubmenuHiding: null,\n      onSubmenuHidden: null,\n      adaptivityEnabled: false\n    });\n  }\n  _setOptionsByReference() {\n    super._setOptionsByReference();\n    extend(this._optionsByReference, {\n      animation: true,\n      selectedItem: true\n    });\n  }\n  _itemElements() {\n    const rootMenuElements = super._itemElements();\n    const submenuElements = this._submenuItemElements();\n    return rootMenuElements.add(submenuElements);\n  }\n  _submenuItemElements() {\n    let elements = [];\n    const currentSubmenu = this._submenus.length && this._submenus[0];\n    if (currentSubmenu && currentSubmenu.itemsContainer()) {\n      elements = currentSubmenu.itemsContainer().find(\".dx-menu-item\");\n    }\n    return elements;\n  }\n  _focusTarget() {\n    return this.$element();\n  }\n  _isMenuHorizontal() {\n    return \"horizontal\" === this.option(\"orientation\");\n  }\n  _moveFocus(location) {\n    const $items = this._getAvailableItems();\n    const isMenuHorizontal = this._isMenuHorizontal();\n    const $activeItem = this._getActiveItem(true);\n    let argument;\n    let operation;\n    let navigationAction;\n    let $newTarget;\n    switch (location) {\n      case \"up\":\n        operation = isMenuHorizontal ? \"showSubmenu\" : this._getItemsNavigationOperation(\"prevItem\");\n        argument = isMenuHorizontal ? $activeItem : $items;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n      case \"down\":\n        operation = isMenuHorizontal ? \"showSubmenu\" : this._getItemsNavigationOperation(\"nextItem\");\n        argument = isMenuHorizontal ? $activeItem : $items;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n      case \"right\":\n        operation = isMenuHorizontal ? this._getItemsNavigationOperation(\"nextItem\") : \"showSubmenu\";\n        argument = isMenuHorizontal ? $items : $activeItem;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n      case \"left\":\n        operation = isMenuHorizontal ? this._getItemsNavigationOperation(\"prevItem\") : \"showSubmenu\";\n        argument = isMenuHorizontal ? $items : $activeItem;\n        navigationAction = this._getKeyboardNavigationAction(operation, argument);\n        $newTarget = navigationAction();\n        break;\n      default:\n        return super._moveFocus(location);\n    }\n    if ($newTarget && 0 !== $newTarget.length) {\n      this.option(\"focusedElement\", getPublicElement($newTarget));\n    }\n  }\n  _getItemsNavigationOperation(operation) {\n    let navOperation = operation;\n    if (this.option(\"rtlEnabled\")) {\n      navOperation = \"prevItem\" === operation ? \"nextItem\" : \"prevItem\";\n    }\n    return navOperation;\n  }\n  _getKeyboardNavigationAction(operation, argument) {\n    let action = noop;\n    switch (operation) {\n      case \"showSubmenu\":\n        if (!argument.hasClass(\"dx-state-disabled\")) {\n          action = this._showSubmenu.bind(this, argument);\n        }\n        break;\n      case \"nextItem\":\n        action = this._nextItem.bind(this, argument);\n        break;\n      case \"prevItem\":\n        action = this._prevItem.bind(this, argument);\n    }\n    return action;\n  }\n  _clean() {\n    super._clean();\n    this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer);\n  }\n  _visibilityChanged(visible) {\n    if (visible) {\n      if (!this._menuItemsWidth) {\n        this._updateItemsWidthCache();\n      }\n      this._dimensionChanged();\n    }\n  }\n  _isAdaptivityEnabled() {\n    return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\");\n  }\n  _updateItemsWidthCache() {\n    const $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".dx-menu-item\");\n    this._menuItemsWidth = this._getSummaryItemsSize(\"width\", $menuItems, true);\n  }\n  _dimensionChanged() {\n    if (!this._isAdaptivityEnabled()) {\n      return;\n    }\n    const containerWidth = getOuterWidth(this.$element());\n    this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth);\n  }\n  _init() {\n    super._init();\n    this._submenus = [];\n  }\n  _initActions() {\n    this._actions = {};\n    each(ACTIONS, (index, action) => {\n      this._actions[action] = this._createActionByOption(action);\n    });\n  }\n  _initMarkup() {\n    this._visibleSubmenu = null;\n    this.$element().addClass(\"dx-menu\");\n    super._initMarkup();\n    this._addCustomCssClass(this.$element());\n    this.setAria(\"role\", \"menubar\");\n  }\n  _setAriaRole(state) {\n    const role = this._isAdaptivityEnabled() && state ? void 0 : \"menubar\";\n    this.setAria({\n      role: role\n    });\n  }\n  _render() {\n    super._render();\n    this._initAdaptivity();\n  }\n  _isTargetOutOfComponent(relatedTarget) {\n    const isInsideRootMenu = 0 !== $(relatedTarget).closest(\".dx-menu\").length;\n    const isInsideContextMenu = 0 !== $(relatedTarget).closest(\".dx-context-menu\").length;\n    const isTargetOutOfComponent = !(isInsideRootMenu || isInsideContextMenu);\n    return isTargetOutOfComponent;\n  }\n  _focusOutHandler(e) {\n    const {\n      relatedTarget: relatedTarget\n    } = e;\n    if (relatedTarget) {\n      const isTargetOutside = this._isTargetOutOfComponent(relatedTarget);\n      if (isTargetOutside) {\n        this._hideVisibleSubmenu();\n      }\n    }\n    super._focusOutHandler(e);\n  }\n  _renderHamburgerButton() {\n    this._hamburger = new Button($(\"<div>\").addClass(\"dx-menu-hamburger-button\"), {\n      icon: \"menu\",\n      activeStateEnabled: false,\n      onClick: this._toggleTreeView.bind(this)\n    });\n    return this._hamburger.$element();\n  }\n  _toggleTreeView(state) {\n    if (isPlainObject(state)) {\n      state = !this._overlay.option(\"visible\");\n    }\n    this._overlay.option(\"visible\", state);\n    if (state) {\n      this._treeView.focus();\n    }\n    this._toggleHamburgerActiveState(state);\n  }\n  _toggleHamburgerActiveState(state) {\n    this._hamburger && this._hamburger.$element().toggleClass(\"dx-state-active\", state);\n  }\n  _toggleAdaptiveMode(state) {\n    const $menuItemsContainer = this.$element().find(\".dx-menu-horizontal\");\n    const $adaptiveElements = this.$element().find(`.${DX_ADAPTIVE_MODE_CLASS}`);\n    if (state) {\n      this._hideVisibleSubmenu();\n    } else {\n      this._treeView && this._treeView.collapseAll();\n      this._overlay && this._toggleTreeView(state);\n    }\n    this._setAriaRole(state);\n    $menuItemsContainer.toggle(!state);\n    $adaptiveElements.toggle(state);\n  }\n  _removeAdaptivity() {\n    if (!this._$adaptiveContainer) {\n      return;\n    }\n    this._toggleAdaptiveMode(false);\n    this._$adaptiveContainer.remove();\n    this._$adaptiveContainer = null;\n    this._treeView = null;\n    this._hamburger = null;\n    this._overlay = null;\n  }\n  _treeviewItemClickHandler(e) {\n    this._actions.onItemClick(e);\n    if (!e.node.children.length) {\n      this._toggleTreeView(false);\n    }\n  }\n  _getAdaptiveOverlayOptions() {\n    const rtl = this.option(\"rtlEnabled\");\n    const position = rtl ? \"right\" : \"left\";\n    return {\n      _ignoreFunctionValueDeprecation: true,\n      maxHeight: () => getElementMaxHeightByWindow(this.$element()),\n      deferRendering: false,\n      shading: false,\n      animation: false,\n      hideOnParentScroll: true,\n      onHidden: () => {\n        this._toggleHamburgerActiveState(false);\n      },\n      height: \"auto\",\n      hideOnOutsideClick: e => !$(e.target).closest(\".dx-menu-hamburger-button\").length,\n      position: {\n        collision: \"flipfit\",\n        at: `bottom ${position}`,\n        my: `top ${position}`,\n        of: this._hamburger.$element()\n      }\n    };\n  }\n  _getTreeViewOptions() {\n    const menuOptions = {};\n    each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], (_, option) => {\n      menuOptions[option] = this.option(option);\n    });\n    each([\"onItemContextMenu\", \"onSelectionChanged\", \"onItemRendered\"], (_, actionName) => {\n      menuOptions[actionName] = e => {\n        this._actions[actionName](e);\n      };\n    });\n    return extend(menuOptions, {\n      dataSource: this.getDataSource(),\n      animationEnabled: !!this.option(\"animation\"),\n      onItemClick: this._treeviewItemClickHandler.bind(this),\n      onItemExpanded: e => {\n        this._overlay.repaint();\n        this._actions.onSubmenuShown(e);\n      },\n      onItemCollapsed: e => {\n        this._overlay.repaint();\n        this._actions.onSubmenuHidden(e);\n      },\n      selectNodesRecursive: false,\n      selectByClick: this.option(\"selectByClick\"),\n      expandEvent: \"click\",\n      _supportItemUrl: true\n    });\n  }\n  _initAdaptivity() {\n    if (!this._isAdaptivityEnabled()) {\n      return;\n    }\n    this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\n    const $hamburger = this._renderHamburgerButton();\n    this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\n    this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\n    this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\n    this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\n    this._$adaptiveContainer.append($hamburger);\n    this._$adaptiveContainer.append(this._overlay.$element());\n    this.$element().append(this._$adaptiveContainer);\n    this._updateItemsWidthCache();\n    this._dimensionChanged();\n  }\n  _getDelay(delayType) {\n    const {\n      delay: delay\n    } = this.option(\"showFirstSubmenuMode\");\n    if (!isDefined(delay)) {\n      return DEFAULT_DELAY[delayType];\n    }\n    return isObject(delay) ? delay[delayType] : delay;\n  }\n  _keyboardHandler(e) {\n    return super._keyboardHandler(e, !!this._visibleSubmenu);\n  }\n  _renderContainer() {\n    const $wrapper = $(\"<div>\");\n    $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? \"dx-menu-horizontal\" : \"dx-menu-vertical\");\n    return super._renderContainer($wrapper);\n  }\n  _renderSubmenuItems(node, $itemFrame) {\n    const submenu = this._createSubmenu(node, $itemFrame);\n    this._submenus.push(submenu);\n    this._renderBorderElement($itemFrame);\n    return submenu;\n  }\n  _getKeyboardListeners() {\n    return super._getKeyboardListeners().concat(this._visibleSubmenu);\n  }\n  _createSubmenu(node, $rootItem) {\n    const $submenuContainer = $(\"<div>\").addClass(\"dx-context-menu\").appendTo($rootItem);\n    const items = this._getChildNodes(node);\n    const subMenu = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\n      _dataAdapter: this._dataAdapter,\n      _parentKey: node.internalFields.key,\n      items: items,\n      onHoverStart: this._clearTimeouts.bind(this),\n      position: this.getSubmenuPosition($rootItem)\n    }));\n    this._attachSubmenuHandlers($rootItem, subMenu);\n    return subMenu;\n  }\n  _getSubmenuOptions() {\n    const $submenuTarget = $(\"<div>\");\n    const isMenuHorizontal = this._isMenuHorizontal();\n    return {\n      itemTemplate: this.option(\"itemTemplate\"),\n      target: $submenuTarget,\n      orientation: this.option(\"orientation\"),\n      selectionMode: this.option(\"selectionMode\"),\n      cssClass: this.option(\"cssClass\"),\n      selectByClick: this.option(\"selectByClick\"),\n      hoverStateEnabled: this.option(\"hoverStateEnabled\"),\n      activeStateEnabled: this.option(\"activeStateEnabled\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      animation: this.option(\"animation\"),\n      showSubmenuMode: this.option(\"showSubmenuMode\"),\n      displayExpr: this.option(\"displayExpr\"),\n      disabledExpr: this.option(\"disabledExpr\"),\n      selectedExpr: this.option(\"selectedExpr\"),\n      itemsExpr: this.option(\"itemsExpr\"),\n      onFocusedItemChanged: e => {\n        if (!e.component.option(\"visible\")) {\n          return;\n        }\n        this.option(\"focusedElement\", e.component.option(\"focusedElement\"));\n      },\n      onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\n      onItemClick: this._nestedItemOnItemClickHandler.bind(this),\n      onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\n      onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, \"prevItem\"),\n      onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, \"nextItem\"),\n      onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? \"prevItem\" : null),\n      onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, \"nextItem\") : null\n    };\n  }\n  _getShowFirstSubmenuMode() {\n    if (!this._isDesktopDevice()) {\n      return \"onClick\";\n    }\n    const optionValue = this.option(\"showFirstSubmenuMode\");\n    return isObject(optionValue) ? optionValue.name : optionValue;\n  }\n  _moveMainMenuFocus(direction) {\n    const $items = this._getAvailableItems();\n    const itemCount = $items.length;\n    const $currentItem = $items.filter(\".dx-menu-item-expanded\").eq(0);\n    let itemIndex = $items.index($currentItem);\n    this._hideSubmenu(this._visibleSubmenu);\n    itemIndex += \"prevItem\" === direction ? -1 : 1;\n    if (itemIndex >= itemCount) {\n      itemIndex = 0;\n    } else if (itemIndex < 0) {\n      itemIndex = itemCount - 1;\n    }\n    const $newItem = $items.eq(itemIndex);\n    this.option(\"focusedElement\", getPublicElement($newItem));\n  }\n  _nestedItemOnSelectionChangedHandler(args) {\n    const selectedItem = args.addedItems.length && args.addedItems[0];\n    const submenu = Submenu.getInstance(args.element);\n    const {\n      onSelectionChanged: onSelectionChanged\n    } = this._actions;\n    onSelectionChanged(args);\n    selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\n    this._clearRootSelection();\n    this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem);\n  }\n  _clearSelectionInSubmenus(item, targetSubmenu) {\n    const cleanAllSubmenus = !arguments.length;\n    each(this._submenus, (index, submenu) => {\n      const $submenu = submenu._itemContainer();\n      const isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\n      const $selectedItem = $submenu.find(`.${this._selectedItemClass()}`);\n      if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\n        $selectedItem.removeClass(this._selectedItemClass());\n        const selectedItemData = this._getItemData($selectedItem);\n        if (selectedItemData) {\n          selectedItemData.selected = false;\n        }\n        submenu._clearSelectedItems();\n      }\n    });\n  }\n  _clearRootSelection() {\n    const $prevSelectedItem = this.$element().find(\".dx-menu-items-container\").first().children().children().filter(`.${this._selectedItemClass()}`);\n    if ($prevSelectedItem.length) {\n      const prevSelectedItemData = this._getItemData($prevSelectedItem);\n      prevSelectedItemData.selected = false;\n      $prevSelectedItem.removeClass(this._selectedItemClass());\n    }\n  }\n  _nestedItemOnItemClickHandler(e) {\n    this._actions.onItemClick(e);\n  }\n  _nestedItemOnItemRenderedHandler(e) {\n    this._actions.onItemRendered(e);\n  }\n  _attachSubmenuHandlers($menuAnchorItem, submenu) {\n    const $submenuOverlayContent = submenu.getOverlayContent();\n    const submenus = $submenuOverlayContent.find(\".dx-submenu\");\n    const submenuMouseLeaveName = addNamespace(hoverEventEnd, `${this.NAME}_submenu`);\n    submenu.option({\n      onShowing: this._submenuOnShowingHandler.bind(this, $menuAnchorItem, submenu),\n      onShown: this._submenuOnShownHandler.bind(this, $menuAnchorItem, submenu),\n      onHiding: this._submenuOnHidingHandler.bind(this, $menuAnchorItem, submenu),\n      onHidden: this._submenuOnHiddenHandler.bind(this, $menuAnchorItem, submenu)\n    });\n    each(submenus, (index, submenu) => {\n      eventsEngine.off(submenu, submenuMouseLeaveName);\n      eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $menuAnchorItem));\n    });\n  }\n  _submenuOnShowingHandler($menuAnchorItem, submenu, _ref) {\n    let {\n      rootItem: rootItem\n    } = _ref;\n    const $border = $menuAnchorItem.children(\".dx-context-menu-container-border\");\n    const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem);\n    this._actions.onSubmenuShowing(params);\n    $border.show();\n    $menuAnchorItem.addClass(\"dx-menu-item-expanded\");\n  }\n  _submenuOnShownHandler($menuAnchorItem, submenu, _ref2) {\n    let {\n      rootItem: rootItem\n    } = _ref2;\n    const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem);\n    this._actions.onSubmenuShown(params);\n  }\n  _submenuOnHidingHandler($menuAnchorItem, submenu, eventArgs) {\n    const $border = $menuAnchorItem.children(\".dx-context-menu-container-border\");\n    const params = this._getVisibilityChangeEventParams(eventArgs.rootItem, submenu, $menuAnchorItem, true);\n    eventArgs.itemData = params.itemData;\n    eventArgs.rootItem = params.rootItem;\n    eventArgs.submenuContainer = params.submenuContainer;\n    eventArgs.submenu = params.submenu;\n    this._actions.onSubmenuHiding(eventArgs);\n    if (!eventArgs.cancel) {\n      if (this._visibleSubmenu === submenu) {\n        this._visibleSubmenu = null;\n      }\n      $border.hide();\n      $menuAnchorItem.removeClass(\"dx-menu-item-expanded\");\n    }\n  }\n  _submenuOnHiddenHandler($menuAnchorItem, submenu, _ref3) {\n    let {\n      rootItem: rootItem\n    } = _ref3;\n    const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem, true);\n    this._actions.onSubmenuHidden(params);\n  }\n  _getVisibilityChangeEventParams(submenuItem, submenu, $menuAnchorItem, isHide) {\n    let itemData;\n    let $submenuContainer;\n    if (submenuItem) {\n      const anchor = isHide ? $(submenuItem).closest(\".dx-menu-item\")[0] : submenuItem;\n      itemData = this._getItemData(anchor);\n      $submenuContainer = $(anchor).find(\".dx-submenu\").first();\n    } else {\n      const $overlayContent = $(submenu._overlay.content());\n      itemData = this._getItemData($menuAnchorItem);\n      $submenuContainer = $overlayContent.find(\".dx-submenu\").first();\n    }\n    return {\n      itemData: itemData,\n      rootItem: getPublicElement($menuAnchorItem),\n      submenuContainer: getPublicElement($submenuContainer),\n      submenu: submenu\n    };\n  }\n  _submenuMouseLeaveHandler($rootItem, eventArgs) {\n    const target = $(eventArgs.relatedTarget).parents(\".dx-context-menu\")[0];\n    const contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\n    if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\n      this._clearTimeouts();\n      setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n    }\n  }\n  _hideSubmenuAfterTimeout() {\n    if (!this._visibleSubmenu) {\n      return;\n    }\n    const isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(\"dx-state-hover\");\n    const isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".dx-state-hover\").length;\n    const hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\n    if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\n      this._visibleSubmenu.hide();\n    }\n  }\n  _getSubmenuByRootElement($rootItem) {\n    if (!$rootItem) {\n      return false;\n    }\n    const $submenu = $rootItem.children(\".dx-context-menu\");\n    return $submenu.length && Submenu.getInstance($submenu);\n  }\n  getSubmenuPosition($rootItem) {\n    const isHorizontalMenu = this._isMenuHorizontal();\n    const submenuDirection = this.option(\"submenuDirection\").toLowerCase();\n    const rtlEnabled = this.option(\"rtlEnabled\");\n    const submenuPosition = {\n      collision: \"flip\",\n      of: $rootItem,\n      precise: true\n    };\n    switch (submenuDirection) {\n      case \"leftortop\":\n        submenuPosition.at = \"left top\";\n        submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\n        break;\n      case \"rightorbottom\":\n        submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\n        submenuPosition.my = \"left top\";\n        break;\n      default:\n        if (isHorizontalMenu) {\n          submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\n          submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n        } else {\n          submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\n          submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\";\n        }\n    }\n    return submenuPosition;\n  }\n  _renderBorderElement($item) {\n    $(\"<div>\").appendTo($item).addClass(\"dx-context-menu-container-border\").hide();\n  }\n  _itemPointerDownHandler(e) {\n    const $target = $(e.target);\n    const $closestItem = $target.closest(this._itemElements());\n    if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\n      this.option(\"focusedElement\", null);\n      return;\n    }\n    super._itemPointerDownHandler(e);\n  }\n  _hoverStartHandler(e) {\n    const mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\n    const $item = this._getItemElementByEventArgs(e);\n    const node = this._dataAdapter.getNodeByItem(this._getItemData($item));\n    const isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\n    if (this._isItemDisabled($item)) {\n      return;\n    }\n    eventsEngine.off($item, mouseMoveEventName);\n    if (!this._hasChildren(node)) {\n      this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\n      return;\n    }\n    if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\n      const submenu = this._getSubmenuByElement($item);\n      this._clearTimeouts();\n      if (!submenu.isOverlayVisible()) {\n        eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\n        this._showSubmenuTimer = this._getDelay(\"hide\");\n      }\n    }\n  }\n  _hoverEndHandler(eventArg) {\n    const $item = this._getItemElementByEventArgs(eventArg);\n    const relatedTarget = $(eventArg.relatedTarget);\n    super._hoverEndHandler(eventArg);\n    this._clearTimeouts();\n    if (this._isItemDisabled($item)) {\n      return;\n    }\n    if (relatedTarget.hasClass(\"dx-context-menu-content-delimiter\")) {\n      return;\n    }\n    if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(\"dx-menu-items-container\")) {\n      this._hideSubmenuTimer = setTimeout(() => {\n        this._hideSubmenuAfterTimeout();\n      }, this._getDelay(\"hide\"));\n    }\n  }\n  _hideVisibleSubmenu() {\n    if (!this._visibleSubmenu) {\n      return false;\n    }\n    this._hideSubmenu(this._visibleSubmenu);\n    return true;\n  }\n  _showSubmenu($itemElement) {\n    const submenu = this._getSubmenuByElement($itemElement);\n    if (this._visibleSubmenu !== submenu) {\n      this._hideVisibleSubmenu();\n    }\n    if (submenu) {\n      this._clearTimeouts();\n      this.focus();\n      submenu.show();\n      this.option(\"focusedElement\", submenu.option(\"focusedElement\"));\n    }\n    this._visibleSubmenu = submenu;\n    this._hoveredRootItem = $itemElement;\n  }\n  _hideSubmenu(submenu) {\n    if (submenu) {\n      submenu.hide();\n    }\n    if (this._visibleSubmenu === submenu) {\n      this._visibleSubmenu = null;\n    }\n    this._hoveredRootItem = null;\n  }\n  _itemMouseMoveHandler(e) {\n    if (e.pointers && e.pointers.length) {\n      return;\n    }\n    const $item = $(e.currentTarget);\n    if (!isDefined(this._showSubmenuTimer)) {\n      return;\n    }\n    this._clearTimeouts();\n    this._showSubmenuTimer = setTimeout(() => {\n      const submenu = this._getSubmenuByElement($item);\n      if (submenu && !submenu.isOverlayVisible()) {\n        this._showSubmenu($item);\n      }\n    }, this._getDelay(\"show\"));\n  }\n  _clearTimeouts() {\n    clearTimeout(this._hideSubmenuTimer);\n    clearTimeout(this._showSubmenuTimer);\n  }\n  _getSubmenuByElement($itemElement, itemData) {\n    const submenu = this._getSubmenuByRootElement($itemElement);\n    if (submenu) {\n      return submenu;\n    }\n    itemData = itemData ?? this._getItemData($itemElement);\n    const node = this._dataAdapter.getNodeByItem(itemData);\n    return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement);\n  }\n  _updateSubmenuVisibilityOnClick(actionArgs) {\n    const args = actionArgs.args.length && actionArgs.args[0];\n    if (!args || this._disabledGetter(args.itemData)) {\n      return;\n    }\n    const $itemElement = $(args.itemElement);\n    const currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\n    this._updateSelectedItemOnClick(actionArgs);\n    if (this._visibleSubmenu) {\n      if (this._visibleSubmenu === currentSubmenu) {\n        if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\n          this._hideSubmenu(this._visibleSubmenu);\n        }\n        return;\n      }\n      this._hideSubmenu(this._visibleSubmenu);\n    }\n    if (!currentSubmenu) {\n      return;\n    }\n    if (!currentSubmenu.isOverlayVisible()) {\n      this._showSubmenu($itemElement);\n    }\n  }\n  _optionChanged(args) {\n    if (ACTIONS.includes(args.name)) {\n      this._initActions();\n      return;\n    }\n    switch (args.name) {\n      case \"orientation\":\n      case \"submenuDirection\":\n        this._invalidate();\n        break;\n      case \"showFirstSubmenuMode\":\n      case \"hideSubmenuOnMouseLeave\":\n        break;\n      case \"showSubmenuMode\":\n        this._changeSubmenusOption(args.name, args.value);\n        break;\n      case \"adaptivityEnabled\":\n        args.value ? this._initAdaptivity() : this._removeAdaptivity();\n        break;\n      case \"width\":\n        if (this._isAdaptivityEnabled()) {\n          this._treeView.option(args.name, args.value);\n          this._overlay.option(args.name, args.value);\n        }\n        super._optionChanged(args);\n        this._dimensionChanged();\n        break;\n      case \"animation\":\n        if (this._isAdaptivityEnabled()) {\n          this._treeView.option(\"animationEnabled\", !!args.value);\n        }\n        super._optionChanged(args);\n        break;\n      default:\n        if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\n          this._treeView.option(args.fullName, args.value);\n        }\n        super._optionChanged(args);\n    }\n  }\n  _changeSubmenusOption(name, value) {\n    each(this._submenus, (index, submenu) => {\n      submenu.option(name, value);\n    });\n  }\n  selectItem(itemElement) {\n    this._hideSubmenu(this._visibleSubmenu);\n    super.selectItem(itemElement);\n  }\n  unselectItem(itemElement) {\n    this._hideSubmenu(this._visibleSubmenu);\n    super.unselectItem(itemElement);\n  }\n}\nregisterComponent(\"dxMenu\", Menu);\nexport default Menu;","map":{"version":3,"names":["eventsEngine","end","hoverEventEnd","pointerEvents","addNamespace","registerComponent","getPublicElement","$","noop","extend","each","getOuterWidth","isDefined","isObject","isPlainObject","Button","Overlay","TreeView","MenuBase","getElementMaxHeightByWindow","Submenu","DX_MENU_CLASS","DX_MENU_VERTICAL_CLASS","DX_MENU_HORIZONTAL_CLASS","DX_MENU_ITEM_CLASS","DX_MENU_ITEMS_CONTAINER_CLASS","DX_MENU_ITEM_EXPANDED_CLASS","DX_CONTEXT_MENU_CLASS","DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS","DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS","DX_SUBMENU_CLASS","DX_STATE_DISABLED_CLASS","DX_STATE_HOVER_CLASS","DX_STATE_ACTIVE_CLASS","DX_ADAPTIVE_MODE_CLASS","DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS","DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS","FOCUS_UP","FOCUS_DOWN","FOCUS_LEFT","FOCUS_RIGHT","SHOW_SUBMENU_OPERATION","NEXTITEM_OPERATION","PREVITEM_OPERATION","DEFAULT_DELAY","show","hide","ACTIONS","Menu","_getDefaultOptions","orientation","submenuDirection","showFirstSubmenuMode","name","delay","hideSubmenuOnMouseLeave","onSubmenuShowing","onSubmenuShown","onSubmenuHiding","onSubmenuHidden","adaptivityEnabled","_setOptionsByReference","_optionsByReference","animation","selectedItem","_itemElements","rootMenuElements","submenuElements","_submenuItemElements","add","elements","currentSubmenu","_submenus","length","itemsContainer","find","_focusTarget","$element","_isMenuHorizontal","option","_moveFocus","location","$items","_getAvailableItems","isMenuHorizontal","$activeItem","_getActiveItem","argument","operation","navigationAction","$newTarget","_getItemsNavigationOperation","_getKeyboardNavigationAction","navOperation","action","hasClass","_showSubmenu","bind","_nextItem","_prevItem","_clean","clearTimeout","_resizeEventTimer","_visibilityChanged","visible","_menuItemsWidth","_updateItemsWidthCache","_dimensionChanged","_isAdaptivityEnabled","$menuItems","first","children","_getSummaryItemsSize","containerWidth","_toggleAdaptiveMode","_init","_initActions","_actions","index","_createActionByOption","_initMarkup","_visibleSubmenu","addClass","_addCustomCssClass","setAria","_setAriaRole","state","role","_render","_initAdaptivity","_isTargetOutOfComponent","relatedTarget","isInsideRootMenu","closest","isInsideContextMenu","isTargetOutOfComponent","_focusOutHandler","e","isTargetOutside","_hideVisibleSubmenu","_renderHamburgerButton","_hamburger","icon","activeStateEnabled","onClick","_toggleTreeView","_overlay","_treeView","focus","_toggleHamburgerActiveState","toggleClass","$menuItemsContainer","$adaptiveElements","collapseAll","toggle","_removeAdaptivity","_$adaptiveContainer","remove","_treeviewItemClickHandler","onItemClick","node","_getAdaptiveOverlayOptions","rtl","position","_ignoreFunctionValueDeprecation","maxHeight","deferRendering","shading","hideOnParentScroll","onHidden","height","hideOnOutsideClick","target","collision","at","my","of","_getTreeViewOptions","menuOptions","_","actionName","dataSource","getDataSource","animationEnabled","onItemExpanded","repaint","onItemCollapsed","selectNodesRecursive","selectByClick","expandEvent","_supportItemUrl","$hamburger","_createComponent","$content","append","$wrapper","_getDelay","delayType","_keyboardHandler","_renderContainer","appendTo","_renderSubmenuItems","$itemFrame","submenu","_createSubmenu","push","_renderBorderElement","_getKeyboardListeners","concat","$rootItem","$submenuContainer","items","_getChildNodes","subMenu","_getSubmenuOptions","_dataAdapter","_parentKey","internalFields","key","onHoverStart","_clearTimeouts","getSubmenuPosition","_attachSubmenuHandlers","$submenuTarget","itemTemplate","selectionMode","cssClass","hoverStateEnabled","focusStateEnabled","showSubmenuMode","displayExpr","disabledExpr","selectedExpr","itemsExpr","onFocusedItemChanged","component","onSelectionChanged","_nestedItemOnSelectionChangedHandler","_nestedItemOnItemClickHandler","onItemRendered","_nestedItemOnItemRenderedHandler","onLeftFirstItem","_moveMainMenuFocus","onLeftLastItem","onCloseRootSubmenu","onExpandLastSubmenu","_getShowFirstSubmenuMode","_isDesktopDevice","optionValue","direction","itemCount","$currentItem","filter","eq","itemIndex","_hideSubmenu","$newItem","args","addedItems","getInstance","element","_clearSelectionInSubmenus","_clearRootSelection","_setOptionWithoutOptionChange","item","targetSubmenu","cleanAllSubmenus","arguments","$submenu","_itemContainer","isOtherItem","is","$selectedItem","_selectedItemClass","removeClass","selectedItemData","_getItemData","selected","_clearSelectedItems","$prevSelectedItem","prevSelectedItemData","$menuAnchorItem","$submenuOverlayContent","getOverlayContent","submenus","submenuMouseLeaveName","NAME","onShowing","_submenuOnShowingHandler","onShown","_submenuOnShownHandler","onHiding","_submenuOnHidingHandler","_submenuOnHiddenHandler","off","on","_submenuMouseLeaveHandler","_ref","rootItem","$border","params","_getVisibilityChangeEventParams","_ref2","eventArgs","itemData","submenuContainer","cancel","_ref3","submenuItem","isHide","anchor","$overlayContent","content","parents","contextMenu","_getSubmenuByRootElement","setTimeout","_hideSubmenuAfterTimeout","isRootItemHovered","context","isSubmenuItemHovered","hoveredElementFromSubMenu","get","querySelector","isHorizontalMenu","toLowerCase","rtlEnabled","submenuPosition","precise","$item","_itemPointerDownHandler","$target","$closestItem","_hoverStartHandler","mouseMoveEventName","move","_getItemElementByEventArgs","getNodeByItem","isSelectionActive","buttons","which","_isItemDisabled","_hasChildren","_showSubmenuTimer","_getSubmenuByElement","isOverlayVisible","_itemMouseMoveHandler","_hoverEndHandler","eventArg","_hideSubmenuTimer","$itemElement","_hoveredRootItem","pointers","currentTarget","_updateSubmenuVisibilityOnClick","actionArgs","_disabledGetter","itemElement","_updateSelectedItemOnClick","_optionChanged","includes","_invalidate","_changeSubmenusOption","value","fullName","selectItem","unselectItem"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/ui/menu/m_menu.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/ui/menu/m_menu.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../../common/core/events/core/events_engine\";\r\nimport {\r\n    end as hoverEventEnd\r\n} from \"../../../common/core/events/hover\";\r\nimport pointerEvents from \"../../../common/core/events/pointer\";\r\nimport {\r\n    addNamespace\r\n} from \"../../../common/core/events/utils/index\";\r\nimport registerComponent from \"../../../core/component_registrator\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../core/element\";\r\nimport $ from \"../../../core/renderer\";\r\nimport {\r\n    noop\r\n} from \"../../../core/utils/common\";\r\nimport {\r\n    extend\r\n} from \"../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../core/utils/iterator\";\r\nimport {\r\n    getOuterWidth\r\n} from \"../../../core/utils/size\";\r\nimport {\r\n    isDefined,\r\n    isObject,\r\n    isPlainObject\r\n} from \"../../../core/utils/type\";\r\nimport Button from \"../../../ui/button\";\r\nimport Overlay from \"../../../ui/overlay/ui.overlay\";\r\nimport TreeView from \"../../../ui/tree_view\";\r\nimport MenuBase from \"../../ui/context_menu/m_menu_base\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../../ui/overlay/m_utils\";\r\nimport Submenu from \"./m_submenu\";\r\nconst DX_MENU_CLASS = \"dx-menu\";\r\nconst DX_MENU_VERTICAL_CLASS = \"dx-menu-vertical\";\r\nconst DX_MENU_HORIZONTAL_CLASS = \"dx-menu-horizontal\";\r\nconst DX_MENU_ITEM_CLASS = \"dx-menu-item\";\r\nconst DX_MENU_ITEMS_CONTAINER_CLASS = \"dx-menu-items-container\";\r\nconst DX_MENU_ITEM_EXPANDED_CLASS = \"dx-menu-item-expanded\";\r\nconst DX_CONTEXT_MENU_CLASS = \"dx-context-menu\";\r\nconst DX_CONTEXT_MENU_CONTAINER_BORDER_CLASS = \"dx-context-menu-container-border\";\r\nconst DX_CONTEXT_MENU_CONTENT_DELIMITER_CLASS = \"dx-context-menu-content-delimiter\";\r\nconst DX_SUBMENU_CLASS = \"dx-submenu\";\r\nconst DX_STATE_DISABLED_CLASS = \"dx-state-disabled\";\r\nconst DX_STATE_HOVER_CLASS = \"dx-state-hover\";\r\nconst DX_STATE_ACTIVE_CLASS = \"dx-state-active\";\r\nconst DX_ADAPTIVE_MODE_CLASS = \"dx-menu-adaptive-mode\";\r\nconst DX_ADAPTIVE_HAMBURGER_BUTTON_CLASS = \"dx-menu-hamburger-button\";\r\nconst DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS = `${DX_ADAPTIVE_MODE_CLASS}-overlay-wrapper`;\r\nconst FOCUS_UP = \"up\";\r\nconst FOCUS_DOWN = \"down\";\r\nconst FOCUS_LEFT = \"left\";\r\nconst FOCUS_RIGHT = \"right\";\r\nconst SHOW_SUBMENU_OPERATION = \"showSubmenu\";\r\nconst NEXTITEM_OPERATION = \"nextItem\";\r\nconst PREVITEM_OPERATION = \"prevItem\";\r\nconst DEFAULT_DELAY = {\r\n    show: 50,\r\n    hide: 300\r\n};\r\nconst ACTIONS = [\"onSubmenuShowing\", \"onSubmenuShown\", \"onSubmenuHiding\", \"onSubmenuHidden\", \"onItemContextMenu\", \"onItemClick\", \"onSelectionChanged\", \"onItemRendered\"];\r\nclass Menu extends MenuBase {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            orientation: \"horizontal\",\r\n            submenuDirection: \"auto\",\r\n            showFirstSubmenuMode: {\r\n                name: \"onClick\",\r\n                delay: {\r\n                    show: 50,\r\n                    hide: 300\r\n                }\r\n            },\r\n            hideSubmenuOnMouseLeave: false,\r\n            onSubmenuShowing: null,\r\n            onSubmenuShown: null,\r\n            onSubmenuHiding: null,\r\n            onSubmenuHidden: null,\r\n            adaptivityEnabled: false\r\n        })\r\n    }\r\n    _setOptionsByReference() {\r\n        super._setOptionsByReference();\r\n        extend(this._optionsByReference, {\r\n            animation: true,\r\n            selectedItem: true\r\n        })\r\n    }\r\n    _itemElements() {\r\n        const rootMenuElements = super._itemElements();\r\n        const submenuElements = this._submenuItemElements();\r\n        return rootMenuElements.add(submenuElements)\r\n    }\r\n    _submenuItemElements() {\r\n        let elements = [];\r\n        const currentSubmenu = this._submenus.length && this._submenus[0];\r\n        if (currentSubmenu && currentSubmenu.itemsContainer()) {\r\n            elements = currentSubmenu.itemsContainer().find(\".dx-menu-item\")\r\n        }\r\n        return elements\r\n    }\r\n    _focusTarget() {\r\n        return this.$element()\r\n    }\r\n    _isMenuHorizontal() {\r\n        return \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _moveFocus(location) {\r\n        const $items = this._getAvailableItems();\r\n        const isMenuHorizontal = this._isMenuHorizontal();\r\n        const $activeItem = this._getActiveItem(true);\r\n        let argument;\r\n        let operation;\r\n        let navigationAction;\r\n        let $newTarget;\r\n        switch (location) {\r\n            case \"up\":\r\n                operation = isMenuHorizontal ? \"showSubmenu\" : this._getItemsNavigationOperation(\"prevItem\");\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case \"down\":\r\n                operation = isMenuHorizontal ? \"showSubmenu\" : this._getItemsNavigationOperation(\"nextItem\");\r\n                argument = isMenuHorizontal ? $activeItem : $items;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case \"right\":\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(\"nextItem\") : \"showSubmenu\";\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            case \"left\":\r\n                operation = isMenuHorizontal ? this._getItemsNavigationOperation(\"prevItem\") : \"showSubmenu\";\r\n                argument = isMenuHorizontal ? $items : $activeItem;\r\n                navigationAction = this._getKeyboardNavigationAction(operation, argument);\r\n                $newTarget = navigationAction();\r\n                break;\r\n            default:\r\n                return super._moveFocus(location)\r\n        }\r\n        if ($newTarget && 0 !== $newTarget.length) {\r\n            this.option(\"focusedElement\", getPublicElement($newTarget))\r\n        }\r\n    }\r\n    _getItemsNavigationOperation(operation) {\r\n        let navOperation = operation;\r\n        if (this.option(\"rtlEnabled\")) {\r\n            navOperation = \"prevItem\" === operation ? \"nextItem\" : \"prevItem\"\r\n        }\r\n        return navOperation\r\n    }\r\n    _getKeyboardNavigationAction(operation, argument) {\r\n        let action = noop;\r\n        switch (operation) {\r\n            case \"showSubmenu\":\r\n                if (!argument.hasClass(\"dx-state-disabled\")) {\r\n                    action = this._showSubmenu.bind(this, argument)\r\n                }\r\n                break;\r\n            case \"nextItem\":\r\n                action = this._nextItem.bind(this, argument);\r\n                break;\r\n            case \"prevItem\":\r\n                action = this._prevItem.bind(this, argument)\r\n        }\r\n        return action\r\n    }\r\n    _clean() {\r\n        super._clean();\r\n        this.option(\"templatesRenderAsynchronously\") && clearTimeout(this._resizeEventTimer)\r\n    }\r\n    _visibilityChanged(visible) {\r\n        if (visible) {\r\n            if (!this._menuItemsWidth) {\r\n                this._updateItemsWidthCache()\r\n            }\r\n            this._dimensionChanged()\r\n        }\r\n    }\r\n    _isAdaptivityEnabled() {\r\n        return this.option(\"adaptivityEnabled\") && \"horizontal\" === this.option(\"orientation\")\r\n    }\r\n    _updateItemsWidthCache() {\r\n        const $menuItems = this.$element().find(\"ul\").first().children(\"li\").children(\".dx-menu-item\");\r\n        this._menuItemsWidth = this._getSummaryItemsSize(\"width\", $menuItems, true)\r\n    }\r\n    _dimensionChanged() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        const containerWidth = getOuterWidth(this.$element());\r\n        this._toggleAdaptiveMode(this._menuItemsWidth > containerWidth)\r\n    }\r\n    _init() {\r\n        super._init();\r\n        this._submenus = []\r\n    }\r\n    _initActions() {\r\n        this._actions = {};\r\n        each(ACTIONS, ((index, action) => {\r\n            this._actions[action] = this._createActionByOption(action)\r\n        }))\r\n    }\r\n    _initMarkup() {\r\n        this._visibleSubmenu = null;\r\n        this.$element().addClass(\"dx-menu\");\r\n        super._initMarkup();\r\n        this._addCustomCssClass(this.$element());\r\n        this.setAria(\"role\", \"menubar\")\r\n    }\r\n    _setAriaRole(state) {\r\n        const role = this._isAdaptivityEnabled() && state ? void 0 : \"menubar\";\r\n        this.setAria({\r\n            role: role\r\n        })\r\n    }\r\n    _render() {\r\n        super._render();\r\n        this._initAdaptivity()\r\n    }\r\n    _isTargetOutOfComponent(relatedTarget) {\r\n        const isInsideRootMenu = 0 !== $(relatedTarget).closest(\".dx-menu\").length;\r\n        const isInsideContextMenu = 0 !== $(relatedTarget).closest(\".dx-context-menu\").length;\r\n        const isTargetOutOfComponent = !(isInsideRootMenu || isInsideContextMenu);\r\n        return isTargetOutOfComponent\r\n    }\r\n    _focusOutHandler(e) {\r\n        const {\r\n            relatedTarget: relatedTarget\r\n        } = e;\r\n        if (relatedTarget) {\r\n            const isTargetOutside = this._isTargetOutOfComponent(relatedTarget);\r\n            if (isTargetOutside) {\r\n                this._hideVisibleSubmenu()\r\n            }\r\n        }\r\n        super._focusOutHandler(e)\r\n    }\r\n    _renderHamburgerButton() {\r\n        this._hamburger = new Button($(\"<div>\").addClass(\"dx-menu-hamburger-button\"), {\r\n            icon: \"menu\",\r\n            activeStateEnabled: false,\r\n            onClick: this._toggleTreeView.bind(this)\r\n        });\r\n        return this._hamburger.$element()\r\n    }\r\n    _toggleTreeView(state) {\r\n        if (isPlainObject(state)) {\r\n            state = !this._overlay.option(\"visible\")\r\n        }\r\n        this._overlay.option(\"visible\", state);\r\n        if (state) {\r\n            this._treeView.focus()\r\n        }\r\n        this._toggleHamburgerActiveState(state)\r\n    }\r\n    _toggleHamburgerActiveState(state) {\r\n        this._hamburger && this._hamburger.$element().toggleClass(\"dx-state-active\", state)\r\n    }\r\n    _toggleAdaptiveMode(state) {\r\n        const $menuItemsContainer = this.$element().find(\".dx-menu-horizontal\");\r\n        const $adaptiveElements = this.$element().find(`.${DX_ADAPTIVE_MODE_CLASS}`);\r\n        if (state) {\r\n            this._hideVisibleSubmenu()\r\n        } else {\r\n            this._treeView && this._treeView.collapseAll();\r\n            this._overlay && this._toggleTreeView(state)\r\n        }\r\n        this._setAriaRole(state);\r\n        $menuItemsContainer.toggle(!state);\r\n        $adaptiveElements.toggle(state)\r\n    }\r\n    _removeAdaptivity() {\r\n        if (!this._$adaptiveContainer) {\r\n            return\r\n        }\r\n        this._toggleAdaptiveMode(false);\r\n        this._$adaptiveContainer.remove();\r\n        this._$adaptiveContainer = null;\r\n        this._treeView = null;\r\n        this._hamburger = null;\r\n        this._overlay = null\r\n    }\r\n    _treeviewItemClickHandler(e) {\r\n        this._actions.onItemClick(e);\r\n        if (!e.node.children.length) {\r\n            this._toggleTreeView(false)\r\n        }\r\n    }\r\n    _getAdaptiveOverlayOptions() {\r\n        const rtl = this.option(\"rtlEnabled\");\r\n        const position = rtl ? \"right\" : \"left\";\r\n        return {\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(this.$element()),\r\n            deferRendering: false,\r\n            shading: false,\r\n            animation: false,\r\n            hideOnParentScroll: true,\r\n            onHidden: () => {\r\n                this._toggleHamburgerActiveState(false)\r\n            },\r\n            height: \"auto\",\r\n            hideOnOutsideClick: e => !$(e.target).closest(\".dx-menu-hamburger-button\").length,\r\n            position: {\r\n                collision: \"flipfit\",\r\n                at: `bottom ${position}`,\r\n                my: `top ${position}`,\r\n                of: this._hamburger.$element()\r\n            }\r\n        }\r\n    }\r\n    _getTreeViewOptions() {\r\n        const menuOptions = {};\r\n        each([\"rtlEnabled\", \"width\", \"accessKey\", \"activeStateEnabled\", \"animation\", \"dataSource\", \"disabled\", \"displayExpr\", \"displayExpr\", \"focusStateEnabled\", \"hint\", \"hoverStateEnabled\", \"itemsExpr\", \"items\", \"itemTemplate\", \"selectedExpr\", \"selectionMode\", \"tabIndex\", \"visible\"], ((_, option) => {\r\n            menuOptions[option] = this.option(option)\r\n        }));\r\n        each([\"onItemContextMenu\", \"onSelectionChanged\", \"onItemRendered\"], ((_, actionName) => {\r\n            menuOptions[actionName] = e => {\r\n                this._actions[actionName](e)\r\n            }\r\n        }));\r\n        return extend(menuOptions, {\r\n            dataSource: this.getDataSource(),\r\n            animationEnabled: !!this.option(\"animation\"),\r\n            onItemClick: this._treeviewItemClickHandler.bind(this),\r\n            onItemExpanded: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuShown(e)\r\n            },\r\n            onItemCollapsed: e => {\r\n                this._overlay.repaint();\r\n                this._actions.onSubmenuHidden(e)\r\n            },\r\n            selectNodesRecursive: false,\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            expandEvent: \"click\",\r\n            _supportItemUrl: true\r\n        })\r\n    }\r\n    _initAdaptivity() {\r\n        if (!this._isAdaptivityEnabled()) {\r\n            return\r\n        }\r\n        this._$adaptiveContainer = $(\"<div>\").addClass(DX_ADAPTIVE_MODE_CLASS);\r\n        const $hamburger = this._renderHamburgerButton();\r\n        this._treeView = this._createComponent($(\"<div>\"), TreeView, this._getTreeViewOptions());\r\n        this._overlay = this._createComponent($(\"<div>\"), Overlay, this._getAdaptiveOverlayOptions());\r\n        this._overlay.$content().append(this._treeView.$element()).addClass(DX_ADAPTIVE_MODE_CLASS).addClass(this.option(\"cssClass\"));\r\n        this._overlay.$wrapper().addClass(DX_ADAPTIVE_MODE_OVERLAY_WRAPPER_CLASS);\r\n        this._$adaptiveContainer.append($hamburger);\r\n        this._$adaptiveContainer.append(this._overlay.$element());\r\n        this.$element().append(this._$adaptiveContainer);\r\n        this._updateItemsWidthCache();\r\n        this._dimensionChanged()\r\n    }\r\n    _getDelay(delayType) {\r\n        const {\r\n            delay: delay\r\n        } = this.option(\"showFirstSubmenuMode\");\r\n        if (!isDefined(delay)) {\r\n            return DEFAULT_DELAY[delayType]\r\n        }\r\n        return isObject(delay) ? delay[delayType] : delay\r\n    }\r\n    _keyboardHandler(e) {\r\n        return super._keyboardHandler(e, !!this._visibleSubmenu)\r\n    }\r\n    _renderContainer() {\r\n        const $wrapper = $(\"<div>\");\r\n        $wrapper.appendTo(this.$element()).addClass(this._isMenuHorizontal() ? \"dx-menu-horizontal\" : \"dx-menu-vertical\");\r\n        return super._renderContainer($wrapper)\r\n    }\r\n    _renderSubmenuItems(node, $itemFrame) {\r\n        const submenu = this._createSubmenu(node, $itemFrame);\r\n        this._submenus.push(submenu);\r\n        this._renderBorderElement($itemFrame);\r\n        return submenu\r\n    }\r\n    _getKeyboardListeners() {\r\n        return super._getKeyboardListeners().concat(this._visibleSubmenu)\r\n    }\r\n    _createSubmenu(node, $rootItem) {\r\n        const $submenuContainer = $(\"<div>\").addClass(\"dx-context-menu\").appendTo($rootItem);\r\n        const items = this._getChildNodes(node);\r\n        const subMenu = this._createComponent($submenuContainer, Submenu, extend(this._getSubmenuOptions(), {\r\n            _dataAdapter: this._dataAdapter,\r\n            _parentKey: node.internalFields.key,\r\n            items: items,\r\n            onHoverStart: this._clearTimeouts.bind(this),\r\n            position: this.getSubmenuPosition($rootItem)\r\n        }));\r\n        this._attachSubmenuHandlers($rootItem, subMenu);\r\n        return subMenu\r\n    }\r\n    _getSubmenuOptions() {\r\n        const $submenuTarget = $(\"<div>\");\r\n        const isMenuHorizontal = this._isMenuHorizontal();\r\n        return {\r\n            itemTemplate: this.option(\"itemTemplate\"),\r\n            target: $submenuTarget,\r\n            orientation: this.option(\"orientation\"),\r\n            selectionMode: this.option(\"selectionMode\"),\r\n            cssClass: this.option(\"cssClass\"),\r\n            selectByClick: this.option(\"selectByClick\"),\r\n            hoverStateEnabled: this.option(\"hoverStateEnabled\"),\r\n            activeStateEnabled: this.option(\"activeStateEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            animation: this.option(\"animation\"),\r\n            showSubmenuMode: this.option(\"showSubmenuMode\"),\r\n            displayExpr: this.option(\"displayExpr\"),\r\n            disabledExpr: this.option(\"disabledExpr\"),\r\n            selectedExpr: this.option(\"selectedExpr\"),\r\n            itemsExpr: this.option(\"itemsExpr\"),\r\n            onFocusedItemChanged: e => {\r\n                if (!e.component.option(\"visible\")) {\r\n                    return\r\n                }\r\n                this.option(\"focusedElement\", e.component.option(\"focusedElement\"))\r\n            },\r\n            onSelectionChanged: this._nestedItemOnSelectionChangedHandler.bind(this),\r\n            onItemClick: this._nestedItemOnItemClickHandler.bind(this),\r\n            onItemRendered: this._nestedItemOnItemRenderedHandler.bind(this),\r\n            onLeftFirstItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, \"prevItem\"),\r\n            onLeftLastItem: isMenuHorizontal ? null : this._moveMainMenuFocus.bind(this, \"nextItem\"),\r\n            onCloseRootSubmenu: this._moveMainMenuFocus.bind(this, isMenuHorizontal ? \"prevItem\" : null),\r\n            onExpandLastSubmenu: isMenuHorizontal ? this._moveMainMenuFocus.bind(this, \"nextItem\") : null\r\n        }\r\n    }\r\n    _getShowFirstSubmenuMode() {\r\n        if (!this._isDesktopDevice()) {\r\n            return \"onClick\"\r\n        }\r\n        const optionValue = this.option(\"showFirstSubmenuMode\");\r\n        return isObject(optionValue) ? optionValue.name : optionValue\r\n    }\r\n    _moveMainMenuFocus(direction) {\r\n        const $items = this._getAvailableItems();\r\n        const itemCount = $items.length;\r\n        const $currentItem = $items.filter(\".dx-menu-item-expanded\").eq(0);\r\n        let itemIndex = $items.index($currentItem);\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        itemIndex += \"prevItem\" === direction ? -1 : 1;\r\n        if (itemIndex >= itemCount) {\r\n            itemIndex = 0\r\n        } else if (itemIndex < 0) {\r\n            itemIndex = itemCount - 1\r\n        }\r\n        const $newItem = $items.eq(itemIndex);\r\n        this.option(\"focusedElement\", getPublicElement($newItem))\r\n    }\r\n    _nestedItemOnSelectionChangedHandler(args) {\r\n        const selectedItem = args.addedItems.length && args.addedItems[0];\r\n        const submenu = Submenu.getInstance(args.element);\r\n        const {\r\n            onSelectionChanged: onSelectionChanged\r\n        } = this._actions;\r\n        onSelectionChanged(args);\r\n        selectedItem && this._clearSelectionInSubmenus(selectedItem[0], submenu);\r\n        this._clearRootSelection();\r\n        this._setOptionWithoutOptionChange(\"selectedItem\", selectedItem)\r\n    }\r\n    _clearSelectionInSubmenus(item, targetSubmenu) {\r\n        const cleanAllSubmenus = !arguments.length;\r\n        each(this._submenus, ((index, submenu) => {\r\n            const $submenu = submenu._itemContainer();\r\n            const isOtherItem = !$submenu.is(targetSubmenu && targetSubmenu._itemContainer());\r\n            const $selectedItem = $submenu.find(`.${this._selectedItemClass()}`);\r\n            if (isOtherItem && $selectedItem.length || cleanAllSubmenus) {\r\n                $selectedItem.removeClass(this._selectedItemClass());\r\n                const selectedItemData = this._getItemData($selectedItem);\r\n                if (selectedItemData) {\r\n                    selectedItemData.selected = false\r\n                }\r\n                submenu._clearSelectedItems()\r\n            }\r\n        }))\r\n    }\r\n    _clearRootSelection() {\r\n        const $prevSelectedItem = this.$element().find(\".dx-menu-items-container\").first().children().children().filter(`.${this._selectedItemClass()}`);\r\n        if ($prevSelectedItem.length) {\r\n            const prevSelectedItemData = this._getItemData($prevSelectedItem);\r\n            prevSelectedItemData.selected = false;\r\n            $prevSelectedItem.removeClass(this._selectedItemClass())\r\n        }\r\n    }\r\n    _nestedItemOnItemClickHandler(e) {\r\n        this._actions.onItemClick(e)\r\n    }\r\n    _nestedItemOnItemRenderedHandler(e) {\r\n        this._actions.onItemRendered(e)\r\n    }\r\n    _attachSubmenuHandlers($menuAnchorItem, submenu) {\r\n        const $submenuOverlayContent = submenu.getOverlayContent();\r\n        const submenus = $submenuOverlayContent.find(\".dx-submenu\");\r\n        const submenuMouseLeaveName = addNamespace(hoverEventEnd, `${this.NAME}_submenu`);\r\n        submenu.option({\r\n            onShowing: this._submenuOnShowingHandler.bind(this, $menuAnchorItem, submenu),\r\n            onShown: this._submenuOnShownHandler.bind(this, $menuAnchorItem, submenu),\r\n            onHiding: this._submenuOnHidingHandler.bind(this, $menuAnchorItem, submenu),\r\n            onHidden: this._submenuOnHiddenHandler.bind(this, $menuAnchorItem, submenu)\r\n        });\r\n        each(submenus, ((index, submenu) => {\r\n            eventsEngine.off(submenu, submenuMouseLeaveName);\r\n            eventsEngine.on(submenu, submenuMouseLeaveName, null, this._submenuMouseLeaveHandler.bind(this, $menuAnchorItem))\r\n        }))\r\n    }\r\n    _submenuOnShowingHandler($menuAnchorItem, submenu, _ref) {\r\n        let {\r\n            rootItem: rootItem\r\n        } = _ref;\r\n        const $border = $menuAnchorItem.children(\".dx-context-menu-container-border\");\r\n        const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem);\r\n        this._actions.onSubmenuShowing(params);\r\n        $border.show();\r\n        $menuAnchorItem.addClass(\"dx-menu-item-expanded\")\r\n    }\r\n    _submenuOnShownHandler($menuAnchorItem, submenu, _ref2) {\r\n        let {\r\n            rootItem: rootItem\r\n        } = _ref2;\r\n        const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem);\r\n        this._actions.onSubmenuShown(params)\r\n    }\r\n    _submenuOnHidingHandler($menuAnchorItem, submenu, eventArgs) {\r\n        const $border = $menuAnchorItem.children(\".dx-context-menu-container-border\");\r\n        const params = this._getVisibilityChangeEventParams(eventArgs.rootItem, submenu, $menuAnchorItem, true);\r\n        eventArgs.itemData = params.itemData;\r\n        eventArgs.rootItem = params.rootItem;\r\n        eventArgs.submenuContainer = params.submenuContainer;\r\n        eventArgs.submenu = params.submenu;\r\n        this._actions.onSubmenuHiding(eventArgs);\r\n        if (!eventArgs.cancel) {\r\n            if (this._visibleSubmenu === submenu) {\r\n                this._visibleSubmenu = null\r\n            }\r\n            $border.hide();\r\n            $menuAnchorItem.removeClass(\"dx-menu-item-expanded\")\r\n        }\r\n    }\r\n    _submenuOnHiddenHandler($menuAnchorItem, submenu, _ref3) {\r\n        let {\r\n            rootItem: rootItem\r\n        } = _ref3;\r\n        const params = this._getVisibilityChangeEventParams(rootItem, submenu, $menuAnchorItem, true);\r\n        this._actions.onSubmenuHidden(params)\r\n    }\r\n    _getVisibilityChangeEventParams(submenuItem, submenu, $menuAnchorItem, isHide) {\r\n        let itemData;\r\n        let $submenuContainer;\r\n        if (submenuItem) {\r\n            const anchor = isHide ? $(submenuItem).closest(\".dx-menu-item\")[0] : submenuItem;\r\n            itemData = this._getItemData(anchor);\r\n            $submenuContainer = $(anchor).find(\".dx-submenu\").first()\r\n        } else {\r\n            const $overlayContent = $(submenu._overlay.content());\r\n            itemData = this._getItemData($menuAnchorItem);\r\n            $submenuContainer = $overlayContent.find(\".dx-submenu\").first()\r\n        }\r\n        return {\r\n            itemData: itemData,\r\n            rootItem: getPublicElement($menuAnchorItem),\r\n            submenuContainer: getPublicElement($submenuContainer),\r\n            submenu: submenu\r\n        }\r\n    }\r\n    _submenuMouseLeaveHandler($rootItem, eventArgs) {\r\n        const target = $(eventArgs.relatedTarget).parents(\".dx-context-menu\")[0];\r\n        const contextMenu = this._getSubmenuByRootElement($rootItem).getOverlayContent()[0];\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && target !== contextMenu) {\r\n            this._clearTimeouts();\r\n            setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideSubmenuAfterTimeout() {\r\n        if (!this._visibleSubmenu) {\r\n            return\r\n        }\r\n        const isRootItemHovered = $(this._visibleSubmenu.$element().context).hasClass(\"dx-state-hover\");\r\n        const isSubmenuItemHovered = this._visibleSubmenu.getOverlayContent().find(\".dx-state-hover\").length;\r\n        const hoveredElementFromSubMenu = this._visibleSubmenu.getOverlayContent().get(0).querySelector(\":hover\");\r\n        if (!hoveredElementFromSubMenu && !isSubmenuItemHovered && !isRootItemHovered) {\r\n            this._visibleSubmenu.hide()\r\n        }\r\n    }\r\n    _getSubmenuByRootElement($rootItem) {\r\n        if (!$rootItem) {\r\n            return false\r\n        }\r\n        const $submenu = $rootItem.children(\".dx-context-menu\");\r\n        return $submenu.length && Submenu.getInstance($submenu)\r\n    }\r\n    getSubmenuPosition($rootItem) {\r\n        const isHorizontalMenu = this._isMenuHorizontal();\r\n        const submenuDirection = this.option(\"submenuDirection\").toLowerCase();\r\n        const rtlEnabled = this.option(\"rtlEnabled\");\r\n        const submenuPosition = {\r\n            collision: \"flip\",\r\n            of: $rootItem,\r\n            precise: true\r\n        };\r\n        switch (submenuDirection) {\r\n            case \"leftortop\":\r\n                submenuPosition.at = \"left top\";\r\n                submenuPosition.my = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                break;\r\n            case \"rightorbottom\":\r\n                submenuPosition.at = isHorizontalMenu ? \"left bottom\" : \"right top\";\r\n                submenuPosition.my = \"left top\";\r\n                break;\r\n            default:\r\n                if (isHorizontalMenu) {\r\n                    submenuPosition.at = rtlEnabled ? \"right bottom\" : \"left bottom\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                } else {\r\n                    submenuPosition.at = rtlEnabled ? \"left top\" : \"right top\";\r\n                    submenuPosition.my = rtlEnabled ? \"right top\" : \"left top\"\r\n                }\r\n        }\r\n        return submenuPosition\r\n    }\r\n    _renderBorderElement($item) {\r\n        $(\"<div>\").appendTo($item).addClass(\"dx-context-menu-container-border\").hide()\r\n    }\r\n    _itemPointerDownHandler(e) {\r\n        const $target = $(e.target);\r\n        const $closestItem = $target.closest(this._itemElements());\r\n        if ($closestItem.hasClass(\"dx-menu-item-has-submenu\")) {\r\n            this.option(\"focusedElement\", null);\r\n            return\r\n        }\r\n        super._itemPointerDownHandler(e)\r\n    }\r\n    _hoverStartHandler(e) {\r\n        const mouseMoveEventName = addNamespace(pointerEvents.move, this.NAME);\r\n        const $item = this._getItemElementByEventArgs(e);\r\n        const node = this._dataAdapter.getNodeByItem(this._getItemData($item));\r\n        const isSelectionActive = isDefined(e.buttons) && 1 === e.buttons || !isDefined(e.buttons) && 1 === e.which;\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        eventsEngine.off($item, mouseMoveEventName);\r\n        if (!this._hasChildren(node)) {\r\n            this._showSubmenuTimer = setTimeout(this._hideSubmenuAfterTimeout.bind(this), this._getDelay(\"hide\"));\r\n            return\r\n        }\r\n        if (\"onHover\" === this._getShowFirstSubmenuMode() && !isSelectionActive) {\r\n            const submenu = this._getSubmenuByElement($item);\r\n            this._clearTimeouts();\r\n            if (!submenu.isOverlayVisible()) {\r\n                eventsEngine.on($item, mouseMoveEventName, this._itemMouseMoveHandler.bind(this));\r\n                this._showSubmenuTimer = this._getDelay(\"hide\")\r\n            }\r\n        }\r\n    }\r\n    _hoverEndHandler(eventArg) {\r\n        const $item = this._getItemElementByEventArgs(eventArg);\r\n        const relatedTarget = $(eventArg.relatedTarget);\r\n        super._hoverEndHandler(eventArg);\r\n        this._clearTimeouts();\r\n        if (this._isItemDisabled($item)) {\r\n            return\r\n        }\r\n        if (relatedTarget.hasClass(\"dx-context-menu-content-delimiter\")) {\r\n            return\r\n        }\r\n        if (this.option(\"hideSubmenuOnMouseLeave\") && !relatedTarget.hasClass(\"dx-menu-items-container\")) {\r\n            this._hideSubmenuTimer = setTimeout((() => {\r\n                this._hideSubmenuAfterTimeout()\r\n            }), this._getDelay(\"hide\"))\r\n        }\r\n    }\r\n    _hideVisibleSubmenu() {\r\n        if (!this._visibleSubmenu) {\r\n            return false\r\n        }\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        return true\r\n    }\r\n    _showSubmenu($itemElement) {\r\n        const submenu = this._getSubmenuByElement($itemElement);\r\n        if (this._visibleSubmenu !== submenu) {\r\n            this._hideVisibleSubmenu()\r\n        }\r\n        if (submenu) {\r\n            this._clearTimeouts();\r\n            this.focus();\r\n            submenu.show();\r\n            this.option(\"focusedElement\", submenu.option(\"focusedElement\"))\r\n        }\r\n        this._visibleSubmenu = submenu;\r\n        this._hoveredRootItem = $itemElement\r\n    }\r\n    _hideSubmenu(submenu) {\r\n        if (submenu) {\r\n            submenu.hide()\r\n        }\r\n        if (this._visibleSubmenu === submenu) {\r\n            this._visibleSubmenu = null\r\n        }\r\n        this._hoveredRootItem = null\r\n    }\r\n    _itemMouseMoveHandler(e) {\r\n        if (e.pointers && e.pointers.length) {\r\n            return\r\n        }\r\n        const $item = $(e.currentTarget);\r\n        if (!isDefined(this._showSubmenuTimer)) {\r\n            return\r\n        }\r\n        this._clearTimeouts();\r\n        this._showSubmenuTimer = setTimeout((() => {\r\n            const submenu = this._getSubmenuByElement($item);\r\n            if (submenu && !submenu.isOverlayVisible()) {\r\n                this._showSubmenu($item)\r\n            }\r\n        }), this._getDelay(\"show\"))\r\n    }\r\n    _clearTimeouts() {\r\n        clearTimeout(this._hideSubmenuTimer);\r\n        clearTimeout(this._showSubmenuTimer)\r\n    }\r\n    _getSubmenuByElement($itemElement, itemData) {\r\n        const submenu = this._getSubmenuByRootElement($itemElement);\r\n        if (submenu) {\r\n            return submenu\r\n        }\r\n        itemData = itemData ?? this._getItemData($itemElement);\r\n        const node = this._dataAdapter.getNodeByItem(itemData);\r\n        return this._hasChildren(node) && this._renderSubmenuItems(node, $itemElement)\r\n    }\r\n    _updateSubmenuVisibilityOnClick(actionArgs) {\r\n        const args = actionArgs.args.length && actionArgs.args[0];\r\n        if (!args || this._disabledGetter(args.itemData)) {\r\n            return\r\n        }\r\n        const $itemElement = $(args.itemElement);\r\n        const currentSubmenu = this._getSubmenuByElement($itemElement, args.itemData);\r\n        this._updateSelectedItemOnClick(actionArgs);\r\n        if (this._visibleSubmenu) {\r\n            if (this._visibleSubmenu === currentSubmenu) {\r\n                if (\"onClick\" === this.option(\"showFirstSubmenuMode\")) {\r\n                    this._hideSubmenu(this._visibleSubmenu)\r\n                }\r\n                return\r\n            }\r\n            this._hideSubmenu(this._visibleSubmenu)\r\n        }\r\n        if (!currentSubmenu) {\r\n            return\r\n        }\r\n        if (!currentSubmenu.isOverlayVisible()) {\r\n            this._showSubmenu($itemElement)\r\n        }\r\n    }\r\n    _optionChanged(args) {\r\n        if (ACTIONS.includes(args.name)) {\r\n            this._initActions();\r\n            return\r\n        }\r\n        switch (args.name) {\r\n            case \"orientation\":\r\n            case \"submenuDirection\":\r\n                this._invalidate();\r\n                break;\r\n            case \"showFirstSubmenuMode\":\r\n            case \"hideSubmenuOnMouseLeave\":\r\n                break;\r\n            case \"showSubmenuMode\":\r\n                this._changeSubmenusOption(args.name, args.value);\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                args.value ? this._initAdaptivity() : this._removeAdaptivity();\r\n                break;\r\n            case \"width\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(args.name, args.value);\r\n                    this._overlay.option(args.name, args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"animation\":\r\n                if (this._isAdaptivityEnabled()) {\r\n                    this._treeView.option(\"animationEnabled\", !!args.value)\r\n                }\r\n                super._optionChanged(args);\r\n                break;\r\n            default:\r\n                if (this._isAdaptivityEnabled() && (args.name === args.fullName || \"items\" === args.name)) {\r\n                    this._treeView.option(args.fullName, args.value)\r\n                }\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _changeSubmenusOption(name, value) {\r\n        each(this._submenus, ((index, submenu) => {\r\n            submenu.option(name, value)\r\n        }))\r\n    }\r\n    selectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.selectItem(itemElement)\r\n    }\r\n    unselectItem(itemElement) {\r\n        this._hideSubmenu(this._visibleSubmenu);\r\n        super.unselectItem(itemElement)\r\n    }\r\n}\r\nregisterComponent(\"dxMenu\", Menu);\r\nexport default Menu;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}