{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/state_storing/m_state_storing_core.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\nimport { fromPromise } from \"../../../../core/utils/deferred\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport { each } from \"../../../../core/utils/iterator\";\nimport { sessionStorage } from \"../../../../core/utils/storage\";\nimport { isDefined, isEmptyObject, isPlainObject } from \"../../../../core/utils/type\";\nimport { getWindow } from \"../../../../core/utils/window\";\nimport errors from \"../../../../ui/widget/ui.errors\";\nimport modules from \"../m_modules\";\nconst DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\nconst parseDates = function (state) {\n  if (!state) {\n    return;\n  }\n  each(state, (key, value) => {\n    if (isPlainObject(value) || Array.isArray(value)) {\n      parseDates(value);\n    } else if (\"string\" === typeof value) {\n      const date = DATE_REGEX.exec(value);\n      if (date) {\n        state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]));\n      }\n    }\n  });\n};\nconst getStorage = function (options) {\n  const storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\n  if (!storage) {\n    throw new Error(\"E1007\");\n  }\n  return storage;\n};\nconst getUniqueStorageKey = function (options) {\n  return isDefined(options.storageKey) ? options.storageKey : \"storage\";\n};\nexport class StateStoringController extends modules.ViewController {\n  getDataController() {\n    return this.getController(\"data\");\n  }\n  getExportController() {\n    return this.getController(\"export\");\n  }\n  getColumnsController() {\n    return this.getController(\"columns\");\n  }\n  init() {\n    this._state = {};\n    this._isLoaded = false;\n    this._isLoading = false;\n    this._windowUnloadHandler = () => {\n      if (void 0 !== this._savingTimeoutID) {\n        this._saveState(this.state());\n      }\n    };\n    eventsEngine.on(getWindow(), \"visibilitychange\", this._windowUnloadHandler);\n    return this;\n  }\n  optionChanged(args) {\n    const that = this;\n    if (\"stateStoring\" === args.name) {\n      if (that.isEnabled() && !that.isLoading()) {\n        that.load();\n      }\n      args.handled = true;\n    } else {\n      super.optionChanged(args);\n    }\n  }\n  dispose() {\n    clearTimeout(this._savingTimeoutID);\n    eventsEngine.off(getWindow(), \"visibilitychange\", this._windowUnloadHandler);\n  }\n  _loadState() {\n    const options = this.option(\"stateStoring\");\n    if (\"custom\" === options.type) {\n      return options.customLoad && options.customLoad();\n    }\n    try {\n      return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)));\n    } catch (e) {\n      errors.log(\"W1022\", \"State storing\", e.message);\n    }\n  }\n  _saveState(state) {\n    const options = this.option(\"stateStoring\");\n    if (\"custom\" === options.type) {\n      options.customSave && options.customSave(state);\n      return;\n    }\n    try {\n      getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state));\n    } catch (e) {\n      errors.log(e.message);\n    }\n  }\n  publicMethods() {\n    return [\"state\"];\n  }\n  isEnabled() {\n    return this.option(\"stateStoring.enabled\");\n  }\n  isLoaded() {\n    return this._isLoaded;\n  }\n  isLoading() {\n    return this._isLoading;\n  }\n  load() {\n    this._isLoading = true;\n    const loadResult = fromPromise(this._loadState());\n    loadResult.always(() => {\n      this._isLoaded = true;\n      this._isLoading = false;\n    }).done(state => {\n      if (null !== state && !isEmptyObject(state)) {\n        this.state(state);\n      }\n    });\n    return loadResult;\n  }\n  state(state) {\n    const that = this;\n    if (!arguments.length) {\n      return extend(true, {}, that._state);\n    }\n    that._state = extend({}, state);\n    parseDates(that._state);\n  }\n  save() {\n    const that = this;\n    clearTimeout(that._savingTimeoutID);\n    that._savingTimeoutID = setTimeout(() => {\n      that._saveState(that.state());\n      that._savingTimeoutID = void 0;\n    }, that.option(\"stateStoring.savingTimeout\"));\n  }\n}\nexport default {\n  StateStoringController: StateStoringController\n};","map":{"version":3,"names":["eventsEngine","fromPromise","extend","each","sessionStorage","isDefined","isEmptyObject","isPlainObject","getWindow","errors","modules","DATE_REGEX","parseDates","state","key","value","Array","isArray","date","exec","Date","UTC","getStorage","options","storage","type","localStorage","Error","getUniqueStorageKey","storageKey","StateStoringController","ViewController","getDataController","getController","getExportController","getColumnsController","init","_state","_isLoaded","_isLoading","_windowUnloadHandler","_savingTimeoutID","_saveState","on","optionChanged","args","that","name","isEnabled","isLoading","load","handled","dispose","clearTimeout","off","_loadState","option","customLoad","JSON","parse","getItem","e","log","message","customSave","setItem","stringify","publicMethods","isLoaded","loadResult","always","done","arguments","length","save","setTimeout"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/state_storing/m_state_storing_core.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/state_storing/m_state_storing_core.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\r\nimport {\r\n    fromPromise\r\n} from \"../../../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../../../core/utils/iterator\";\r\nimport {\r\n    sessionStorage\r\n} from \"../../../../core/utils/storage\";\r\nimport {\r\n    isDefined,\r\n    isEmptyObject,\r\n    isPlainObject\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    getWindow\r\n} from \"../../../../core/utils/window\";\r\nimport errors from \"../../../../ui/widget/ui.errors\";\r\nimport modules from \"../m_modules\";\r\nconst DATE_REGEX = /^(\\d{4})-(\\d{2})-(\\d{2})T(\\d{2}):(\\d{2}):(\\d{2}(?:\\.\\d*)?)Z$/;\r\nconst parseDates = function(state) {\r\n    if (!state) {\r\n        return\r\n    }\r\n    each(state, ((key, value) => {\r\n        if (isPlainObject(value) || Array.isArray(value)) {\r\n            parseDates(value)\r\n        } else if (\"string\" === typeof value) {\r\n            const date = DATE_REGEX.exec(value);\r\n            if (date) {\r\n                state[key] = new Date(Date.UTC(+date[1], +date[2] - 1, +date[3], +date[4], +date[5], +date[6]))\r\n            }\r\n        }\r\n    }))\r\n};\r\nconst getStorage = function(options) {\r\n    const storage = \"sessionStorage\" === options.type ? sessionStorage() : getWindow().localStorage;\r\n    if (!storage) {\r\n        throw new Error(\"E1007\")\r\n    }\r\n    return storage\r\n};\r\nconst getUniqueStorageKey = function(options) {\r\n    return isDefined(options.storageKey) ? options.storageKey : \"storage\"\r\n};\r\nexport class StateStoringController extends modules.ViewController {\r\n    getDataController() {\r\n        return this.getController(\"data\")\r\n    }\r\n    getExportController() {\r\n        return this.getController(\"export\")\r\n    }\r\n    getColumnsController() {\r\n        return this.getController(\"columns\")\r\n    }\r\n    init() {\r\n        this._state = {};\r\n        this._isLoaded = false;\r\n        this._isLoading = false;\r\n        this._windowUnloadHandler = () => {\r\n            if (void 0 !== this._savingTimeoutID) {\r\n                this._saveState(this.state())\r\n            }\r\n        };\r\n        eventsEngine.on(getWindow(), \"visibilitychange\", this._windowUnloadHandler);\r\n        return this\r\n    }\r\n    optionChanged(args) {\r\n        const that = this;\r\n        if (\"stateStoring\" === args.name) {\r\n            if (that.isEnabled() && !that.isLoading()) {\r\n                that.load()\r\n            }\r\n            args.handled = true\r\n        } else {\r\n            super.optionChanged(args)\r\n        }\r\n    }\r\n    dispose() {\r\n        clearTimeout(this._savingTimeoutID);\r\n        eventsEngine.off(getWindow(), \"visibilitychange\", this._windowUnloadHandler)\r\n    }\r\n    _loadState() {\r\n        const options = this.option(\"stateStoring\");\r\n        if (\"custom\" === options.type) {\r\n            return options.customLoad && options.customLoad()\r\n        }\r\n        try {\r\n            return JSON.parse(getStorage(options).getItem(getUniqueStorageKey(options)))\r\n        } catch (e) {\r\n            errors.log(\"W1022\", \"State storing\", e.message)\r\n        }\r\n    }\r\n    _saveState(state) {\r\n        const options = this.option(\"stateStoring\");\r\n        if (\"custom\" === options.type) {\r\n            options.customSave && options.customSave(state);\r\n            return\r\n        }\r\n        try {\r\n            getStorage(options).setItem(getUniqueStorageKey(options), JSON.stringify(state))\r\n        } catch (e) {\r\n            errors.log(e.message)\r\n        }\r\n    }\r\n    publicMethods() {\r\n        return [\"state\"]\r\n    }\r\n    isEnabled() {\r\n        return this.option(\"stateStoring.enabled\")\r\n    }\r\n    isLoaded() {\r\n        return this._isLoaded\r\n    }\r\n    isLoading() {\r\n        return this._isLoading\r\n    }\r\n    load() {\r\n        this._isLoading = true;\r\n        const loadResult = fromPromise(this._loadState());\r\n        loadResult.always((() => {\r\n            this._isLoaded = true;\r\n            this._isLoading = false\r\n        })).done((state => {\r\n            if (null !== state && !isEmptyObject(state)) {\r\n                this.state(state)\r\n            }\r\n        }));\r\n        return loadResult\r\n    }\r\n    state(state) {\r\n        const that = this;\r\n        if (!arguments.length) {\r\n            return extend(true, {}, that._state)\r\n        }\r\n        that._state = extend({}, state);\r\n        parseDates(that._state)\r\n    }\r\n    save() {\r\n        const that = this;\r\n        clearTimeout(that._savingTimeoutID);\r\n        that._savingTimeoutID = setTimeout((() => {\r\n            that._saveState(that.state());\r\n            that._savingTimeoutID = void 0\r\n        }), that.option(\"stateStoring.savingTimeout\"))\r\n    }\r\n}\r\nexport default {\r\n    StateStoringController: StateStoringController\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}