{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/editing/m_editing_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport Guid from \"../../../../core/guid\";\nimport { isObject } from \"../../../../core/utils/type\";\nconst NEW_ROW_TEMP_KEY_PREFIX = \"_DX_KEY_\";\nconst GUID_LENGTH = 36;\nexport const createFailureHandler = function (deferred) {\n  return function (arg) {\n    const error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\n    deferred.reject(error);\n  };\n};\nexport const isEditingCell = function (isEditRow, cellOptions) {\n  return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing;\n};\nexport const isEditingOrShowEditorAlwaysDataCell = function (isEditRow, cellOptions) {\n  const isCommandCell = !!cellOptions.column.command;\n  const isEditing = isEditingCell(isEditRow, cellOptions);\n  const isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\n  return \"data\" === cellOptions.rowType && isEditorCell;\n};\nexport const getEditingTexts = options => {\n  const editingTexts = options.component.option(\"editing.texts\") || {};\n  return {\n    save: editingTexts.saveRowChanges,\n    cancel: editingTexts.cancelRowChanges,\n    edit: editingTexts.editRow,\n    undelete: editingTexts.undeleteRow,\n    delete: editingTexts.deleteRow,\n    add: editingTexts.addRowToNode\n  };\n};\nexport const generateNewRowTempKey = () => `_DX_KEY_${new Guid()}`;\nexport const isNewRowTempKey = key => \"string\" === typeof key && key.startsWith(\"_DX_KEY_\") && 44 === key.length;\nexport const getButtonIndex = (buttons, name) => {\n  let result = -1;\n  buttons.some((button, index) => {\n    if (getButtonName(button) === name) {\n      result = index;\n      return true;\n    }\n  });\n  return result;\n};\nexport function getButtonName(button) {\n  return isObject(button) ? button.name : button;\n}\nexport function isEditable($element) {\n  return $element && ($element.is(\"input\") || $element.is(\"textarea\"));\n}\nexport const getEditorType = item => {\n  var _column$formItem;\n  const {\n    column: column\n  } = item;\n  return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType;\n};\nexport const forEachFormItems = (items, callBack) => {\n  items.forEach(item => {\n    if (item.items || item.tabs) {\n      forEachFormItems(item.items || item.tabs, callBack);\n    } else {\n      callBack(item);\n    }\n  });\n};","map":{"version":3,"names":["Guid","isObject","NEW_ROW_TEMP_KEY_PREFIX","GUID_LENGTH","createFailureHandler","deferred","arg","error","Error","String","reject","isEditingCell","isEditRow","cellOptions","isEditing","column","allowEditing","isEditingOrShowEditorAlwaysDataCell","isCommandCell","command","isEditorCell","showEditorAlways","rowType","getEditingTexts","options","editingTexts","component","option","save","saveRowChanges","cancel","cancelRowChanges","edit","editRow","undelete","undeleteRow","delete","deleteRow","add","addRowToNode","generateNewRowTempKey","isNewRowTempKey","key","startsWith","length","getButtonIndex","buttons","name","result","some","button","index","getButtonName","isEditable","$element","is","getEditorType","item","_column$formItem","isCustomEditorType","editorType","formItem","forEachFormItems","items","callBack","forEach","tabs"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/editing/m_editing_utils.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/editing/m_editing_utils.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport Guid from \"../../../../core/guid\";\r\nimport {\r\n    isObject\r\n} from \"../../../../core/utils/type\";\r\nconst NEW_ROW_TEMP_KEY_PREFIX = \"_DX_KEY_\";\r\nconst GUID_LENGTH = 36;\r\nexport const createFailureHandler = function(deferred) {\r\n    return function(arg) {\r\n        const error = arg instanceof Error ? arg : new Error(arg && String(arg) || \"Unknown error\");\r\n        deferred.reject(error)\r\n    }\r\n};\r\nexport const isEditingCell = function(isEditRow, cellOptions) {\r\n    return cellOptions.isEditing || isEditRow && cellOptions.column.allowEditing\r\n};\r\nexport const isEditingOrShowEditorAlwaysDataCell = function(isEditRow, cellOptions) {\r\n    const isCommandCell = !!cellOptions.column.command;\r\n    const isEditing = isEditingCell(isEditRow, cellOptions);\r\n    const isEditorCell = !isCommandCell && (isEditing || cellOptions.column.showEditorAlways);\r\n    return \"data\" === cellOptions.rowType && isEditorCell\r\n};\r\nexport const getEditingTexts = options => {\r\n    const editingTexts = options.component.option(\"editing.texts\") || {};\r\n    return {\r\n        save: editingTexts.saveRowChanges,\r\n        cancel: editingTexts.cancelRowChanges,\r\n        edit: editingTexts.editRow,\r\n        undelete: editingTexts.undeleteRow,\r\n        delete: editingTexts.deleteRow,\r\n        add: editingTexts.addRowToNode\r\n    }\r\n};\r\nexport const generateNewRowTempKey = () => `_DX_KEY_${new Guid}`;\r\nexport const isNewRowTempKey = key => \"string\" === typeof key && key.startsWith(\"_DX_KEY_\") && 44 === key.length;\r\nexport const getButtonIndex = (buttons, name) => {\r\n    let result = -1;\r\n    buttons.some(((button, index) => {\r\n        if (getButtonName(button) === name) {\r\n            result = index;\r\n            return true\r\n        }\r\n    }));\r\n    return result\r\n};\r\nexport function getButtonName(button) {\r\n    return isObject(button) ? button.name : button\r\n}\r\nexport function isEditable($element) {\r\n    return $element && ($element.is(\"input\") || $element.is(\"textarea\"))\r\n}\r\nexport const getEditorType = item => {\r\n    var _column$formItem;\r\n    const {\r\n        column: column\r\n    } = item;\r\n    return item.isCustomEditorType ? item.editorType : null === (_column$formItem = column.formItem) || void 0 === _column$formItem ? void 0 : _column$formItem.editorType\r\n};\r\nexport const forEachFormItems = (items, callBack) => {\r\n    items.forEach((item => {\r\n        if (item.items || item.tabs) {\r\n            forEachFormItems(item.items || item.tabs, callBack)\r\n        } else {\r\n            callBack(item)\r\n        }\r\n    }))\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}