{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/filter_builder/m_filter_builder.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport eventsEngine from \"../../common/core/events/core/events_engine\";\nimport { normalizeKeyName } from \"../../common/core/events/utils/index\";\nimport messageLocalization from \"../../common/core/localization/message\";\nimport registerComponent from \"../../core/component_registrator\";\nimport domAdapter from \"../../core/dom_adapter\";\nimport Guid from \"../../core/guid\";\nimport $ from \"../../core/renderer\";\nimport { when } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { isDefined } from \"../../core/utils/type\";\nimport Popup from \"../../ui/popup/ui.popup\";\nimport EditorFactoryMixin from \"../../ui/shared/ui.editor_factory_mixin\";\nimport TreeView from \"../../ui/tree_view\";\nimport Widget from \"../../ui/widget/ui.widget\";\nimport { getElementMaxHeightByWindow } from \"../ui/overlay/m_utils\";\nimport { addItem, convertToInnerStructure, createCondition, createEmptyGroup, getAvailableOperations, getCaptionWithParents, getCurrentLookupValueText, getCurrentValueText, getCustomOperation, getDefaultOperation, getField, getFilterExpression, getGroupCriteria, getGroupMenuItem, getGroupValue, getItems, getMergedOperations, getNormalizedFields, getNormalizedFilter, getOperationFromAvailable, getOperationValue, isCondition, isGroup, removeItem, renderValueText, setGroupValue, updateConditionByOperation } from \"./m_utils\";\nconst FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\nconst FILTER_BUILDER_GROUP_CLASS = \"dx-filterbuilder-group\";\nconst FILTER_BUILDER_GROUP_ITEM_CLASS = \"dx-filterbuilder-group-item\";\nconst FILTER_BUILDER_GROUP_CONTENT_CLASS = \"dx-filterbuilder-group-content\";\nconst FILTER_BUILDER_GROUP_OPERATIONS_CLASS = \"dx-filterbuilder-group-operations\";\nconst FILTER_BUILDER_GROUP_OPERATION_CLASS = \"dx-filterbuilder-group-operation\";\nconst FILTER_BUILDER_ACTION_CLASS = \"dx-filterbuilder-action\";\nconst FILTER_BUILDER_IMAGE_CLASS = \"dx-filterbuilder-action-icon\";\nconst FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\nconst FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\nconst FILTER_BUILDER_ITEM_TEXT_CLASS = \"dx-filterbuilder-text\";\nconst FILTER_BUILDER_ITEM_FIELD_CLASS = \"dx-filterbuilder-item-field\";\nconst FILTER_BUILDER_ITEM_OPERATION_CLASS = \"dx-filterbuilder-item-operation\";\nconst FILTER_BUILDER_ITEM_VALUE_CLASS = \"dx-filterbuilder-item-value\";\nconst FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = \"dx-filterbuilder-item-value-text\";\nconst FILTER_BUILDER_OVERLAY_CLASS = \"dx-filterbuilder-overlay\";\nconst FILTER_BUILDER_FILTER_OPERATIONS_CLASS = \"dx-filterbuilder-operations\";\nconst FILTER_BUILDER_FIELDS_CLASS = \"dx-filterbuilder-fields\";\nconst FILTER_BUILDER_ADD_CONDITION_CLASS = \"dx-filterbuilder-add-condition\";\nconst ACTIVE_CLASS = \"dx-state-active\";\nconst FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = \"dx-filterbuilder-menu-custom-operation\";\nconst SOURCE = \"filterBuilder\";\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\nconst TAB_KEY = \"tab\";\nconst ENTER_KEY = \"enter\";\nconst ESCAPE_KEY = \"escape\";\nconst ACTIONS = [{\n  name: \"onEditorPreparing\",\n  config: {\n    excludeValidators: [\"disabled\", \"readOnly\"],\n    category: \"rendering\"\n  }\n}, {\n  name: \"onEditorPrepared\",\n  config: {\n    excludeValidators: [\"disabled\", \"readOnly\"],\n    category: \"rendering\"\n  }\n}, {\n  name: \"onValueChanged\",\n  config: {\n    excludeValidators: [\"disabled\", \"readOnly\"]\n  }\n}];\nconst OPERATORS = {\n  and: \"and\",\n  or: \"or\",\n  notAnd: \"!and\",\n  notOr: \"!or\"\n};\nconst EditorFactory = EditorFactoryMixin(class {});\nclass FilterBuilder extends Widget {\n  _getDefaultOptions() {\n    return extend(super._getDefaultOptions(), {\n      onEditorPreparing: null,\n      onEditorPrepared: null,\n      onValueChanged: null,\n      fields: [],\n      groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\n      maxGroupLevel: void 0,\n      value: null,\n      allowHierarchicalFields: false,\n      groupOperationDescriptions: {\n        and: messageLocalization.format(\"dxFilterBuilder-and\"),\n        or: messageLocalization.format(\"dxFilterBuilder-or\"),\n        notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\n        notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\n      },\n      customOperations: [],\n      closePopupOnTargetScroll: true,\n      filterOperationDescriptions: {\n        between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\n        equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\n        notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\n        lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\n        lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\n        greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\n        greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\n        startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\n        contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\n        notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\n        endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\n        isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\n        isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\n      }\n    });\n  }\n  _optionChanged(args) {\n    switch (args.name) {\n      case \"closePopupOnTargetScroll\":\n        break;\n      case \"onEditorPreparing\":\n      case \"onEditorPrepared\":\n      case \"onValueChanged\":\n        this._initActions();\n        break;\n      case \"customOperations\":\n        this._initCustomOperations();\n        this._invalidate();\n        break;\n      case \"fields\":\n      case \"maxGroupLevel\":\n      case \"groupOperations\":\n      case \"allowHierarchicalFields\":\n      case \"groupOperationDescriptions\":\n      case \"filterOperationDescriptions\":\n        this._invalidate();\n        break;\n      case \"value\":\n        if (args.value !== args.previousValue) {\n          const disableInvalidateForValue = this._disableInvalidateForValue;\n          if (!disableInvalidateForValue) {\n            this._initModel();\n            this._invalidate();\n          }\n          this._disableInvalidateForValue = false;\n          this.executeAction(\"onValueChanged\", {\n            value: args.value,\n            previousValue: args.previousValue\n          });\n          this._disableInvalidateForValue = disableInvalidateForValue;\n        }\n        break;\n      default:\n        super._optionChanged(args);\n    }\n  }\n  getFilterExpression() {\n    const fields = this._getNormalizedFields();\n    const value = extend(true, [], this._model);\n    return getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE);\n  }\n  _getNormalizedFields() {\n    return getNormalizedFields(this.option(\"fields\"));\n  }\n  _updateFilter() {\n    this._disableInvalidateForValue = true;\n    const value = extend(true, [], this._model);\n    const normalizedValue = getNormalizedFilter(value);\n    const oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\n    if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\n      this.option(\"value\", normalizedValue);\n    }\n    this._disableInvalidateForValue = false;\n    this._fireContentReadyAction();\n  }\n  _init() {\n    this._initCustomOperations();\n    this._initModel();\n    this._initEditorFactory();\n    this._initActions();\n    super._init();\n  }\n  _initEditorFactory() {\n    this._editorFactory = new EditorFactory();\n  }\n  _initCustomOperations() {\n    this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this);\n  }\n  _getDefaultGroupOperation() {\n    var _this$option;\n    return (null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) ?? OPERATORS.and;\n  }\n  _getModel(value) {\n    return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation());\n  }\n  _initModel() {\n    this._model = this._getModel(this.option(\"value\"));\n  }\n  _initActions() {\n    const that = this;\n    that._actions = {};\n    ACTIONS.forEach(action => {\n      const actionConfig = extend({}, action.config);\n      that._actions[action.name] = that._createActionByOption(action.name, actionConfig);\n    });\n  }\n  executeAction(actionName, options) {\n    const action = this._actions[actionName];\n    return action && action(options);\n  }\n  _initMarkup() {\n    this.$element().addClass(\"dx-filterbuilder\");\n    super._initMarkup();\n    this._addAriaAttributes(this.$element(), messageLocalization.format(\"dxFilterBuilder-filterAriaRootElement\"), \"tree\");\n    this._createGroupElementByCriteria(this._model).appendTo(this.$element());\n  }\n  _addAriaAttributes($element, ariaLabel, role, hasPopup, hasExpanded, ariaLevel) {\n    if (!$element || !$element.length) {\n      return;\n    }\n    const attributes = {\n      role: role\n    };\n    if (ariaLabel) {\n      if ($element.text().length > 0) {\n        attributes.title = ariaLabel;\n      } else {\n        attributes[\"aria-label\"] = ariaLabel;\n      }\n    }\n    if (isDefined(hasPopup)) {\n      attributes[\"aria-haspopup\"] = `${hasPopup}`;\n    }\n    if (isDefined(hasExpanded)) {\n      attributes[\"aria-expanded\"] = `${hasExpanded}`;\n    }\n    if (isDefined(ariaLevel)) {\n      attributes[\"aria-level\"] = `${ariaLevel}`;\n    }\n    $element.attr(attributes);\n  }\n  _createConditionElement(condition, parent, groupLevel) {\n    return $(\"<div>\").addClass(\"dx-filterbuilder-group\").append(this._createConditionItem(condition, parent, groupLevel));\n  }\n  _createGroupElementByCriteria(criteria, parent) {\n    let groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\n    const $group = this._createGroupElement(criteria, parent, groupLevel);\n    const $groupContent = $group.find(\".dx-filterbuilder-group-content\");\n    const groupCriteria = getGroupCriteria(criteria);\n    for (let i = 0; i < groupCriteria.length; i++) {\n      const innerCriteria = groupCriteria[i];\n      if (isGroup(innerCriteria)) {\n        this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent);\n      } else if (isCondition(innerCriteria)) {\n        this._createConditionElement(innerCriteria, criteria, `${groupLevel + 1}`).appendTo($groupContent);\n      }\n    }\n    return $group;\n  }\n  _createGroupElement(criteria, parent, groupLevel) {\n    const $guid = new Guid();\n    const $groupItem = $(\"<div>\").addClass(\"dx-filterbuilder-group-item\");\n    const $groupContent = $(\"<div>\").addClass(\"dx-filterbuilder-group-content\").attr(\"id\", `${$guid}`);\n    const $group = $(\"<div>\").addClass(\"dx-filterbuilder-group\").append($groupItem).append($groupContent);\n    if (null != parent) {\n      this._createRemoveButton(() => {\n        removeItem(parent, criteria);\n        $group.remove();\n        this._updateFilter();\n      }, \"group\").appendTo($groupItem);\n    }\n    this._addAriaAttributes($groupItem, messageLocalization.format(\"dxFilterBuilder-filterAriaGroupItem\"), \"treeitem\", null, null, `${groupLevel + 1}`);\n    this._addAriaAttributes($groupContent, \"\", \"group\");\n    $groupItem.attr(\"aria-owns\", `${$guid}`);\n    this._createGroupOperationButton(criteria).appendTo($groupItem);\n    this._createAddButton(() => {\n      const newGroup = createEmptyGroup(this._getDefaultGroupOperation());\n      addItem(newGroup, criteria);\n      this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\n      this._updateFilter();\n    }, () => {\n      const field = this.option(\"fields\")[0];\n      const newCondition = createCondition(field, this._customOperations);\n      addItem(newCondition, criteria);\n      this._createConditionElement(newCondition, criteria, groupLevel + 1).appendTo($groupContent);\n      this._updateFilter();\n    }, groupLevel).appendTo($groupItem);\n    return $group;\n  }\n  _createButton(caption) {\n    return $(\"<div>\").text(caption);\n  }\n  _createGroupOperationButton(criteria) {\n    const groupOperations = this._getGroupOperations(criteria);\n    let groupMenuItem = getGroupMenuItem(criteria, groupOperations);\n    const caption = groupMenuItem.text;\n    const $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(\"dx-state-disabled\") : this._createButtonWithMenu({\n      caption: caption,\n      menu: {\n        items: groupOperations,\n        displayExpr: \"text\",\n        keyExpr: \"value\",\n        onItemClick: e => {\n          if (groupMenuItem !== e.itemData) {\n            setGroupValue(criteria, e.itemData.value);\n            $operationButton.text(e.itemData.text);\n            groupMenuItem = e.itemData;\n            this._updateFilter();\n          }\n        },\n        onContentReady(e) {\n          e.component.selectItem(groupMenuItem);\n        },\n        cssClass: \"dx-filterbuilder-group-operations\"\n      }\n    });\n    this._addAriaAttributes($operationButton, messageLocalization.format(\"dxFilterBuilder-filterAriaOperationButton\"), \"combobox\", true, false);\n    return $operationButton.addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-group-operation\").attr(\"tabindex\", 0);\n  }\n  _createButtonWithMenu(options) {\n    const that = this;\n    const removeMenu = function () {\n      that.$element().find(`.${ACTIVE_CLASS}`).removeClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"false\");\n      that.$element().find(\".dx-overlay .dx-treeview\").remove();\n      that.$element().find(\".dx-overlay\").remove();\n    };\n    const rtlEnabled = this.option(\"rtlEnabled\");\n    const position = rtlEnabled ? \"right\" : \"left\";\n    const $button = this._createButton(options.caption);\n    extend(options.menu, {\n      focusStateEnabled: true,\n      selectionMode: \"single\",\n      onItemClick: (handler = options.menu.onItemClick, function (e) {\n        handler(e);\n        if (\"dxclick\" === e.event.type) {\n          removeMenu();\n        }\n      }),\n      onHiding() {\n        $button.removeClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"false\");\n      },\n      position: {\n        my: `${position} top`,\n        at: `${position} bottom`,\n        offset: \"0 1\",\n        of: $button,\n        collision: \"flip\"\n      },\n      animation: null,\n      onHidden() {\n        removeMenu();\n      },\n      cssClass: `dx-filterbuilder-overlay ${options.menu.cssClass}`,\n      rtlEnabled: rtlEnabled\n    });\n    var handler;\n    options.popup = {\n      onShown(info) {\n        const treeViewElement = $(info.component.content()).find(\".dx-treeview\");\n        const treeView = treeViewElement.dxTreeView(\"instance\");\n        eventsEngine.on(treeViewElement, \"keyup keydown\", e => {\n          const keyName = normalizeKeyName(e);\n          if (\"keydown\" === e.type && \"tab\" === keyName || \"keyup\" === e.type && (\"escape\" === keyName || \"enter\" === keyName)) {\n            info.component.hide();\n            eventsEngine.trigger(options.menu.position.of, \"focus\");\n          }\n        });\n        treeView.focus();\n        treeView.option(\"focusedElement\", null);\n      }\n    };\n    this._subscribeOnClickAndEnterKey($button, () => {\n      removeMenu();\n      that._createPopupWithTreeView(options, that.$element());\n      $button.addClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"true\");\n    });\n    return $button;\n  }\n  _hasValueButton(condition) {\n    const customOperation = getCustomOperation(this._customOperations, condition[1]);\n    return customOperation ? false !== customOperation.hasValue : null !== condition[2];\n  }\n  _createOperationButtonWithMenu(condition, field) {\n    const that = this;\n    const availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\n    let currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\n    const $operationButton = this._createButtonWithMenu({\n      caption: currentOperation.text,\n      menu: {\n        items: availableOperations,\n        displayExpr: \"text\",\n        onItemRendered(e) {\n          e.itemData.isCustom && $(e.itemElement).addClass(\"dx-filterbuilder-menu-custom-operation\");\n        },\n        onContentReady(e) {\n          e.component.selectItem(currentOperation);\n        },\n        onItemClick: e => {\n          if (currentOperation !== e.itemData) {\n            currentOperation = e.itemData;\n            updateConditionByOperation(condition, currentOperation.value, that._customOperations);\n            const $valueButton = $operationButton.siblings().filter(\".dx-filterbuilder-item-value\");\n            if (that._hasValueButton(condition)) {\n              if (0 !== $valueButton.length) {\n                $valueButton.remove();\n              }\n              that._createValueButton(condition, field).appendTo($operationButton.parent());\n            } else {\n              $valueButton.remove();\n            }\n            $operationButton.text(currentOperation.text);\n            this._updateFilter();\n          }\n        },\n        cssClass: \"dx-filterbuilder-operations\"\n      }\n    }).addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-operation\").attr(\"tabindex\", 0);\n    this._addAriaAttributes($operationButton, messageLocalization.format(\"dxFilterBuilder-filterAriaItemOperation\"), \"combobox\", true, false);\n    return $operationButton;\n  }\n  _createOperationAndValueButtons(condition, field, $item) {\n    this._createOperationButtonWithMenu(condition, field).appendTo($item);\n    if (this._hasValueButton(condition)) {\n      this._createValueButton(condition, field).appendTo($item);\n    }\n  }\n  _createFieldButtonWithMenu(fields, condition, field) {\n    const that = this;\n    const allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\n    const items = getItems(fields, allowHierarchicalFields);\n    let item = getField(field.name || field.dataField, items);\n    const getFullCaption = function (item, items) {\n      return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption;\n    };\n    condition[0] = item.name || item.dataField;\n    const $fieldButton = this._createButtonWithMenu({\n      caption: getFullCaption(item, items),\n      menu: {\n        items: items,\n        dataStructure: \"plain\",\n        keyExpr: \"id\",\n        parentId: \"parentId\",\n        displayExpr: \"caption\",\n        onItemClick: e => {\n          if (item !== e.itemData) {\n            item = e.itemData;\n            condition[0] = item.name || item.dataField;\n            condition[2] = \"object\" === item.dataType ? null : \"\";\n            updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\n            $fieldButton.siblings().filter(\".dx-filterbuilder-text\").remove();\n            that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\n            const caption = getFullCaption(item, e.component.option(\"items\"));\n            $fieldButton.text(caption);\n            this._updateFilter();\n          }\n        },\n        onContentReady(e) {\n          e.component.selectItem(item);\n        },\n        cssClass: \"dx-filterbuilder-fields\"\n      }\n    }).addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-field\").attr(\"tabindex\", 0);\n    this._addAriaAttributes($fieldButton, messageLocalization.format(\"dxFilterBuilder-filterAriaItemField\"), \"combobox\", true, false);\n    return $fieldButton;\n  }\n  _createConditionItem(condition, parent, groupLevel) {\n    const $item = $(\"<div>\").addClass(\"dx-filterbuilder-group-item\");\n    const fields = this._getNormalizedFields();\n    const field = getField(condition[0], fields);\n    this._addAriaAttributes($item, \"\", \"treeitem\", null, null, groupLevel);\n    this._createRemoveButton(() => {\n      removeItem(parent, condition);\n      const isSingleChild = 1 === $item.parent().children().length;\n      if (isSingleChild) {\n        $item.parent().remove();\n      } else {\n        $item.remove();\n      }\n      this._updateFilter();\n    }, \"condition\").appendTo($item);\n    this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\n    this._createOperationAndValueButtons(condition, field, $item);\n    return $item;\n  }\n  _getGroupOperations(criteria) {\n    let groupOperations = this.option(\"groupOperations\");\n    const groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\n    if (!groupOperations || !groupOperations.length) {\n      groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")];\n    }\n    return groupOperations.map(operation => ({\n      text: groupOperationDescriptions[operation],\n      value: OPERATORS[operation]\n    }));\n  }\n  _createRemoveButton(handler, type) {\n    const $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(\"dx-icon-remove\").addClass(\"dx-filterbuilder-action\").attr(\"tabindex\", 0);\n    if (type) {\n      const removeMessage = messageLocalization.format(\"dxFilterBuilder-filterAriaRemoveButton\", type);\n      this._addAriaAttributes($removeButton, removeMessage, \"button\");\n    }\n    this._subscribeOnClickAndEnterKey($removeButton, handler);\n    return $removeButton;\n  }\n  _createAddButton(addGroupHandler, addConditionHandler, groupLevel) {\n    let $button;\n    const maxGroupLevel = this.option(\"maxGroupLevel\");\n    if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\n      $button = this._createButton();\n      this._subscribeOnClickAndEnterKey($button, addConditionHandler);\n    } else {\n      $button = this._createButtonWithMenu({\n        menu: {\n          items: [{\n            caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\n            click: addConditionHandler\n          }, {\n            caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\n            click: addGroupHandler\n          }],\n          displayExpr: \"caption\",\n          onItemClick(e) {\n            e.itemData.click();\n          },\n          cssClass: \"dx-filterbuilder-add-condition\"\n        }\n      });\n    }\n    this._addAriaAttributes($button, messageLocalization.format(\"dxFilterBuilder-filterAriaAddButton\"), \"combobox\", true, false);\n    return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(\"dx-icon-plus\").addClass(\"dx-filterbuilder-action\").attr(\"tabindex\", 0);\n  }\n  _createValueText(item, field, $container) {\n    const that = this;\n    const $text = $(\"<div>\").html(\"&nbsp;\").addClass(\"dx-filterbuilder-item-value-text\").attr(\"tabindex\", 0).appendTo($container);\n    this._addAriaAttributes($text, messageLocalization.format(\"dxFilterBuilder-filterAriaItemValue\"), \"button\", true);\n    const value = item[2];\n    const customOperation = getCustomOperation(that._customOperations, item[1]);\n    if (!customOperation && field.lookup) {\n      getCurrentLookupValueText(field, value, result => {\n        renderValueText($text, result);\n      });\n    } else {\n      when(getCurrentValueText(field, value, customOperation)).done(result => {\n        renderValueText($text, result, customOperation);\n      });\n    }\n    that._subscribeOnClickAndEnterKey($text, e => {\n      if (\"keyup\" === e.type) {\n        e.stopPropagation();\n      }\n      that._createValueEditorWithEvents(item, field, $container);\n    });\n    return $text;\n  }\n  _updateConditionValue(item, value, callback) {\n    const areValuesDifferent = item[2] !== value;\n    if (areValuesDifferent) {\n      item[2] = value;\n    }\n    callback();\n    this._updateFilter();\n  }\n  _addDocumentKeyUp($editor, handler) {\n    let isComposing = false;\n    let hasCompositionJustEnded = false;\n    const document = domAdapter.getDocument();\n    const documentKeyUpHandler = e => {\n      if (isComposing || hasCompositionJustEnded) {\n        hasCompositionJustEnded = false;\n        return;\n      }\n      handler(e);\n    };\n    eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\n    const input = $editor.find(\"input\");\n    eventsEngine.on(input, \"compositionstart\", () => {\n      isComposing = true;\n    });\n    eventsEngine.on(input, \"compositionend\", () => {\n      isComposing = false;\n      hasCompositionJustEnded = true;\n    });\n    eventsEngine.on(input, \"keydown\", event => {\n      if (229 !== event.which) {\n        hasCompositionJustEnded = false;\n      }\n    });\n    this._documentKeyUpHandler = documentKeyUpHandler;\n  }\n  _addDocumentClick($editor, closeEditorFunc) {\n    const document = domAdapter.getDocument();\n    const documentClickHandler = e => {\n      if (!this._isFocusOnEditorParts($editor, e.target)) {\n        eventsEngine.trigger($editor.find(\"input\"), \"change\");\n        closeEditorFunc();\n      }\n    };\n    eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\n    this._documentClickHandler = documentClickHandler;\n  }\n  _isFocusOnEditorParts($editor, target) {\n    const activeElement = target || domAdapter.getActiveElement();\n    return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length;\n  }\n  _removeEvents() {\n    const document = domAdapter.getDocument();\n    isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\n    isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler);\n  }\n  _dispose() {\n    this._removeEvents();\n    super._dispose();\n  }\n  _createValueEditorWithEvents(item, field, $container) {\n    let value = item[2];\n    const createValueText = () => {\n      $container.empty();\n      this._removeEvents();\n      return this._createValueText(item, field, $container);\n    };\n    const closeEditor = () => {\n      this._updateConditionValue(item, value, () => {\n        createValueText();\n      });\n    };\n    const options = {\n      value: \"\" === value ? null : value,\n      filterOperation: getOperationValue(item),\n      setValue(data) {\n        value = null === data ? \"\" : data;\n      },\n      closeEditor: closeEditor,\n      text: $container.text()\n    };\n    $container.empty();\n    const $editor = this._createValueEditor($container, field, options);\n    eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\n    this._removeEvents();\n    this._addDocumentClick($editor, closeEditor);\n    this._addDocumentKeyUp($editor, e => {\n      const keyName = normalizeKeyName(e);\n      if (\"tab\" === keyName) {\n        if (this._isFocusOnEditorParts($editor)) {\n          return;\n        }\n        this._updateConditionValue(item, value, () => {\n          createValueText();\n          if (e.shiftKey) {\n            eventsEngine.trigger($container.prev(), \"focus\");\n          }\n        });\n      }\n      if (\"escape\" === keyName) {\n        eventsEngine.trigger(createValueText(), \"focus\");\n      }\n      if (\"enter\" === keyName) {\n        this._updateConditionValue(item, value, () => {\n          eventsEngine.trigger(createValueText(), \"focus\");\n        });\n      }\n    });\n    this._fireContentReadyAction();\n  }\n  _createValueButton(item, field) {\n    const $valueButton = $(\"<div>\").addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-value\");\n    this._createValueText(item, field, $valueButton);\n    return $valueButton;\n  }\n  _createValueEditor($container, field, options) {\n    const $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\n    const customOperation = getCustomOperation(this._customOperations, options.filterOperation);\n    const editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\n    if (editorTemplate) {\n      const template = this._getTemplate(editorTemplate);\n      template.render({\n        model: extend({\n          field: field\n        }, options),\n        container: $editor\n      });\n    } else {\n      this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\n        parentType: SOURCE\n      }));\n    }\n    return $editor;\n  }\n  _createPopupWithTreeView(options, $container) {\n    const that = this;\n    const $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\n    this._createComponent($popup, Popup, {\n      onHiding: options.menu.onHiding,\n      onHidden: options.menu.onHidden,\n      rtlEnabled: options.menu.rtlEnabled,\n      position: options.menu.position,\n      animation: options.menu.animation,\n      contentTemplate(contentElement) {\n        const $menuContainer = $(\"<div>\").appendTo(contentElement);\n        that._createComponent($menuContainer, TreeView, options.menu);\n        this.repaint();\n      },\n      _ignoreFunctionValueDeprecation: true,\n      maxHeight: () => getElementMaxHeightByWindow(options.menu.position.of),\n      visible: true,\n      focusStateEnabled: false,\n      preventScrollEvents: false,\n      container: $popup,\n      hideOnOutsideClick: true,\n      onShown: options.popup.onShown,\n      shading: false,\n      width: \"auto\",\n      height: \"auto\",\n      showTitle: false,\n      _wrapperClassExternal: options.menu.cssClass,\n      _ignorePreventScrollEventsDeprecation: true\n    });\n  }\n  _subscribeOnClickAndEnterKey($button, handler) {\n    eventsEngine.on($button, \"dxclick\", handler);\n    eventsEngine.on($button, \"keyup\", e => {\n      if (\"enter\" === normalizeKeyName(e)) {\n        handler(e);\n      }\n    });\n  }\n}\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\nexport default FilterBuilder;","map":{"version":3,"names":["eventsEngine","normalizeKeyName","messageLocalization","registerComponent","domAdapter","Guid","$","when","extend","isDefined","Popup","EditorFactoryMixin","TreeView","Widget","getElementMaxHeightByWindow","addItem","convertToInnerStructure","createCondition","createEmptyGroup","getAvailableOperations","getCaptionWithParents","getCurrentLookupValueText","getCurrentValueText","getCustomOperation","getDefaultOperation","getField","getFilterExpression","getGroupCriteria","getGroupMenuItem","getGroupValue","getItems","getMergedOperations","getNormalizedFields","getNormalizedFilter","getOperationFromAvailable","getOperationValue","isCondition","isGroup","removeItem","renderValueText","setGroupValue","updateConditionByOperation","FILTER_BUILDER_CLASS","FILTER_BUILDER_GROUP_CLASS","FILTER_BUILDER_GROUP_ITEM_CLASS","FILTER_BUILDER_GROUP_CONTENT_CLASS","FILTER_BUILDER_GROUP_OPERATIONS_CLASS","FILTER_BUILDER_GROUP_OPERATION_CLASS","FILTER_BUILDER_ACTION_CLASS","FILTER_BUILDER_IMAGE_CLASS","FILTER_BUILDER_IMAGE_ADD_CLASS","FILTER_BUILDER_IMAGE_REMOVE_CLASS","FILTER_BUILDER_ITEM_TEXT_CLASS","FILTER_BUILDER_ITEM_FIELD_CLASS","FILTER_BUILDER_ITEM_OPERATION_CLASS","FILTER_BUILDER_ITEM_VALUE_CLASS","FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS","FILTER_BUILDER_OVERLAY_CLASS","FILTER_BUILDER_FILTER_OPERATIONS_CLASS","FILTER_BUILDER_FIELDS_CLASS","FILTER_BUILDER_ADD_CONDITION_CLASS","ACTIVE_CLASS","FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS","SOURCE","DISABLED_STATE_CLASS","TAB_KEY","ENTER_KEY","ESCAPE_KEY","ACTIONS","name","config","excludeValidators","category","OPERATORS","and","or","notAnd","notOr","EditorFactory","FilterBuilder","_getDefaultOptions","onEditorPreparing","onEditorPrepared","onValueChanged","fields","groupOperations","maxGroupLevel","value","allowHierarchicalFields","groupOperationDescriptions","format","customOperations","closePopupOnTargetScroll","filterOperationDescriptions","between","equal","notEqual","lessThan","lessThanOrEqual","greaterThan","greaterThanOrEqual","startsWith","contains","notContains","endsWith","isBlank","isNotBlank","_optionChanged","args","_initActions","_initCustomOperations","_invalidate","previousValue","disableInvalidateForValue","_disableInvalidateForValue","_initModel","executeAction","_getNormalizedFields","_model","_customOperations","option","_updateFilter","normalizedValue","oldValue","_getModel","JSON","stringify","_fireContentReadyAction","_init","_initEditorFactory","_editorFactory","_getDefaultGroupOperation","_this$option","that","_actions","forEach","action","actionConfig","_createActionByOption","actionName","options","_initMarkup","$element","addClass","_addAriaAttributes","_createGroupElementByCriteria","appendTo","ariaLabel","role","hasPopup","hasExpanded","ariaLevel","length","attributes","text","title","attr","_createConditionElement","condition","parent","groupLevel","append","_createConditionItem","criteria","arguments","$group","_createGroupElement","$groupContent","find","groupCriteria","i","innerCriteria","$guid","$groupItem","_createRemoveButton","remove","_createGroupOperationButton","_createAddButton","newGroup","field","newCondition","_createButton","caption","_getGroupOperations","groupMenuItem","$operationButton","_createButtonWithMenu","menu","items","displayExpr","keyExpr","onItemClick","e","itemData","onContentReady","component","selectItem","cssClass","removeMenu","removeClass","rtlEnabled","position","$button","focusStateEnabled","selectionMode","handler","event","type","onHiding","my","at","offset","of","collision","animation","onHidden","popup","onShown","info","treeViewElement","content","treeView","dxTreeView","on","keyName","hide","trigger","focus","_subscribeOnClickAndEnterKey","_createPopupWithTreeView","_hasValueButton","customOperation","hasValue","_createOperationButtonWithMenu","availableOperations","currentOperation","onItemRendered","isCustom","itemElement","$valueButton","siblings","filter","_createValueButton","_createOperationAndValueButtons","$item","_createFieldButtonWithMenu","item","dataField","getFullCaption","$fieldButton","dataStructure","parentId","dataType","isSingleChild","children","replace","map","operation","$removeButton","removeMessage","addGroupHandler","addConditionHandler","click","_createValueText","$container","$text","html","lookup","result","done","stopPropagation","_createValueEditorWithEvents","_updateConditionValue","callback","areValuesDifferent","_addDocumentKeyUp","$editor","isComposing","hasCompositionJustEnded","document","getDocument","documentKeyUpHandler","input","which","_documentKeyUpHandler","_addDocumentClick","closeEditorFunc","documentClickHandler","_isFocusOnEditorParts","target","_documentClickHandler","activeElement","getActiveElement","closest","_removeEvents","off","_dispose","createValueText","empty","closeEditor","filterOperation","setValue","data","_createValueEditor","not","eq","shiftKey","prev","editorTemplate","template","_getTemplate","render","model","container","createEditor","call","parentType","$popup","_createComponent","contentTemplate","contentElement","$menuContainer","repaint","_ignoreFunctionValueDeprecation","maxHeight","visible","preventScrollEvents","hideOnOutsideClick","shading","width","height","showTitle","_wrapperClassExternal","_ignorePreventScrollEventsDeprecation"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/filter_builder/m_filter_builder.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/filter_builder/m_filter_builder.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport eventsEngine from \"../../common/core/events/core/events_engine\";\r\nimport {\r\n    normalizeKeyName\r\n} from \"../../common/core/events/utils/index\";\r\nimport messageLocalization from \"../../common/core/localization/message\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport domAdapter from \"../../core/dom_adapter\";\r\nimport Guid from \"../../core/guid\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    when\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    isDefined\r\n} from \"../../core/utils/type\";\r\nimport Popup from \"../../ui/popup/ui.popup\";\r\nimport EditorFactoryMixin from \"../../ui/shared/ui.editor_factory_mixin\";\r\nimport TreeView from \"../../ui/tree_view\";\r\nimport Widget from \"../../ui/widget/ui.widget\";\r\nimport {\r\n    getElementMaxHeightByWindow\r\n} from \"../ui/overlay/m_utils\";\r\nimport {\r\n    addItem,\r\n    convertToInnerStructure,\r\n    createCondition,\r\n    createEmptyGroup,\r\n    getAvailableOperations,\r\n    getCaptionWithParents,\r\n    getCurrentLookupValueText,\r\n    getCurrentValueText,\r\n    getCustomOperation,\r\n    getDefaultOperation,\r\n    getField,\r\n    getFilterExpression,\r\n    getGroupCriteria,\r\n    getGroupMenuItem,\r\n    getGroupValue,\r\n    getItems,\r\n    getMergedOperations,\r\n    getNormalizedFields,\r\n    getNormalizedFilter,\r\n    getOperationFromAvailable,\r\n    getOperationValue,\r\n    isCondition,\r\n    isGroup,\r\n    removeItem,\r\n    renderValueText,\r\n    setGroupValue,\r\n    updateConditionByOperation\r\n} from \"./m_utils\";\r\nconst FILTER_BUILDER_CLASS = \"dx-filterbuilder\";\r\nconst FILTER_BUILDER_GROUP_CLASS = \"dx-filterbuilder-group\";\r\nconst FILTER_BUILDER_GROUP_ITEM_CLASS = \"dx-filterbuilder-group-item\";\r\nconst FILTER_BUILDER_GROUP_CONTENT_CLASS = \"dx-filterbuilder-group-content\";\r\nconst FILTER_BUILDER_GROUP_OPERATIONS_CLASS = \"dx-filterbuilder-group-operations\";\r\nconst FILTER_BUILDER_GROUP_OPERATION_CLASS = \"dx-filterbuilder-group-operation\";\r\nconst FILTER_BUILDER_ACTION_CLASS = \"dx-filterbuilder-action\";\r\nconst FILTER_BUILDER_IMAGE_CLASS = \"dx-filterbuilder-action-icon\";\r\nconst FILTER_BUILDER_IMAGE_ADD_CLASS = \"dx-icon-plus\";\r\nconst FILTER_BUILDER_IMAGE_REMOVE_CLASS = \"dx-icon-remove\";\r\nconst FILTER_BUILDER_ITEM_TEXT_CLASS = \"dx-filterbuilder-text\";\r\nconst FILTER_BUILDER_ITEM_FIELD_CLASS = \"dx-filterbuilder-item-field\";\r\nconst FILTER_BUILDER_ITEM_OPERATION_CLASS = \"dx-filterbuilder-item-operation\";\r\nconst FILTER_BUILDER_ITEM_VALUE_CLASS = \"dx-filterbuilder-item-value\";\r\nconst FILTER_BUILDER_ITEM_VALUE_TEXT_CLASS = \"dx-filterbuilder-item-value-text\";\r\nconst FILTER_BUILDER_OVERLAY_CLASS = \"dx-filterbuilder-overlay\";\r\nconst FILTER_BUILDER_FILTER_OPERATIONS_CLASS = \"dx-filterbuilder-operations\";\r\nconst FILTER_BUILDER_FIELDS_CLASS = \"dx-filterbuilder-fields\";\r\nconst FILTER_BUILDER_ADD_CONDITION_CLASS = \"dx-filterbuilder-add-condition\";\r\nconst ACTIVE_CLASS = \"dx-state-active\";\r\nconst FILTER_BUILDER_MENU_CUSTOM_OPERATION_CLASS = \"dx-filterbuilder-menu-custom-operation\";\r\nconst SOURCE = \"filterBuilder\";\r\nconst DISABLED_STATE_CLASS = \"dx-state-disabled\";\r\nconst TAB_KEY = \"tab\";\r\nconst ENTER_KEY = \"enter\";\r\nconst ESCAPE_KEY = \"escape\";\r\nconst ACTIONS = [{\r\n    name: \"onEditorPreparing\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onEditorPrepared\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"],\r\n        category: \"rendering\"\r\n    }\r\n}, {\r\n    name: \"onValueChanged\",\r\n    config: {\r\n        excludeValidators: [\"disabled\", \"readOnly\"]\r\n    }\r\n}];\r\nconst OPERATORS = {\r\n    and: \"and\",\r\n    or: \"or\",\r\n    notAnd: \"!and\",\r\n    notOr: \"!or\"\r\n};\r\nconst EditorFactory = EditorFactoryMixin(class {});\r\nclass FilterBuilder extends Widget {\r\n    _getDefaultOptions() {\r\n        return extend(super._getDefaultOptions(), {\r\n            onEditorPreparing: null,\r\n            onEditorPrepared: null,\r\n            onValueChanged: null,\r\n            fields: [],\r\n            groupOperations: [\"and\", \"or\", \"notAnd\", \"notOr\"],\r\n            maxGroupLevel: void 0,\r\n            value: null,\r\n            allowHierarchicalFields: false,\r\n            groupOperationDescriptions: {\r\n                and: messageLocalization.format(\"dxFilterBuilder-and\"),\r\n                or: messageLocalization.format(\"dxFilterBuilder-or\"),\r\n                notAnd: messageLocalization.format(\"dxFilterBuilder-notAnd\"),\r\n                notOr: messageLocalization.format(\"dxFilterBuilder-notOr\")\r\n            },\r\n            customOperations: [],\r\n            closePopupOnTargetScroll: true,\r\n            filterOperationDescriptions: {\r\n                between: messageLocalization.format(\"dxFilterBuilder-filterOperationBetween\"),\r\n                equal: messageLocalization.format(\"dxFilterBuilder-filterOperationEquals\"),\r\n                notEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationNotEquals\"),\r\n                lessThan: messageLocalization.format(\"dxFilterBuilder-filterOperationLess\"),\r\n                lessThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationLessOrEquals\"),\r\n                greaterThan: messageLocalization.format(\"dxFilterBuilder-filterOperationGreater\"),\r\n                greaterThanOrEqual: messageLocalization.format(\"dxFilterBuilder-filterOperationGreaterOrEquals\"),\r\n                startsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationStartsWith\"),\r\n                contains: messageLocalization.format(\"dxFilterBuilder-filterOperationContains\"),\r\n                notContains: messageLocalization.format(\"dxFilterBuilder-filterOperationNotContains\"),\r\n                endsWith: messageLocalization.format(\"dxFilterBuilder-filterOperationEndsWith\"),\r\n                isBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsBlank\"),\r\n                isNotBlank: messageLocalization.format(\"dxFilterBuilder-filterOperationIsNotBlank\")\r\n            }\r\n        })\r\n    }\r\n    _optionChanged(args) {\r\n        switch (args.name) {\r\n            case \"closePopupOnTargetScroll\":\r\n                break;\r\n            case \"onEditorPreparing\":\r\n            case \"onEditorPrepared\":\r\n            case \"onValueChanged\":\r\n                this._initActions();\r\n                break;\r\n            case \"customOperations\":\r\n                this._initCustomOperations();\r\n                this._invalidate();\r\n                break;\r\n            case \"fields\":\r\n            case \"maxGroupLevel\":\r\n            case \"groupOperations\":\r\n            case \"allowHierarchicalFields\":\r\n            case \"groupOperationDescriptions\":\r\n            case \"filterOperationDescriptions\":\r\n                this._invalidate();\r\n                break;\r\n            case \"value\":\r\n                if (args.value !== args.previousValue) {\r\n                    const disableInvalidateForValue = this._disableInvalidateForValue;\r\n                    if (!disableInvalidateForValue) {\r\n                        this._initModel();\r\n                        this._invalidate()\r\n                    }\r\n                    this._disableInvalidateForValue = false;\r\n                    this.executeAction(\"onValueChanged\", {\r\n                        value: args.value,\r\n                        previousValue: args.previousValue\r\n                    });\r\n                    this._disableInvalidateForValue = disableInvalidateForValue\r\n                }\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    getFilterExpression() {\r\n        const fields = this._getNormalizedFields();\r\n        const value = extend(true, [], this._model);\r\n        return getFilterExpression(getNormalizedFilter(value), fields, this._customOperations, SOURCE)\r\n    }\r\n    _getNormalizedFields() {\r\n        return getNormalizedFields(this.option(\"fields\"))\r\n    }\r\n    _updateFilter() {\r\n        this._disableInvalidateForValue = true;\r\n        const value = extend(true, [], this._model);\r\n        const normalizedValue = getNormalizedFilter(value);\r\n        const oldValue = getNormalizedFilter(this._getModel(this.option(\"value\")));\r\n        if (JSON.stringify(oldValue) !== JSON.stringify(normalizedValue)) {\r\n            this.option(\"value\", normalizedValue)\r\n        }\r\n        this._disableInvalidateForValue = false;\r\n        this._fireContentReadyAction()\r\n    }\r\n    _init() {\r\n        this._initCustomOperations();\r\n        this._initModel();\r\n        this._initEditorFactory();\r\n        this._initActions();\r\n        super._init()\r\n    }\r\n    _initEditorFactory() {\r\n        this._editorFactory = new EditorFactory\r\n    }\r\n    _initCustomOperations() {\r\n        this._customOperations = getMergedOperations(this.option(\"customOperations\"), this.option(\"filterOperationDescriptions.between\"), this)\r\n    }\r\n    _getDefaultGroupOperation() {\r\n        var _this$option;\r\n        return (null === (_this$option = this.option(\"groupOperations\")) || void 0 === _this$option ? void 0 : _this$option[0]) ?? OPERATORS.and\r\n    }\r\n    _getModel(value) {\r\n        return convertToInnerStructure(value, this._customOperations, this._getDefaultGroupOperation())\r\n    }\r\n    _initModel() {\r\n        this._model = this._getModel(this.option(\"value\"))\r\n    }\r\n    _initActions() {\r\n        const that = this;\r\n        that._actions = {};\r\n        ACTIONS.forEach((action => {\r\n            const actionConfig = extend({}, action.config);\r\n            that._actions[action.name] = that._createActionByOption(action.name, actionConfig)\r\n        }))\r\n    }\r\n    executeAction(actionName, options) {\r\n        const action = this._actions[actionName];\r\n        return action && action(options)\r\n    }\r\n    _initMarkup() {\r\n        this.$element().addClass(\"dx-filterbuilder\");\r\n        super._initMarkup();\r\n        this._addAriaAttributes(this.$element(), messageLocalization.format(\"dxFilterBuilder-filterAriaRootElement\"), \"tree\");\r\n        this._createGroupElementByCriteria(this._model).appendTo(this.$element())\r\n    }\r\n    _addAriaAttributes($element, ariaLabel, role, hasPopup, hasExpanded, ariaLevel) {\r\n        if (!$element || !$element.length) {\r\n            return\r\n        }\r\n        const attributes = {\r\n            role: role\r\n        };\r\n        if (ariaLabel) {\r\n            if ($element.text().length > 0) {\r\n                attributes.title = ariaLabel\r\n            } else {\r\n                attributes[\"aria-label\"] = ariaLabel\r\n            }\r\n        }\r\n        if (isDefined(hasPopup)) {\r\n            attributes[\"aria-haspopup\"] = `${hasPopup}`\r\n        }\r\n        if (isDefined(hasExpanded)) {\r\n            attributes[\"aria-expanded\"] = `${hasExpanded}`\r\n        }\r\n        if (isDefined(ariaLevel)) {\r\n            attributes[\"aria-level\"] = `${ariaLevel}`\r\n        }\r\n        $element.attr(attributes)\r\n    }\r\n    _createConditionElement(condition, parent, groupLevel) {\r\n        return $(\"<div>\").addClass(\"dx-filterbuilder-group\").append(this._createConditionItem(condition, parent, groupLevel))\r\n    }\r\n    _createGroupElementByCriteria(criteria, parent) {\r\n        let groupLevel = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : 0;\r\n        const $group = this._createGroupElement(criteria, parent, groupLevel);\r\n        const $groupContent = $group.find(\".dx-filterbuilder-group-content\");\r\n        const groupCriteria = getGroupCriteria(criteria);\r\n        for (let i = 0; i < groupCriteria.length; i++) {\r\n            const innerCriteria = groupCriteria[i];\r\n            if (isGroup(innerCriteria)) {\r\n                this._createGroupElementByCriteria(innerCriteria, criteria, groupLevel + 1).appendTo($groupContent)\r\n            } else if (isCondition(innerCriteria)) {\r\n                this._createConditionElement(innerCriteria, criteria, `${groupLevel+1}`).appendTo($groupContent)\r\n            }\r\n        }\r\n        return $group\r\n    }\r\n    _createGroupElement(criteria, parent, groupLevel) {\r\n        const $guid = new Guid;\r\n        const $groupItem = $(\"<div>\").addClass(\"dx-filterbuilder-group-item\");\r\n        const $groupContent = $(\"<div>\").addClass(\"dx-filterbuilder-group-content\").attr(\"id\", `${$guid}`);\r\n        const $group = $(\"<div>\").addClass(\"dx-filterbuilder-group\").append($groupItem).append($groupContent);\r\n        if (null != parent) {\r\n            this._createRemoveButton((() => {\r\n                removeItem(parent, criteria);\r\n                $group.remove();\r\n                this._updateFilter()\r\n            }), \"group\").appendTo($groupItem)\r\n        }\r\n        this._addAriaAttributes($groupItem, messageLocalization.format(\"dxFilterBuilder-filterAriaGroupItem\"), \"treeitem\", null, null, `${groupLevel+1}`);\r\n        this._addAriaAttributes($groupContent, \"\", \"group\");\r\n        $groupItem.attr(\"aria-owns\", `${$guid}`);\r\n        this._createGroupOperationButton(criteria).appendTo($groupItem);\r\n        this._createAddButton((() => {\r\n            const newGroup = createEmptyGroup(this._getDefaultGroupOperation());\r\n            addItem(newGroup, criteria);\r\n            this._createGroupElement(newGroup, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }), (() => {\r\n            const field = this.option(\"fields\")[0];\r\n            const newCondition = createCondition(field, this._customOperations);\r\n            addItem(newCondition, criteria);\r\n            this._createConditionElement(newCondition, criteria, groupLevel + 1).appendTo($groupContent);\r\n            this._updateFilter()\r\n        }), groupLevel).appendTo($groupItem);\r\n        return $group\r\n    }\r\n    _createButton(caption) {\r\n        return $(\"<div>\").text(caption)\r\n    }\r\n    _createGroupOperationButton(criteria) {\r\n        const groupOperations = this._getGroupOperations(criteria);\r\n        let groupMenuItem = getGroupMenuItem(criteria, groupOperations);\r\n        const caption = groupMenuItem.text;\r\n        const $operationButton = groupOperations && groupOperations.length < 2 ? this._createButton(caption).addClass(\"dx-state-disabled\") : this._createButtonWithMenu({\r\n            caption: caption,\r\n            menu: {\r\n                items: groupOperations,\r\n                displayExpr: \"text\",\r\n                keyExpr: \"value\",\r\n                onItemClick: e => {\r\n                    if (groupMenuItem !== e.itemData) {\r\n                        setGroupValue(criteria, e.itemData.value);\r\n                        $operationButton.text(e.itemData.text);\r\n                        groupMenuItem = e.itemData;\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady(e) {\r\n                    e.component.selectItem(groupMenuItem)\r\n                },\r\n                cssClass: \"dx-filterbuilder-group-operations\"\r\n            }\r\n        });\r\n        this._addAriaAttributes($operationButton, messageLocalization.format(\"dxFilterBuilder-filterAriaOperationButton\"), \"combobox\", true, false);\r\n        return $operationButton.addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-group-operation\").attr(\"tabindex\", 0)\r\n    }\r\n    _createButtonWithMenu(options) {\r\n        const that = this;\r\n        const removeMenu = function() {\r\n            that.$element().find(`.${ACTIVE_CLASS}`).removeClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"false\");\r\n            that.$element().find(\".dx-overlay .dx-treeview\").remove();\r\n            that.$element().find(\".dx-overlay\").remove()\r\n        };\r\n        const rtlEnabled = this.option(\"rtlEnabled\");\r\n        const position = rtlEnabled ? \"right\" : \"left\";\r\n        const $button = this._createButton(options.caption);\r\n        extend(options.menu, {\r\n            focusStateEnabled: true,\r\n            selectionMode: \"single\",\r\n            onItemClick: (handler = options.menu.onItemClick, function(e) {\r\n                handler(e);\r\n                if (\"dxclick\" === e.event.type) {\r\n                    removeMenu()\r\n                }\r\n            }),\r\n            onHiding() {\r\n                $button.removeClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"false\")\r\n            },\r\n            position: {\r\n                my: `${position} top`,\r\n                at: `${position} bottom`,\r\n                offset: \"0 1\",\r\n                of: $button,\r\n                collision: \"flip\"\r\n            },\r\n            animation: null,\r\n            onHidden() {\r\n                removeMenu()\r\n            },\r\n            cssClass: `dx-filterbuilder-overlay ${options.menu.cssClass}`,\r\n            rtlEnabled: rtlEnabled\r\n        });\r\n        var handler;\r\n        options.popup = {\r\n            onShown(info) {\r\n                const treeViewElement = $(info.component.content()).find(\".dx-treeview\");\r\n                const treeView = treeViewElement.dxTreeView(\"instance\");\r\n                eventsEngine.on(treeViewElement, \"keyup keydown\", (e => {\r\n                    const keyName = normalizeKeyName(e);\r\n                    if (\"keydown\" === e.type && \"tab\" === keyName || \"keyup\" === e.type && (\"escape\" === keyName || \"enter\" === keyName)) {\r\n                        info.component.hide();\r\n                        eventsEngine.trigger(options.menu.position.of, \"focus\")\r\n                    }\r\n                }));\r\n                treeView.focus();\r\n                treeView.option(\"focusedElement\", null)\r\n            }\r\n        };\r\n        this._subscribeOnClickAndEnterKey($button, (() => {\r\n            removeMenu();\r\n            that._createPopupWithTreeView(options, that.$element());\r\n            $button.addClass(ACTIVE_CLASS).attr(\"aria-expanded\", \"true\")\r\n        }));\r\n        return $button\r\n    }\r\n    _hasValueButton(condition) {\r\n        const customOperation = getCustomOperation(this._customOperations, condition[1]);\r\n        return customOperation ? false !== customOperation.hasValue : null !== condition[2]\r\n    }\r\n    _createOperationButtonWithMenu(condition, field) {\r\n        const that = this;\r\n        const availableOperations = getAvailableOperations(field, this.option(\"filterOperationDescriptions\"), this._customOperations);\r\n        let currentOperation = getOperationFromAvailable(getOperationValue(condition), availableOperations);\r\n        const $operationButton = this._createButtonWithMenu({\r\n            caption: currentOperation.text,\r\n            menu: {\r\n                items: availableOperations,\r\n                displayExpr: \"text\",\r\n                onItemRendered(e) {\r\n                    e.itemData.isCustom && $(e.itemElement).addClass(\"dx-filterbuilder-menu-custom-operation\")\r\n                },\r\n                onContentReady(e) {\r\n                    e.component.selectItem(currentOperation)\r\n                },\r\n                onItemClick: e => {\r\n                    if (currentOperation !== e.itemData) {\r\n                        currentOperation = e.itemData;\r\n                        updateConditionByOperation(condition, currentOperation.value, that._customOperations);\r\n                        const $valueButton = $operationButton.siblings().filter(\".dx-filterbuilder-item-value\");\r\n                        if (that._hasValueButton(condition)) {\r\n                            if (0 !== $valueButton.length) {\r\n                                $valueButton.remove()\r\n                            }\r\n                            that._createValueButton(condition, field).appendTo($operationButton.parent())\r\n                        } else {\r\n                            $valueButton.remove()\r\n                        }\r\n                        $operationButton.text(currentOperation.text);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                cssClass: \"dx-filterbuilder-operations\"\r\n            }\r\n        }).addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-operation\").attr(\"tabindex\", 0);\r\n        this._addAriaAttributes($operationButton, messageLocalization.format(\"dxFilterBuilder-filterAriaItemOperation\"), \"combobox\", true, false);\r\n        return $operationButton\r\n    }\r\n    _createOperationAndValueButtons(condition, field, $item) {\r\n        this._createOperationButtonWithMenu(condition, field).appendTo($item);\r\n        if (this._hasValueButton(condition)) {\r\n            this._createValueButton(condition, field).appendTo($item)\r\n        }\r\n    }\r\n    _createFieldButtonWithMenu(fields, condition, field) {\r\n        const that = this;\r\n        const allowHierarchicalFields = this.option(\"allowHierarchicalFields\");\r\n        const items = getItems(fields, allowHierarchicalFields);\r\n        let item = getField(field.name || field.dataField, items);\r\n        const getFullCaption = function(item, items) {\r\n            return allowHierarchicalFields ? getCaptionWithParents(item, items) : item.caption\r\n        };\r\n        condition[0] = item.name || item.dataField;\r\n        const $fieldButton = this._createButtonWithMenu({\r\n            caption: getFullCaption(item, items),\r\n            menu: {\r\n                items: items,\r\n                dataStructure: \"plain\",\r\n                keyExpr: \"id\",\r\n                parentId: \"parentId\",\r\n                displayExpr: \"caption\",\r\n                onItemClick: e => {\r\n                    if (item !== e.itemData) {\r\n                        item = e.itemData;\r\n                        condition[0] = item.name || item.dataField;\r\n                        condition[2] = \"object\" === item.dataType ? null : \"\";\r\n                        updateConditionByOperation(condition, getDefaultOperation(item), that._customOperations);\r\n                        $fieldButton.siblings().filter(\".dx-filterbuilder-text\").remove();\r\n                        that._createOperationAndValueButtons(condition, item, $fieldButton.parent());\r\n                        const caption = getFullCaption(item, e.component.option(\"items\"));\r\n                        $fieldButton.text(caption);\r\n                        this._updateFilter()\r\n                    }\r\n                },\r\n                onContentReady(e) {\r\n                    e.component.selectItem(item)\r\n                },\r\n                cssClass: \"dx-filterbuilder-fields\"\r\n            }\r\n        }).addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-field\").attr(\"tabindex\", 0);\r\n        this._addAriaAttributes($fieldButton, messageLocalization.format(\"dxFilterBuilder-filterAriaItemField\"), \"combobox\", true, false);\r\n        return $fieldButton\r\n    }\r\n    _createConditionItem(condition, parent, groupLevel) {\r\n        const $item = $(\"<div>\").addClass(\"dx-filterbuilder-group-item\");\r\n        const fields = this._getNormalizedFields();\r\n        const field = getField(condition[0], fields);\r\n        this._addAriaAttributes($item, \"\", \"treeitem\", null, null, groupLevel);\r\n        this._createRemoveButton((() => {\r\n            removeItem(parent, condition);\r\n            const isSingleChild = 1 === $item.parent().children().length;\r\n            if (isSingleChild) {\r\n                $item.parent().remove()\r\n            } else {\r\n                $item.remove()\r\n            }\r\n            this._updateFilter()\r\n        }), \"condition\").appendTo($item);\r\n        this._createFieldButtonWithMenu(fields, condition, field).appendTo($item);\r\n        this._createOperationAndValueButtons(condition, field, $item);\r\n        return $item\r\n    }\r\n    _getGroupOperations(criteria) {\r\n        let groupOperations = this.option(\"groupOperations\");\r\n        const groupOperationDescriptions = this.option(\"groupOperationDescriptions\");\r\n        if (!groupOperations || !groupOperations.length) {\r\n            groupOperations = [getGroupValue(criteria).replace(\"!\", \"not\")]\r\n        }\r\n        return groupOperations.map((operation => ({\r\n            text: groupOperationDescriptions[operation],\r\n            value: OPERATORS[operation]\r\n        })))\r\n    }\r\n    _createRemoveButton(handler, type) {\r\n        const $removeButton = $(\"<div>\").addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(\"dx-icon-remove\").addClass(\"dx-filterbuilder-action\").attr(\"tabindex\", 0);\r\n        if (type) {\r\n            const removeMessage = messageLocalization.format(\"dxFilterBuilder-filterAriaRemoveButton\", type);\r\n            this._addAriaAttributes($removeButton, removeMessage, \"button\")\r\n        }\r\n        this._subscribeOnClickAndEnterKey($removeButton, handler);\r\n        return $removeButton\r\n    }\r\n    _createAddButton(addGroupHandler, addConditionHandler, groupLevel) {\r\n        let $button;\r\n        const maxGroupLevel = this.option(\"maxGroupLevel\");\r\n        if (isDefined(maxGroupLevel) && groupLevel >= maxGroupLevel) {\r\n            $button = this._createButton();\r\n            this._subscribeOnClickAndEnterKey($button, addConditionHandler)\r\n        } else {\r\n            $button = this._createButtonWithMenu({\r\n                menu: {\r\n                    items: [{\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addCondition\"),\r\n                        click: addConditionHandler\r\n                    }, {\r\n                        caption: messageLocalization.format(\"dxFilterBuilder-addGroup\"),\r\n                        click: addGroupHandler\r\n                    }],\r\n                    displayExpr: \"caption\",\r\n                    onItemClick(e) {\r\n                        e.itemData.click()\r\n                    },\r\n                    cssClass: \"dx-filterbuilder-add-condition\"\r\n                }\r\n            })\r\n        }\r\n        this._addAriaAttributes($button, messageLocalization.format(\"dxFilterBuilder-filterAriaAddButton\"), \"combobox\", true, false);\r\n        return $button.addClass(FILTER_BUILDER_IMAGE_CLASS).addClass(\"dx-icon-plus\").addClass(\"dx-filterbuilder-action\").attr(\"tabindex\", 0)\r\n    }\r\n    _createValueText(item, field, $container) {\r\n        const that = this;\r\n        const $text = $(\"<div>\").html(\"&nbsp;\").addClass(\"dx-filterbuilder-item-value-text\").attr(\"tabindex\", 0).appendTo($container);\r\n        this._addAriaAttributes($text, messageLocalization.format(\"dxFilterBuilder-filterAriaItemValue\"), \"button\", true);\r\n        const value = item[2];\r\n        const customOperation = getCustomOperation(that._customOperations, item[1]);\r\n        if (!customOperation && field.lookup) {\r\n            getCurrentLookupValueText(field, value, (result => {\r\n                renderValueText($text, result)\r\n            }))\r\n        } else {\r\n            when(getCurrentValueText(field, value, customOperation)).done((result => {\r\n                renderValueText($text, result, customOperation)\r\n            }))\r\n        }\r\n        that._subscribeOnClickAndEnterKey($text, (e => {\r\n            if (\"keyup\" === e.type) {\r\n                e.stopPropagation()\r\n            }\r\n            that._createValueEditorWithEvents(item, field, $container)\r\n        }));\r\n        return $text\r\n    }\r\n    _updateConditionValue(item, value, callback) {\r\n        const areValuesDifferent = item[2] !== value;\r\n        if (areValuesDifferent) {\r\n            item[2] = value\r\n        }\r\n        callback();\r\n        this._updateFilter()\r\n    }\r\n    _addDocumentKeyUp($editor, handler) {\r\n        let isComposing = false;\r\n        let hasCompositionJustEnded = false;\r\n        const document = domAdapter.getDocument();\r\n        const documentKeyUpHandler = e => {\r\n            if (isComposing || hasCompositionJustEnded) {\r\n                hasCompositionJustEnded = false;\r\n                return\r\n            }\r\n            handler(e)\r\n        };\r\n        eventsEngine.on(document, \"keyup\", documentKeyUpHandler);\r\n        const input = $editor.find(\"input\");\r\n        eventsEngine.on(input, \"compositionstart\", (() => {\r\n            isComposing = true\r\n        }));\r\n        eventsEngine.on(input, \"compositionend\", (() => {\r\n            isComposing = false;\r\n            hasCompositionJustEnded = true\r\n        }));\r\n        eventsEngine.on(input, \"keydown\", (event => {\r\n            if (229 !== event.which) {\r\n                hasCompositionJustEnded = false\r\n            }\r\n        }));\r\n        this._documentKeyUpHandler = documentKeyUpHandler\r\n    }\r\n    _addDocumentClick($editor, closeEditorFunc) {\r\n        const document = domAdapter.getDocument();\r\n        const documentClickHandler = e => {\r\n            if (!this._isFocusOnEditorParts($editor, e.target)) {\r\n                eventsEngine.trigger($editor.find(\"input\"), \"change\");\r\n                closeEditorFunc()\r\n            }\r\n        };\r\n        eventsEngine.on(document, \"dxpointerdown\", documentClickHandler);\r\n        this._documentClickHandler = documentClickHandler\r\n    }\r\n    _isFocusOnEditorParts($editor, target) {\r\n        const activeElement = target || domAdapter.getActiveElement();\r\n        return $(activeElement).closest($editor.children()).length || $(activeElement).closest(\".dx-dropdowneditor-overlay\").length\r\n    }\r\n    _removeEvents() {\r\n        const document = domAdapter.getDocument();\r\n        isDefined(this._documentKeyUpHandler) && eventsEngine.off(document, \"keyup\", this._documentKeyUpHandler);\r\n        isDefined(this._documentClickHandler) && eventsEngine.off(document, \"dxpointerdown\", this._documentClickHandler)\r\n    }\r\n    _dispose() {\r\n        this._removeEvents();\r\n        super._dispose()\r\n    }\r\n    _createValueEditorWithEvents(item, field, $container) {\r\n        let value = item[2];\r\n        const createValueText = () => {\r\n            $container.empty();\r\n            this._removeEvents();\r\n            return this._createValueText(item, field, $container)\r\n        };\r\n        const closeEditor = () => {\r\n            this._updateConditionValue(item, value, (() => {\r\n                createValueText()\r\n            }))\r\n        };\r\n        const options = {\r\n            value: \"\" === value ? null : value,\r\n            filterOperation: getOperationValue(item),\r\n            setValue(data) {\r\n                value = null === data ? \"\" : data\r\n            },\r\n            closeEditor: closeEditor,\r\n            text: $container.text()\r\n        };\r\n        $container.empty();\r\n        const $editor = this._createValueEditor($container, field, options);\r\n        eventsEngine.trigger($editor.find(\"input\").not(\":hidden\").eq(0), \"focus\");\r\n        this._removeEvents();\r\n        this._addDocumentClick($editor, closeEditor);\r\n        this._addDocumentKeyUp($editor, (e => {\r\n            const keyName = normalizeKeyName(e);\r\n            if (\"tab\" === keyName) {\r\n                if (this._isFocusOnEditorParts($editor)) {\r\n                    return\r\n                }\r\n                this._updateConditionValue(item, value, (() => {\r\n                    createValueText();\r\n                    if (e.shiftKey) {\r\n                        eventsEngine.trigger($container.prev(), \"focus\")\r\n                    }\r\n                }))\r\n            }\r\n            if (\"escape\" === keyName) {\r\n                eventsEngine.trigger(createValueText(), \"focus\")\r\n            }\r\n            if (\"enter\" === keyName) {\r\n                this._updateConditionValue(item, value, (() => {\r\n                    eventsEngine.trigger(createValueText(), \"focus\")\r\n                }))\r\n            }\r\n        }));\r\n        this._fireContentReadyAction()\r\n    }\r\n    _createValueButton(item, field) {\r\n        const $valueButton = $(\"<div>\").addClass(\"dx-filterbuilder-text\").addClass(\"dx-filterbuilder-item-value\");\r\n        this._createValueText(item, field, $valueButton);\r\n        return $valueButton\r\n    }\r\n    _createValueEditor($container, field, options) {\r\n        const $editor = $(\"<div>\").attr(\"tabindex\", 0).appendTo($container);\r\n        const customOperation = getCustomOperation(this._customOperations, options.filterOperation);\r\n        const editorTemplate = customOperation && customOperation.editorTemplate ? customOperation.editorTemplate : field.editorTemplate;\r\n        if (editorTemplate) {\r\n            const template = this._getTemplate(editorTemplate);\r\n            template.render({\r\n                model: extend({\r\n                    field: field\r\n                }, options),\r\n                container: $editor\r\n            })\r\n        } else {\r\n            this._editorFactory.createEditor.call(this, $editor, extend({}, field, options, {\r\n                parentType: SOURCE\r\n            }))\r\n        }\r\n        return $editor\r\n    }\r\n    _createPopupWithTreeView(options, $container) {\r\n        const that = this;\r\n        const $popup = $(\"<div>\").addClass(options.menu.cssClass).appendTo($container);\r\n        this._createComponent($popup, Popup, {\r\n            onHiding: options.menu.onHiding,\r\n            onHidden: options.menu.onHidden,\r\n            rtlEnabled: options.menu.rtlEnabled,\r\n            position: options.menu.position,\r\n            animation: options.menu.animation,\r\n            contentTemplate(contentElement) {\r\n                const $menuContainer = $(\"<div>\").appendTo(contentElement);\r\n                that._createComponent($menuContainer, TreeView, options.menu);\r\n                this.repaint()\r\n            },\r\n            _ignoreFunctionValueDeprecation: true,\r\n            maxHeight: () => getElementMaxHeightByWindow(options.menu.position.of),\r\n            visible: true,\r\n            focusStateEnabled: false,\r\n            preventScrollEvents: false,\r\n            container: $popup,\r\n            hideOnOutsideClick: true,\r\n            onShown: options.popup.onShown,\r\n            shading: false,\r\n            width: \"auto\",\r\n            height: \"auto\",\r\n            showTitle: false,\r\n            _wrapperClassExternal: options.menu.cssClass,\r\n            _ignorePreventScrollEventsDeprecation: true\r\n        })\r\n    }\r\n    _subscribeOnClickAndEnterKey($button, handler) {\r\n        eventsEngine.on($button, \"dxclick\", handler);\r\n        eventsEngine.on($button, \"keyup\", (e => {\r\n            if (\"enter\" === normalizeKeyName(e)) {\r\n                handler(e)\r\n            }\r\n        }))\r\n    }\r\n}\r\nregisterComponent(\"dxFilterBuilder\", FilterBuilder);\r\nexport default FilterBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}