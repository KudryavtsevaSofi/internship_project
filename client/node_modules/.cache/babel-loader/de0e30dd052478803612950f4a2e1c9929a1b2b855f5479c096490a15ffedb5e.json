{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/views/m_columns_view.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { name as clickEventName } from \"../../../../common/core/events/click\";\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\nimport { name as dblclickEvent } from \"../../../../common/core/events/double_click\";\nimport pointerEvents from \"../../../../common/core/events/pointer\";\nimport { removeEvent } from \"../../../../common/core/events/remove\";\nimport domAdapter from \"../../../../core/dom_adapter\";\nimport { getPublicElement } from \"../../../../core/element\";\nimport { data as elementData } from \"../../../../core/element_data\";\nimport Guid from \"../../../../core/guid\";\nimport $ from \"../../../../core/renderer\";\nimport browser from \"../../../../core/utils/browser\";\nimport { noop } from \"../../../../core/utils/common\";\nimport { Deferred, when } from \"../../../../core/utils/deferred\";\nimport { extend } from \"../../../../core/utils/extend\";\nimport * as iteratorUtils from \"../../../../core/utils/iterator\";\nimport { getBoundingRect, getDefaultAlignment } from \"../../../../core/utils/position\";\nimport { getHeight, getOuterHeight, getOuterWidth, getWidth } from \"../../../../core/utils/size\";\nimport { setWidth } from \"../../../../core/utils/style\";\nimport { isDefined, isFunction, isNumeric, isRenderer, isString } from \"../../../../core/utils/type\";\nimport { getWindow, hasWindow } from \"../../../../core/utils/window\";\nimport supportUtils from \"../../../core/utils/m_support\";\nimport { ColumnStateMixin } from \"../../../grids/grid_core/column_state_mixin/m_column_state_mixin\";\nimport modules from \"../m_modules\";\nimport gridCoreUtils from \"../m_utils\";\nconst SCROLL_CONTAINER_CLASS = \"scroll-container\";\nconst SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\nconst GROUP_SPACE_CLASS = \"group-space\";\nconst CONTENT_CLASS = \"content\";\nconst TABLE_CLASS = \"table\";\nconst TABLE_FIXED_CLASS = \"table-fixed\";\nconst CONTENT_FIXED_CLASS = \"content-fixed\";\nconst ROW_CLASS = \"dx-row\";\nconst GROUP_ROW_CLASS = \"dx-group-row\";\nconst GROUP_CELL_CLASS = \"dx-group-cell\";\nconst DETAIL_ROW_CLASS = \"dx-master-detail-row\";\nconst FILTER_ROW_CLASS = \"filter-row\";\nconst ERROR_ROW_CLASS = \"dx-error-row\";\nconst CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\nconst GROUP_ROW_CONTAINER = \"group-row-container\";\nconst HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\nconst CELL_HINT_VISIBLE = \"dxCellHintVisible\";\nconst FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\nconst appendElementTemplate = {\n  render(options) {\n    options.container.append(options.content);\n  }\n};\nconst subscribeToRowEvents = function (that, $table) {\n  let touchTarget;\n  let touchCurrentTarget;\n  let timeoutId;\n  function clearTouchTargets(timeout) {\n    return setTimeout(() => {\n      touchTarget = touchCurrentTarget = null;\n    }, timeout);\n  }\n  eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", e => {\n    clearTimeout(timeoutId);\n    if (\"touchstart\" === e.type) {\n      touchTarget = e.target;\n      touchCurrentTarget = e.currentTarget;\n      timeoutId = clearTouchTargets(1e3);\n    } else {\n      timeoutId = clearTouchTargets();\n    }\n  });\n  eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction(e => {\n    const {\n      event: event\n    } = e;\n    if (touchTarget) {\n      event.target = touchTarget;\n      event.currentTarget = touchCurrentTarget;\n    }\n    if (!$(event.target).closest(\"a\").length) {\n      e.rowIndex = that.getRowIndex(event.currentTarget);\n      if (e.rowIndex >= 0) {\n        e.rowElement = getPublicElement($(event.currentTarget));\n        e.columns = that.getColumns();\n        if (event.type === pointerEvents.down) {\n          that._rowPointerDown(e);\n        } else if (event.type === clickEventName) {\n          that._rowClick(e);\n        } else {\n          that._rowDblClick(e);\n        }\n      }\n    }\n  }));\n};\nconst getWidthStyle = function (width) {\n  if (\"auto\" === width) {\n    return \"\";\n  }\n  return isNumeric(width) ? `${width}px` : width;\n};\nconst setCellWidth = function (cell, column, width) {\n  cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width;\n};\nconst copyAttributes = function (element, newElement) {\n  if (!element || !newElement) {\n    return;\n  }\n  const oldAttributes = element.attributes;\n  const newAttributes = newElement.attributes;\n  let i;\n  for (i = 0; i < oldAttributes.length; i++) {\n    const name = oldAttributes[i].nodeName;\n    if (!newElement.hasAttribute(name)) {\n      element.removeAttribute(name);\n    }\n  }\n  for (i = 0; i < newAttributes.length; i++) {\n    element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue);\n  }\n};\nconst removeHandler = function (templateDeferred) {\n  templateDeferred.resolve();\n};\nexport const normalizeWidth = width => {\n  if (\"number\" === typeof width) {\n    return `${width.toFixed(3)}px`;\n  }\n  if (\"adaptiveHidden\" === width) {\n    return \"0.0001px\";\n  }\n  return width;\n};\nexport class ColumnsView extends ColumnStateMixin(modules.View) {\n  init() {\n    this._scrollLeft = -1;\n    this._columnsController = this.getController(\"columns\");\n    this._dataController = this.getController(\"data\");\n    this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\n    this._columnChooserController = this.getController(\"columnChooser\");\n    this._editorFactoryController = this.getController(\"editorFactory\");\n    this._selectionController = this.getController(\"selection\");\n    this._columnChooserView = this.getView(\"columnChooserView\");\n    this._delayedTemplates = [];\n    this._templateDeferreds = new Set();\n    this._templatesCache = {};\n    this._templateTimeouts = new Set();\n    this.createAction(\"onCellClick\");\n    this.createAction(\"onRowClick\");\n    this.createAction(\"onCellDblClick\");\n    this.createAction(\"onRowDblClick\");\n    this.createAction(\"onCellHoverChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n    this.createAction(\"onCellPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\"\n    });\n    this.createAction(\"onRowPrepared\", {\n      excludeValidators: [\"disabled\", \"readOnly\"],\n      category: \"rendering\",\n      afterExecute: e => {\n        this._afterRowPrepared(e);\n      }\n    });\n    this._columnsController.columnsChanged.add(this._columnOptionChanged.bind(this));\n    this._dataController && this._dataController.changed.add(this._handleDataChanged.bind(this));\n  }\n  dispose() {\n    if (hasWindow()) {\n      var _this$_templateTimeou, _this$_templateTimeou2;\n      const window = getWindow();\n      null === (_this$_templateTimeou = this._templateTimeouts) || void 0 === _this$_templateTimeou || _this$_templateTimeou.forEach(templateTimeout => window.clearTimeout(templateTimeout));\n      null === (_this$_templateTimeou2 = this._templateTimeouts) || void 0 === _this$_templateTimeou2 || _this$_templateTimeou2.clear();\n    }\n  }\n  optionChanged(args) {\n    super.optionChanged(args);\n    switch (args.name) {\n      case \"cellHintEnabled\":\n      case \"onCellPrepared\":\n      case \"onRowPrepared\":\n      case \"onCellHoverChanged\":\n        this._invalidate(true, true);\n        args.handled = true;\n        break;\n      case \"keyboardNavigation\":\n        if (\"keyboardNavigation.enabled\" === args.fullName) {\n          this._invalidate(true, true);\n        }\n        args.handled = true;\n    }\n  }\n  _createScrollableOptions() {\n    const scrollingOptions = this.option(\"scrolling\");\n    let useNativeScrolling = this.option(\"scrolling.useNative\");\n    const options = extend({}, scrollingOptions, {\n      direction: \"both\",\n      bounceEnabled: false,\n      useKeyboard: false\n    });\n    if (void 0 === useNativeScrolling) {\n      useNativeScrolling = true;\n    }\n    if (\"auto\" === useNativeScrolling) {\n      delete options.useNative;\n      delete options.useSimulatedScrollbar;\n    } else {\n      options.useNative = !!useNativeScrolling;\n      options.useSimulatedScrollbar = !useNativeScrolling;\n    }\n    return options;\n  }\n  _updateCell($cell, parameters) {\n    if (parameters.rowType) {\n      this._cellPrepared($cell, parameters);\n    }\n  }\n  _needToSetCellWidths() {\n    return this.option(\"columnAutoWidth\");\n  }\n  _createCell(options) {\n    const {\n      column: column\n    } = options;\n    const alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\n    const needToSetCellWidths = this._needToSetCellWidths();\n    const cell = domAdapter.createElement(\"td\");\n    cell.style.textAlign = alignment;\n    const $cell = $(cell);\n    if (\"data\" === options.rowType && column.headerId && !column.type) {\n      if (this.component.option(\"showColumnHeaders\")) {\n        this.setAria(\"describedby\", column.headerId, $cell);\n      }\n    }\n    if (column.cssClass) {\n      $cell.addClass(column.cssClass);\n    }\n    if (Array.isArray(column.elementAttr)) {\n      column.elementAttr.forEach(_ref => {\n        let {\n          name: name,\n          value: value\n        } = _ref;\n        $cell.attr(name, value);\n      });\n    }\n    if (\"expand\" === column.command) {\n      $cell.addClass(column.cssClass);\n      $cell.addClass(this.addWidgetPrefix(\"group-space\"));\n    }\n    if (column.colspan > 1) {\n      $cell.attr(\"colSpan\", column.colspan);\n    } else if (!column.isBand && \"auto\" !== column.visibleWidth && needToSetCellWidths) {\n      if (column.width || column.minWidth) {\n        cell.style.minWidth = getWidthStyle(column.minWidth || column.width);\n      }\n      if (column.width) {\n        setCellWidth(cell, column, getWidthStyle(column.width));\n      }\n    }\n    return $cell;\n  }\n  _createRow(rowObject, tagName) {\n    tagName = tagName || \"tr\";\n    const $element = $(`<${tagName}>`).addClass(\"dx-row\");\n    if (\"tr\" === tagName) {\n      this.setAria(\"role\", \"row\", $element);\n    }\n    return $element;\n  }\n  _isAltRow(row) {\n    return row && row.dataIndex % 2 === 1;\n  }\n  _createTable(columns, isAppend) {\n    const $table = $(\"<table>\").addClass(this.addWidgetPrefix(\"table\")).addClass(this.addWidgetPrefix(\"table-fixed\"));\n    if (columns && !isAppend) {\n      $table.attr(\"id\", `dx-${new Guid()}`).append(this._createColGroup(columns));\n      if (browser.safari) {\n        $table.append($(\"<thead>\").append(\"<tr>\"));\n      }\n      this.setAria(\"role\", \"presentation\", $table);\n    } else {\n      this.setAria(\"hidden\", true, $table);\n    }\n    this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\n    if (isAppend) {\n      return $table;\n    }\n    if (browser.mozilla) {\n      eventsEngine.on($table, \"mousedown\", \"td\", e => {\n        if (e.ctrlKey) {\n          e.preventDefault();\n        }\n      });\n    }\n    if (this.option(\"cellHintEnabled\")) {\n      eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction(args => {\n        const e = args.event;\n        const $element = $(e.target);\n        const $cell = $(e.currentTarget);\n        const $row = $cell.parent();\n        const visibleColumns = this._columnsController.getVisibleColumns();\n        const rowOptions = $row.data(\"options\");\n        const columnIndex = $cell.index();\n        const cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\n        const column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\n        const isHeaderRow = $row.hasClass(\"dx-header-row\");\n        const isDataRow = $row.hasClass(\"dx-data-row\");\n        const isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\n        const isGroupRow = $row.hasClass(\"dx-group-row\");\n        const isFilterRow = $row.hasClass(this.addWidgetPrefix(\"filter-row\"));\n        const isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\n        const isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\n        const isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\n        const isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\n        const shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\n        if (shouldShowHint) {\n          if ($element.data(CELL_HINT_VISIBLE)) {\n            $element.removeAttr(\"title\");\n            $element.data(CELL_HINT_VISIBLE, false);\n          }\n          const difference = $element[0].scrollWidth - $element[0].clientWidth;\n          if (difference > 0 && !isDefined($element.attr(\"title\"))) {\n            $element.attr(\"title\", $element.text());\n            $element.data(CELL_HINT_VISIBLE, true);\n          }\n        }\n      }));\n    }\n    const getOptions = event => {\n      const $cell = $(event.currentTarget);\n      const $fieldItemContent = $(event.target).closest(\".dx-field-item-content\");\n      const $row = $cell.parent();\n      const rowOptions = $row.data(\"options\");\n      const options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\n      if (!$cell.closest(\"table\").is(event.delegateTarget)) {\n        return;\n      }\n      const resultOptions = extend({}, options, {\n        cellElement: getPublicElement($cell),\n        event: event,\n        eventType: event.type\n      });\n      resultOptions.rowIndex = this.getRowIndex($row);\n      if ($fieldItemContent.length) {\n        const formItemOptions = $fieldItemContent.data(\"dx-form-item\");\n        if (formItemOptions.column) {\n          resultOptions.column = formItemOptions.column;\n          resultOptions.columnIndex = this._columnsController.getVisibleIndex(resultOptions.column.index);\n        }\n      }\n      return resultOptions;\n    };\n    eventsEngine.on($table, \"mouseover\", \".dx-row > td\", e => {\n      const options = getOptions(e);\n      options && this.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, \"mouseout\", \".dx-row > td\", e => {\n      const options = getOptions(e);\n      options && this.executeAction(\"onCellHoverChanged\", options);\n    });\n    eventsEngine.on($table, clickEventName, \".dx-row > td\", e => {\n      const options = getOptions(e);\n      options && this.executeAction(\"onCellClick\", options);\n    });\n    eventsEngine.on($table, dblclickEvent, \".dx-row > td\", e => {\n      const options = getOptions(e);\n      options && this.executeAction(\"onCellDblClick\", options);\n    });\n    subscribeToRowEvents(this, $table);\n    return $table;\n  }\n  _rowPointerDown(e) {}\n  _rowClick() {}\n  _rowDblClick() {}\n  _createColGroup(columns) {\n    const colgroupElement = $(\"<colgroup>\");\n    for (let i = 0; i < columns.length; i++) {\n      const colspan = columns[i].colspan || 1;\n      for (let j = 0; j < colspan; j++) {\n        colgroupElement.append(this._createCol(columns[i]));\n      }\n    }\n    return colgroupElement;\n  }\n  _createCol(column) {\n    let width = column.visibleWidth || column.width;\n    if (\"adaptiveHidden\" === width) {\n      width = \"0.0001px\";\n    }\n    const col = $(\"<col>\");\n    setWidth(col, width);\n    return col;\n  }\n  renderDelayedTemplates(change) {\n    const delayedTemplates = this._delayedTemplates;\n    const syncTemplates = delayedTemplates.filter(template => !template.async);\n    const asyncTemplates = delayedTemplates.filter(template => template.async);\n    this._delayedTemplates = [];\n    this._renderDelayedTemplatesCore(syncTemplates, false, change);\n    this._renderDelayedTemplatesCoreAsync(asyncTemplates);\n  }\n  _renderDelayedTemplatesCoreAsync(templates) {\n    if (templates.length) {\n      const templateTimeout = getWindow().setTimeout(() => {\n        this._templateTimeouts.delete(templateTimeout);\n        this._renderDelayedTemplatesCore(templates, true);\n      });\n      this._templateTimeouts.add(templateTimeout);\n    }\n  }\n  _renderDelayedTemplatesCore(templates, isAsync, change) {\n    const date = new Date();\n    while (templates.length) {\n      const templateParameters = templates.shift();\n      const {\n        options: options\n      } = templateParameters;\n      const doc = domAdapter.getRootNode($(options.container).get(0));\n      const needWaitAsyncTemplates = this.needWaitAsyncTemplates();\n      if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\n        if (change) {\n          options.change = change;\n        }\n        templateParameters.template.render(options);\n      }\n      if (isAsync && new Date() - date > 30) {\n        this._renderDelayedTemplatesCoreAsync(templates);\n        break;\n      }\n    }\n    if (!templates.length && this._delayedTemplates.length) {\n      this.renderDelayedTemplates();\n    }\n  }\n  _processTemplate(template, options) {\n    const that = this;\n    let renderingTemplate;\n    if (template && template.render && !isRenderer(template)) {\n      renderingTemplate = {\n        allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\n        render(options) {\n          template.render(options.container, options.model, options.change);\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else if (isFunction(template)) {\n      renderingTemplate = {\n        render(options) {\n          const renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\n          if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\n            options.container.append(renderedTemplate);\n          }\n          options.deferred && options.deferred.resolve();\n        }\n      };\n    } else {\n      const templateID = isString(template) ? template : $(template).attr(\"id\");\n      if (!templateID) {\n        renderingTemplate = that.getTemplate(template);\n      } else {\n        if (!that._templatesCache[templateID]) {\n          that._templatesCache[templateID] = that.getTemplate(template);\n        }\n        renderingTemplate = that._templatesCache[templateID];\n      }\n    }\n    return renderingTemplate;\n  }\n  renderTemplate(container, template, options, allowRenderToDetachedContainer, change) {\n    const renderingTemplate = this._processTemplate(template, options);\n    const {\n      column: column\n    } = options;\n    const isDataRow = \"data\" === options.rowType;\n    const templateDeferred = new Deferred();\n    const templateOptions = {\n      container: container,\n      model: options,\n      deferred: templateDeferred,\n      onRendered: () => {\n        if (this.isDisposed()) {\n          templateDeferred.reject();\n        } else {\n          templateDeferred.resolve();\n        }\n      }\n    };\n    if (renderingTemplate) {\n      options.component = this.component;\n      const columnAsync = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\n      const async = options.renderAsync ?? columnAsync;\n      if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\n        renderingTemplate.render(templateOptions);\n      } else {\n        this._delayedTemplates.push({\n          template: renderingTemplate,\n          options: templateOptions,\n          async: async\n        });\n      }\n      this._templateDeferreds.add(templateDeferred);\n      eventsEngine.on(container, removeEvent, removeHandler.bind(null, templateDeferred));\n    } else {\n      templateDeferred.reject();\n    }\n    return templateDeferred.promise().always(() => {\n      this._templateDeferreds.delete(templateDeferred);\n    });\n  }\n  _getBodies(tableElement) {\n    return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\");\n  }\n  _needWrapRow($tableElement) {\n    var _this$_getBodies;\n    const hasRowTemplate = !!this.option().rowTemplate;\n    return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".dx-row\").length);\n  }\n  _wrapRowIfNeed($table, $row, isRefreshing) {\n    const $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\n    const needWrapRow = this._needWrapRow($tableElement);\n    if (needWrapRow) {\n      const $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\n      this.setAria(\"role\", \"presentation\", $tbody);\n      return $tbody.append($row);\n    }\n    return $row;\n  }\n  _appendRow($table, $row, appendTemplate) {\n    appendTemplate = appendTemplate || appendElementTemplate;\n    appendTemplate.render({\n      content: $row,\n      container: $table\n    });\n  }\n  _resizeCore() {\n    const scrollLeft = this._scrollLeft;\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  }\n  _renderCore(e) {\n    const $root = this.element().parent();\n    if (!$root || $root.parent().length) {\n      this.renderDelayedTemplates(e);\n    }\n    return new Deferred().resolve();\n  }\n  _renderTable(options) {\n    options = options || {};\n    options.columns = this._columnsController.getVisibleColumns();\n    const changeType = options.change && options.change.changeType;\n    const $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\n    this._renderRows($table, options);\n    return $table;\n  }\n  _renderRows($table, options) {\n    const that = this;\n    const rows = that._getRows(options.change);\n    const columnIndices = options.change && options.change.columnIndices || [];\n    const changeTypes = options.change && options.change.changeTypes || [];\n    for (let i = 0; i < rows.length; i++) {\n      that._renderRow($table, extend({\n        row: rows[i],\n        columnIndices: columnIndices[i],\n        changeType: changeTypes[i]\n      }, options));\n    }\n  }\n  _renderRow($table, options) {\n    if (!options.columnIndices) {\n      options.row.cells = [];\n    }\n    const $row = this._createRow(options.row);\n    const $wrappedRow = this._wrapRowIfNeed($table, $row);\n    if (\"remove\" !== options.changeType) {\n      this._renderCells($row, options);\n    }\n    this._appendRow($table, $wrappedRow);\n    const rowOptions = extend({\n      columns: options.columns\n    }, options.row);\n    this._addWatchMethod(rowOptions, options.row);\n    this._rowPrepared($wrappedRow, rowOptions, options.row);\n  }\n  _needRenderCell(columnIndex, columnIndices) {\n    return !columnIndices || columnIndices.indexOf(columnIndex) >= 0;\n  }\n  _renderCells($row, options) {\n    const that = this;\n    let columnIndex = 0;\n    const {\n      row: row\n    } = options;\n    const {\n      columns: columns\n    } = options;\n    for (let i = 0; i < columns.length; i++) {\n      if (this._needRenderCell(i, options.columnIndices)) {\n        that._renderCell($row, extend({\n          column: columns[i],\n          columnIndex: columnIndex,\n          value: row.values && row.values[columnIndex],\n          oldValue: row.oldValues && row.oldValues[columnIndex]\n        }, options));\n      }\n      if (columns[i].colspan > 1) {\n        columnIndex += columns[i].colspan;\n      } else {\n        columnIndex++;\n      }\n    }\n  }\n  _updateCells($rowElement, $newRowElement, columnIndices, options) {\n    var _options$node;\n    const that = this;\n    const $cells = $rowElement.children();\n    const $newCells = $newRowElement.children();\n    const highlightChanges = this.option(\"highlightChanges\");\n    const cellUpdatedClass = this.addWidgetPrefix(\"cell-updated-animation\");\n    if (null !== options && void 0 !== options && null !== (_options$node = options.node) && void 0 !== _options$node && _options$node.hasChildren) {\n      $cells.each(function () {\n        that.setAria(\"expanded\", options.isExpanded, $(this));\n      });\n    }\n    columnIndices.forEach((columnIndex, index) => {\n      const $cell = $cells.eq(columnIndex);\n      const $newCell = $newCells.eq(index);\n      $cell.replaceWith($newCell);\n      if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\n        $newCell.addClass(cellUpdatedClass);\n      }\n    });\n    copyAttributes($rowElement.get(0), $newRowElement.get(0));\n  }\n  _setCellAriaAttributes($cell, cellOptions, options) {\n    var _row$node;\n    const {\n      row: row\n    } = options;\n    const isFreeSpaceRow = \"freeSpace\" === cellOptions.rowType;\n    const isGroupRow = \"group\" === cellOptions.rowType;\n    const rowHasChildren = null === row || void 0 === row || null === (_row$node = row.node) || void 0 === _row$node ? void 0 : _row$node.hasChildren;\n    if (isFreeSpaceRow) {\n      return;\n    }\n    this.setAria(\"role\", \"gridcell\", $cell);\n    if (rowHasChildren) {\n      this.setAria(\"expanded\", row.isExpanded, $cell);\n    }\n    const columnIndexOffset = this._columnsController.getColumnIndexOffset();\n    const ariaColIndex = isGroupRow ? cellOptions.columnIndex + 1 : cellOptions.columnIndex + columnIndexOffset + 1;\n    this.setAria(\"colindex\", ariaColIndex, $cell);\n  }\n  _renderCell($row, options) {\n    const cellOptions = this._getCellOptions(options);\n    if (options.columnIndices) {\n      if (options.row.cells) {\n        const cellIndex = options.row.cells.findIndex(cell => cell.columnIndex === cellOptions.columnIndex);\n        options.row.cells[cellIndex] = cellOptions;\n      }\n    } else {\n      options.row.cells.push(cellOptions);\n    }\n    const $cell = this._createCell(cellOptions);\n    this._setCellAriaAttributes($cell, cellOptions, options);\n    this._renderCellContent($cell, cellOptions, options);\n    $row.get(0).appendChild($cell.get(0));\n    return $cell;\n  }\n  _renderCellContent($cell, options, renderOptions) {\n    const template = this._getCellTemplate(options);\n    when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done(() => {\n      this._updateCell($cell, options);\n    });\n  }\n  _getCellTemplate(options) {}\n  _getRows(change) {\n    return [];\n  }\n  _getCellOptions(options) {\n    const cellOptions = {\n      column: options.column,\n      columnIndex: options.columnIndex,\n      rowType: options.row.rowType,\n      rowIndex: options.row.rowIndex,\n      isAltRow: this._isAltRow(options.row)\n    };\n    this._addWatchMethod(cellOptions);\n    return cellOptions;\n  }\n  _addWatchMethod(options, source) {\n    if (!this.option(\"repaintChangesOnly\")) {\n      return;\n    }\n    const watchers = [];\n    source = source || options;\n    source.watch = source.watch || function (getter, updateValueFunc, updateRowFunc) {\n      let oldValue = getter(source.data);\n      const watcher = function (row) {\n        if (row && updateRowFunc) {\n          updateRowFunc(row);\n        }\n        const newValue = getter(source.data);\n        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\n          if (row) {\n            updateValueFunc(newValue);\n          }\n          oldValue = newValue;\n        }\n      };\n      watchers.push(watcher);\n      return function () {\n        const index = watchers.indexOf(watcher);\n        if (index >= 0) {\n          watchers.splice(index, 1);\n        }\n      };\n    };\n    source.update = source.update || function (row, keepRow) {\n      if (row) {\n        this.data = options.data = row.data;\n        this.rowIndex = options.rowIndex = row.rowIndex;\n        this.dataIndex = options.dataIndex = row.dataIndex;\n        this.isExpanded = options.isExpanded = row.isExpanded;\n        if (options.row && !keepRow) {\n          options.row = row;\n        }\n      }\n      watchers.forEach(watcher => {\n        watcher(row);\n      });\n    };\n    if (source !== options) {\n      options.watch = source.watch.bind(source);\n    }\n    return options;\n  }\n  _cellPrepared(cell, options) {\n    options.cellElement = getPublicElement($(cell));\n    this.executeAction(\"onCellPrepared\", options);\n  }\n  _rowPrepared($row, options, row) {\n    elementData($row.get(0), \"options\", options);\n    options.rowElement = getPublicElement($row);\n    this.executeAction(\"onRowPrepared\", options);\n  }\n  _columnOptionChanged(e) {\n    const {\n      optionNames: optionNames\n    } = e;\n    if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\n      const visibleColumns = this._columnsController.getVisibleColumns();\n      const widths = visibleColumns.map(column => column.visibleWidth || column.width);\n      this.setColumnWidths({\n        widths: widths,\n        optionNames: optionNames\n      });\n      return;\n    }\n    if (!this._requireReady) {\n      this.render();\n    }\n  }\n  getCellIndex($cell, rowIndex) {\n    const cellIndex = $cell.length ? $cell[0].cellIndex : -1;\n    return cellIndex;\n  }\n  getTableElements() {\n    return this._tableElement || $();\n  }\n  getTableElement(isFixedTableRendering) {\n    return this._tableElement;\n  }\n  setTableElement(tableElement, isFixedTableRendering) {\n    this._tableElement = tableElement;\n  }\n  _afterRowPrepared(e) {}\n  _handleDataChanged(e) {}\n  callbackNames() {\n    return [\"scrollChanged\"];\n  }\n  _updateScrollLeftPosition() {\n    const scrollLeft = this._scrollLeft;\n    if (scrollLeft >= 0) {\n      this._scrollLeft = 0;\n      this.scrollTo({\n        left: scrollLeft\n      });\n    }\n  }\n  scrollTo(pos) {\n    const $element = this.element();\n    const $scrollContainer = $element && $element.children(`.${this.addWidgetPrefix(\"scroll-container\")}`).not(`.${this.addWidgetPrefix(\"content-fixed\")}`);\n    if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\n      this._scrollLeft = pos.left;\n      $scrollContainer && $scrollContainer.scrollLeft(pos.left);\n    }\n  }\n  getContent(isFixedTableRendering) {\n    var _this$_tableElement;\n    return null === (_this$_tableElement = this._tableElement) || void 0 === _this$_tableElement ? void 0 : _this$_tableElement.parent();\n  }\n  _removeContent(isFixedTableRendering) {\n    const $scrollContainer = this.getContent(isFixedTableRendering);\n    if (null !== $scrollContainer && void 0 !== $scrollContainer && $scrollContainer.length) {\n      $scrollContainer.remove();\n    }\n  }\n  _wrapTableInScrollContainer($table, isFixedTableRendering) {\n    const $scrollContainer = $(\"<div>\");\n    const useNative = this.option(\"scrolling.useNative\");\n    if (false === useNative || \"auto\" === useNative && !supportUtils.nativeScrolling) {\n      $scrollContainer.addClass(this.addWidgetPrefix(\"scrollable-simulated\"));\n    }\n    eventsEngine.on($scrollContainer, \"scroll\", () => {\n      const scrollLeft = $scrollContainer.scrollLeft();\n      if (scrollLeft !== this._scrollLeft) {\n        this.scrollChanged.fire({\n          left: scrollLeft\n        }, this.name);\n      }\n    });\n    $scrollContainer.addClass(this.addWidgetPrefix(\"content\")).addClass(this.addWidgetPrefix(\"scroll-container\")).append($table).appendTo(this.element());\n    this.setAria(\"role\", \"presentation\", $scrollContainer);\n    return $scrollContainer;\n  }\n  needWaitAsyncTemplates() {\n    return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\");\n  }\n  waitAsyncTemplates() {\n    let forceWaiting = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\n    const result = new Deferred();\n    const needWaitAsyncTemplates = forceWaiting || this.needWaitAsyncTemplates();\n    if (!needWaitAsyncTemplates || !isDefined(this._templateDeferreds)) {\n      return result.resolve();\n    }\n    const waitTemplatesRecursion = () => when.apply(this, Array.from(this._templateDeferreds)).done(() => {\n      if (this.isDisposed()) {\n        result.reject();\n      } else if (this._templateDeferreds.size > 0) {\n        waitTemplatesRecursion();\n      } else {\n        result.resolve();\n      }\n    }).fail(result.reject);\n    waitTemplatesRecursion();\n    return result.promise();\n  }\n  _updateContent($newTableElement, change, isFixedTableRendering) {\n    return this.waitAsyncTemplates().done(() => {\n      this._removeContent(isFixedTableRendering);\n      this.setTableElement($newTableElement, isFixedTableRendering);\n      this._wrapTableInScrollContainer($newTableElement, isFixedTableRendering);\n    });\n  }\n  _findContentElement(isFixedTableRendering) {}\n  _getWidths($cellElements) {\n    if (!$cellElements) {\n      return [];\n    }\n    const result = [];\n    const cellElements = $cellElements.toArray();\n    cellElements.forEach(cell => {\n      let width = cell.offsetWidth;\n      if (cell.getBoundingClientRect) {\n        const rect = getBoundingRect(cell);\n        if (rect.width > cell.offsetWidth - 1) {\n          width = rect.width;\n        }\n      }\n      result.push(width);\n    });\n    return result;\n  }\n  getColumnWidths($tableElement, rowIndex) {\n    (this.option(\"forceApplyBindings\") || noop)();\n    $tableElement = $tableElement ?? this.getTableElement();\n    if ($tableElement) {\n      const $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\n      for (let i = 0; i < $rows.length; i++) {\n        const $row = $rows.eq(i);\n        const isGroupRow = $row.hasClass(\"dx-group-row\");\n        const isDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\n        const isErrorRow = $row.hasClass(\"dx-error-row\");\n        const isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\n        const isRelevantRow = !isGroupRow && !isDetailRow && !isErrorRow;\n        if (isRowVisible && isRelevantRow) {\n          const $cells = $row.children(\"td\");\n          const result = this._getWidths($cells);\n          return result;\n        }\n      }\n    }\n    return [];\n  }\n  getVisibleColumnIndex(columnIndex, rowIndex) {\n    return columnIndex;\n  }\n  setCellPropertiesCore(styleProps, $row, visibleCellIndex) {\n    const $cell = $row.hasClass(\"dx-group-row\") ? $row.find(`td[aria-colindex='${visibleCellIndex + 1}']:not(.dx-group-cell)`) : $row.find(\"td\").eq(visibleCellIndex);\n    for (let i = 0; i < $cell.length; i += 1) {\n      const cell = $cell.get(i);\n      Object.assign(cell.style, styleProps);\n    }\n  }\n  setCellProperties(styleProps, columnIndex, rowIndex) {\n    const $tableElement = this.getTableElement();\n    if (!(null !== $tableElement && void 0 !== $tableElement && $tableElement.length)) {\n      return;\n    }\n    const $rows = $tableElement.children().children(\".dx-row\").not(`.${DETAIL_ROW_CLASS}`);\n    if (isDefined(rowIndex)) {\n      this.setCellPropertiesCore(styleProps, $rows.eq(rowIndex), columnIndex);\n    } else {\n      for (let rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\n        const visibleIndex = this.getVisibleColumnIndex(columnIndex, rowIndex);\n        if (visibleIndex >= 0) {\n          this.setCellPropertiesCore(styleProps, $rows.eq(rowIndex), visibleIndex);\n        }\n      }\n    }\n  }\n  setColumnWidths(_ref2) {\n    let {\n      widths: widths,\n      optionNames: optionNames\n    } = _ref2;\n    const $tableElement = this.getTableElement();\n    if (!(null !== $tableElement && void 0 !== $tableElement && $tableElement.length) || !widths) {\n      return;\n    }\n    const columns = this.getColumns();\n    const needToSetCellWidths = this._needToSetCellWidths();\n    const $cols = $tableElement.children(\"colgroup\").children(\"col\");\n    $cols.toArray().forEach(col => col.removeAttribute(\"style\"));\n    columns.forEach((column, columnIndex) => {\n      if (needToSetCellWidths && column.width && !column.command) {\n        const styleProps = {};\n        const width = getWidthStyle(column.visibleWidth || column.width);\n        const minWidth = getWidthStyle(column.minWidth || width);\n        styleProps.width = \"auto\" === column.width ? \"\" : width;\n        styleProps.maxWidth = styleProps.width;\n        styleProps.minWidth = minWidth;\n        this.setCellProperties(styleProps, columnIndex);\n      }\n      const colWidth = normalizeWidth(widths[columnIndex]);\n      if (isDefined(colWidth)) {\n        setWidth($cols.eq(columnIndex), colWidth);\n      }\n    });\n  }\n  getCellElements(rowIndex) {\n    return this._getCellElementsCore(rowIndex);\n  }\n  _getCellElementsCore(rowIndex) {\n    if (rowIndex < 0) {\n      return;\n    }\n    const $row = this._getRowElements().eq(rowIndex);\n    return $row.children();\n  }\n  _getCellElement(rowIndex, columnIdentifier) {\n    const $cells = this.getCellElements(rowIndex);\n    const columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\n    if (!(null !== $cells && void 0 !== $cells && $cells.length) || columnVisibleIndex < 0) {\n      return;\n    }\n    const $cell = $cells.eq(columnVisibleIndex);\n    return $cell.length > 0 ? $cell : void 0;\n  }\n  _getRowElement(rowIndex) {\n    const that = this;\n    let $rowElement = $();\n    const $tableElements = that.getTableElements();\n    iteratorUtils.each($tableElements, (_, tableElement) => {\n      $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex));\n    });\n    if ($rowElement.length) {\n      return $rowElement;\n    }\n    return;\n  }\n  getCellElement(rowIndex, columnIdentifier) {\n    const $cell = this._getCellElement(rowIndex, columnIdentifier);\n    if ($cell) {\n      return getPublicElement($cell);\n    }\n    return;\n  }\n  getRowElement(rowIndex) {\n    const $rows = this._getRowElement(rowIndex);\n    let elements = [];\n    if ($rows && !getPublicElement($rows).get) {\n      for (let i = 0; i < $rows.length; i++) {\n        elements.push($rows[i]);\n      }\n    } else {\n      elements = $rows;\n    }\n    return elements;\n  }\n  _getVisibleColumnIndex($cells, rowIndex, columnIdentifier) {\n    if (isString(columnIdentifier)) {\n      const columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\n      return this._columnsController.getVisibleIndex(columnIndex);\n    }\n    return columnIdentifier;\n  }\n  getColumnElements() {}\n  getColumns(rowIndex, $tableElement) {\n    return this._columnsController.getVisibleColumns(rowIndex);\n  }\n  getCell(cellPosition, rows, cells) {\n    const $rows = rows || this._getRowElements();\n    let $cells;\n    if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\n      var _$cells;\n      if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\n        cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1;\n      }\n      $cells = cells || this.getCellElements(cellPosition.rowIndex);\n      if ((null === (_$cells = $cells) || void 0 === _$cells ? void 0 : _$cells.length) > 0) {\n        return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1);\n      }\n    }\n  }\n  getRowsCount() {\n    const tableElement = this.getTableElement();\n    if (tableElement && 1 === tableElement.length) {\n      return tableElement[0].rows.length;\n    }\n    return 0;\n  }\n  _getRowElementsCore(tableElement) {\n    tableElement = tableElement || this.getTableElement();\n    if (tableElement) {\n      const hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\n      const tBodies = hasRowTemplate && tableElement.find(\"> tbody.dx-row\");\n      return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .dx-row, > .dx-row\");\n    }\n    return $();\n  }\n  _getRowElements(tableElement) {\n    return this._getRowElementsCore(tableElement);\n  }\n  getRowIndex($row) {\n    return this._getRowElements().index($row);\n  }\n  getBoundingRect() {}\n  getName() {}\n  setScrollerSpacing(width) {\n    const $element = this.element();\n    const rtlEnabled = this.option(\"rtlEnabled\");\n    $element && $element.css({\n      paddingLeft: rtlEnabled ? width : \"\",\n      paddingRight: !rtlEnabled ? width : \"\"\n    });\n  }\n  isScrollbarVisible(isHorizontal) {\n    const $element = this.element();\n    const $tableElement = this._tableElement;\n    if ($element && $tableElement) {\n      return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0;\n    }\n    return false;\n  }\n  isDisposed() {\n    var _this$component;\n    return null === (_this$component = this.component) || void 0 === _this$component ? void 0 : _this$component._disposed;\n  }\n}","map":{"version":3,"names":["name","clickEventName","eventsEngine","dblclickEvent","pointerEvents","removeEvent","domAdapter","getPublicElement","data","elementData","Guid","$","browser","noop","Deferred","when","extend","iteratorUtils","getBoundingRect","getDefaultAlignment","getHeight","getOuterHeight","getOuterWidth","getWidth","setWidth","isDefined","isFunction","isNumeric","isRenderer","isString","getWindow","hasWindow","supportUtils","ColumnStateMixin","modules","gridCoreUtils","SCROLL_CONTAINER_CLASS","SCROLLABLE_SIMULATED_CLASS","GROUP_SPACE_CLASS","CONTENT_CLASS","TABLE_CLASS","TABLE_FIXED_CLASS","CONTENT_FIXED_CLASS","ROW_CLASS","GROUP_ROW_CLASS","GROUP_CELL_CLASS","DETAIL_ROW_CLASS","FILTER_ROW_CLASS","ERROR_ROW_CLASS","CELL_UPDATED_ANIMATION_CLASS","GROUP_ROW_CONTAINER","HIDDEN_COLUMNS_WIDTH","CELL_HINT_VISIBLE","FORM_FIELD_ITEM_CONTENT_CLASS","appendElementTemplate","render","options","container","append","content","subscribeToRowEvents","that","$table","touchTarget","touchCurrentTarget","timeoutId","clearTouchTargets","timeout","setTimeout","on","e","clearTimeout","type","target","currentTarget","down","join","createAction","event","closest","length","rowIndex","getRowIndex","rowElement","columns","getColumns","_rowPointerDown","_rowClick","_rowDblClick","getWidthStyle","width","setCellWidth","cell","column","style","maxWidth","copyAttributes","element","newElement","oldAttributes","attributes","newAttributes","i","nodeName","hasAttribute","removeAttribute","setAttribute","nodeValue","removeHandler","templateDeferred","resolve","normalizeWidth","toFixed","ColumnsView","View","init","_scrollLeft","_columnsController","getController","_dataController","_adaptiveColumnsController","_columnChooserController","_editorFactoryController","_selectionController","_columnChooserView","getView","_delayedTemplates","_templateDeferreds","Set","_templatesCache","_templateTimeouts","excludeValidators","category","afterExecute","_afterRowPrepared","columnsChanged","add","_columnOptionChanged","bind","changed","_handleDataChanged","dispose","_this$_templateTimeou","_this$_templateTimeou2","window","forEach","templateTimeout","clear","optionChanged","args","_invalidate","handled","fullName","_createScrollableOptions","scrollingOptions","option","useNativeScrolling","direction","bounceEnabled","useKeyboard","useNative","useSimulatedScrollbar","_updateCell","$cell","parameters","rowType","_cellPrepared","_needToSetCellWidths","_createCell","alignment","needToSetCellWidths","createElement","textAlign","headerId","component","setAria","cssClass","addClass","Array","isArray","elementAttr","_ref","value","attr","command","addWidgetPrefix","colspan","isBand","visibleWidth","minWidth","_createRow","rowObject","tagName","$element","_isAltRow","row","dataIndex","_createTable","isAppend","_createColGroup","safari","appendTo","mozilla","ctrlKey","preventDefault","$row","parent","visibleColumns","getVisibleColumns","rowOptions","columnIndex","index","cellOptions","cells","isHeaderRow","hasClass","isDataRow","isMasterDetailRow","isGroupRow","isFilterRow","isDataRowWithTemplate","cellTemplate","isEditorShown","isEditing","showEditorAlways","isHeaderRowWithTemplate","headerCellTemplate","isGroupCellWithTemplate","groupIndex","groupCellTemplate","shouldShowHint","removeAttr","difference","scrollWidth","clientWidth","text","getOptions","$fieldItemContent","is","delegateTarget","resultOptions","cellElement","eventType","formItemOptions","getVisibleIndex","executeAction","colgroupElement","j","_createCol","col","renderDelayedTemplates","change","delayedTemplates","syncTemplates","filter","template","async","asyncTemplates","_renderDelayedTemplatesCore","_renderDelayedTemplatesCoreAsync","templates","delete","isAsync","date","Date","templateParameters","shift","doc","getRootNode","get","needWaitAsyncTemplates","_processTemplate","renderingTemplate","allowRenderToDetachedContainer","model","deferred","renderedTemplate","nodeType","templateID","getTemplate","renderTemplate","templateOptions","onRendered","isDisposed","reject","columnAsync","renderAsync","push","promise","always","_getBodies","tableElement","children","not","_needWrapRow","$tableElement","_this$_getBodies","hasRowTemplate","rowTemplate","_wrapRowIfNeed","isRefreshing","_tableElement","needWrapRow","$tbody","_appendRow","appendTemplate","_resizeCore","scrollLeft","scrollTo","left","_renderCore","$root","_renderTable","changeType","_renderRows","rows","_getRows","columnIndices","changeTypes","_renderRow","$wrappedRow","_renderCells","_addWatchMethod","_rowPrepared","_needRenderCell","indexOf","_renderCell","values","oldValue","oldValues","_updateCells","$rowElement","$newRowElement","_options$node","$cells","$newCells","highlightChanges","cellUpdatedClass","node","hasChildren","each","isExpanded","eq","$newCell","replaceWith","_setCellAriaAttributes","_row$node","isFreeSpaceRow","rowHasChildren","columnIndexOffset","getColumnIndexOffset","ariaColIndex","_getCellOptions","cellIndex","findIndex","_renderCellContent","appendChild","renderOptions","_getCellTemplate","done","isAltRow","source","watchers","watch","getter","updateValueFunc","updateRowFunc","watcher","newValue","JSON","stringify","splice","update","keepRow","optionNames","checkChanges","widths","map","setColumnWidths","_requireReady","getCellIndex","getTableElements","getTableElement","isFixedTableRendering","setTableElement","callbackNames","_updateScrollLeftPosition","pos","$scrollContainer","getContent","_this$_tableElement","_removeContent","remove","_wrapTableInScrollContainer","nativeScrolling","scrollChanged","fire","waitAsyncTemplates","forceWaiting","arguments","result","waitTemplatesRecursion","apply","from","size","fail","_updateContent","$newTableElement","_findContentElement","_getWidths","$cellElements","cellElements","toArray","offsetWidth","getBoundingClientRect","rect","getColumnWidths","$rows","isDetailRow","isErrorRow","isRowVisible","display","isRelevantRow","getVisibleColumnIndex","setCellPropertiesCore","styleProps","visibleCellIndex","find","Object","assign","setCellProperties","visibleIndex","_ref2","$cols","colWidth","getCellElements","_getCellElementsCore","_getRowElements","_getCellElement","columnIdentifier","columnVisibleIndex","_getVisibleColumnIndex","_getRowElement","$tableElements","_","getCellElement","getRowElement","elements","columnOption","getColumnElements","getCell","cellPosition","_$cells","getRowsCount","_getRowElementsCore","tBodies","getName","setScrollerSpacing","rtlEnabled","css","paddingLeft","paddingRight","isScrollbarVisible","isHorizontal","_this$component","_disposed"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/views/m_columns_view.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/views/m_columns_view.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    name as clickEventName\r\n} from \"../../../../common/core/events/click\";\r\nimport eventsEngine from \"../../../../common/core/events/core/events_engine\";\r\nimport {\r\n    name as dblclickEvent\r\n} from \"../../../../common/core/events/double_click\";\r\nimport pointerEvents from \"../../../../common/core/events/pointer\";\r\nimport {\r\n    removeEvent\r\n} from \"../../../../common/core/events/remove\";\r\nimport domAdapter from \"../../../../core/dom_adapter\";\r\nimport {\r\n    getPublicElement\r\n} from \"../../../../core/element\";\r\nimport {\r\n    data as elementData\r\n} from \"../../../../core/element_data\";\r\nimport Guid from \"../../../../core/guid\";\r\nimport $ from \"../../../../core/renderer\";\r\nimport browser from \"../../../../core/utils/browser\";\r\nimport {\r\n    noop\r\n} from \"../../../../core/utils/common\";\r\nimport {\r\n    Deferred,\r\n    when\r\n} from \"../../../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../../../core/utils/extend\";\r\nimport * as iteratorUtils from \"../../../../core/utils/iterator\";\r\nimport {\r\n    getBoundingRect,\r\n    getDefaultAlignment\r\n} from \"../../../../core/utils/position\";\r\nimport {\r\n    getHeight,\r\n    getOuterHeight,\r\n    getOuterWidth,\r\n    getWidth\r\n} from \"../../../../core/utils/size\";\r\nimport {\r\n    setWidth\r\n} from \"../../../../core/utils/style\";\r\nimport {\r\n    isDefined,\r\n    isFunction,\r\n    isNumeric,\r\n    isRenderer,\r\n    isString\r\n} from \"../../../../core/utils/type\";\r\nimport {\r\n    getWindow,\r\n    hasWindow\r\n} from \"../../../../core/utils/window\";\r\nimport supportUtils from \"../../../core/utils/m_support\";\r\nimport {\r\n    ColumnStateMixin\r\n} from \"../../../grids/grid_core/column_state_mixin/m_column_state_mixin\";\r\nimport modules from \"../m_modules\";\r\nimport gridCoreUtils from \"../m_utils\";\r\nconst SCROLL_CONTAINER_CLASS = \"scroll-container\";\r\nconst SCROLLABLE_SIMULATED_CLASS = \"scrollable-simulated\";\r\nconst GROUP_SPACE_CLASS = \"group-space\";\r\nconst CONTENT_CLASS = \"content\";\r\nconst TABLE_CLASS = \"table\";\r\nconst TABLE_FIXED_CLASS = \"table-fixed\";\r\nconst CONTENT_FIXED_CLASS = \"content-fixed\";\r\nconst ROW_CLASS = \"dx-row\";\r\nconst GROUP_ROW_CLASS = \"dx-group-row\";\r\nconst GROUP_CELL_CLASS = \"dx-group-cell\";\r\nconst DETAIL_ROW_CLASS = \"dx-master-detail-row\";\r\nconst FILTER_ROW_CLASS = \"filter-row\";\r\nconst ERROR_ROW_CLASS = \"dx-error-row\";\r\nconst CELL_UPDATED_ANIMATION_CLASS = \"cell-updated-animation\";\r\nconst GROUP_ROW_CONTAINER = \"group-row-container\";\r\nconst HIDDEN_COLUMNS_WIDTH = \"0.0001px\";\r\nconst CELL_HINT_VISIBLE = \"dxCellHintVisible\";\r\nconst FORM_FIELD_ITEM_CONTENT_CLASS = \"dx-field-item-content\";\r\nconst appendElementTemplate = {\r\n    render(options) {\r\n        options.container.append(options.content)\r\n    }\r\n};\r\nconst subscribeToRowEvents = function(that, $table) {\r\n    let touchTarget;\r\n    let touchCurrentTarget;\r\n    let timeoutId;\r\n\r\n    function clearTouchTargets(timeout) {\r\n        return setTimeout((() => {\r\n            touchTarget = touchCurrentTarget = null\r\n        }), timeout)\r\n    }\r\n    eventsEngine.on($table, \"touchstart touchend\", \".dx-row\", (e => {\r\n        clearTimeout(timeoutId);\r\n        if (\"touchstart\" === e.type) {\r\n            touchTarget = e.target;\r\n            touchCurrentTarget = e.currentTarget;\r\n            timeoutId = clearTouchTargets(1e3)\r\n        } else {\r\n            timeoutId = clearTouchTargets()\r\n        }\r\n    }));\r\n    eventsEngine.on($table, [clickEventName, dblclickEvent, pointerEvents.down].join(\" \"), \".dx-row\", that.createAction((e => {\r\n        const {\r\n            event: event\r\n        } = e;\r\n        if (touchTarget) {\r\n            event.target = touchTarget;\r\n            event.currentTarget = touchCurrentTarget\r\n        }\r\n        if (!$(event.target).closest(\"a\").length) {\r\n            e.rowIndex = that.getRowIndex(event.currentTarget);\r\n            if (e.rowIndex >= 0) {\r\n                e.rowElement = getPublicElement($(event.currentTarget));\r\n                e.columns = that.getColumns();\r\n                if (event.type === pointerEvents.down) {\r\n                    that._rowPointerDown(e)\r\n                } else if (event.type === clickEventName) {\r\n                    that._rowClick(e)\r\n                } else {\r\n                    that._rowDblClick(e)\r\n                }\r\n            }\r\n        }\r\n    })))\r\n};\r\nconst getWidthStyle = function(width) {\r\n    if (\"auto\" === width) {\r\n        return \"\"\r\n    }\r\n    return isNumeric(width) ? `${width}px` : width\r\n};\r\nconst setCellWidth = function(cell, column, width) {\r\n    cell.style.width = cell.style.maxWidth = \"auto\" === column.width ? \"\" : width\r\n};\r\nconst copyAttributes = function(element, newElement) {\r\n    if (!element || !newElement) {\r\n        return\r\n    }\r\n    const oldAttributes = element.attributes;\r\n    const newAttributes = newElement.attributes;\r\n    let i;\r\n    for (i = 0; i < oldAttributes.length; i++) {\r\n        const name = oldAttributes[i].nodeName;\r\n        if (!newElement.hasAttribute(name)) {\r\n            element.removeAttribute(name)\r\n        }\r\n    }\r\n    for (i = 0; i < newAttributes.length; i++) {\r\n        element.setAttribute(newAttributes[i].nodeName, newAttributes[i].nodeValue)\r\n    }\r\n};\r\nconst removeHandler = function(templateDeferred) {\r\n    templateDeferred.resolve()\r\n};\r\nexport const normalizeWidth = width => {\r\n    if (\"number\" === typeof width) {\r\n        return `${width.toFixed(3)}px`\r\n    }\r\n    if (\"adaptiveHidden\" === width) {\r\n        return \"0.0001px\"\r\n    }\r\n    return width\r\n};\r\nexport class ColumnsView extends(ColumnStateMixin(modules.View)) {\r\n    init() {\r\n        this._scrollLeft = -1;\r\n        this._columnsController = this.getController(\"columns\");\r\n        this._dataController = this.getController(\"data\");\r\n        this._adaptiveColumnsController = this.getController(\"adaptiveColumns\");\r\n        this._columnChooserController = this.getController(\"columnChooser\");\r\n        this._editorFactoryController = this.getController(\"editorFactory\");\r\n        this._selectionController = this.getController(\"selection\");\r\n        this._columnChooserView = this.getView(\"columnChooserView\");\r\n        this._delayedTemplates = [];\r\n        this._templateDeferreds = new Set;\r\n        this._templatesCache = {};\r\n        this._templateTimeouts = new Set;\r\n        this.createAction(\"onCellClick\");\r\n        this.createAction(\"onRowClick\");\r\n        this.createAction(\"onCellDblClick\");\r\n        this.createAction(\"onRowDblClick\");\r\n        this.createAction(\"onCellHoverChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        });\r\n        this.createAction(\"onCellPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\"\r\n        });\r\n        this.createAction(\"onRowPrepared\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"],\r\n            category: \"rendering\",\r\n            afterExecute: e => {\r\n                this._afterRowPrepared(e)\r\n            }\r\n        });\r\n        this._columnsController.columnsChanged.add(this._columnOptionChanged.bind(this));\r\n        this._dataController && this._dataController.changed.add(this._handleDataChanged.bind(this))\r\n    }\r\n    dispose() {\r\n        if (hasWindow()) {\r\n            var _this$_templateTimeou, _this$_templateTimeou2;\r\n            const window = getWindow();\r\n            null === (_this$_templateTimeou = this._templateTimeouts) || void 0 === _this$_templateTimeou || _this$_templateTimeou.forEach((templateTimeout => window.clearTimeout(templateTimeout)));\r\n            null === (_this$_templateTimeou2 = this._templateTimeouts) || void 0 === _this$_templateTimeou2 || _this$_templateTimeou2.clear()\r\n        }\r\n    }\r\n    optionChanged(args) {\r\n        super.optionChanged(args);\r\n        switch (args.name) {\r\n            case \"cellHintEnabled\":\r\n            case \"onCellPrepared\":\r\n            case \"onRowPrepared\":\r\n            case \"onCellHoverChanged\":\r\n                this._invalidate(true, true);\r\n                args.handled = true;\r\n                break;\r\n            case \"keyboardNavigation\":\r\n                if (\"keyboardNavigation.enabled\" === args.fullName) {\r\n                    this._invalidate(true, true)\r\n                }\r\n                args.handled = true\r\n        }\r\n    }\r\n    _createScrollableOptions() {\r\n        const scrollingOptions = this.option(\"scrolling\");\r\n        let useNativeScrolling = this.option(\"scrolling.useNative\");\r\n        const options = extend({}, scrollingOptions, {\r\n            direction: \"both\",\r\n            bounceEnabled: false,\r\n            useKeyboard: false\r\n        });\r\n        if (void 0 === useNativeScrolling) {\r\n            useNativeScrolling = true\r\n        }\r\n        if (\"auto\" === useNativeScrolling) {\r\n            delete options.useNative;\r\n            delete options.useSimulatedScrollbar\r\n        } else {\r\n            options.useNative = !!useNativeScrolling;\r\n            options.useSimulatedScrollbar = !useNativeScrolling\r\n        }\r\n        return options\r\n    }\r\n    _updateCell($cell, parameters) {\r\n        if (parameters.rowType) {\r\n            this._cellPrepared($cell, parameters)\r\n        }\r\n    }\r\n    _needToSetCellWidths() {\r\n        return this.option(\"columnAutoWidth\")\r\n    }\r\n    _createCell(options) {\r\n        const {\r\n            column: column\r\n        } = options;\r\n        const alignment = column.alignment || getDefaultAlignment(this.option(\"rtlEnabled\"));\r\n        const needToSetCellWidths = this._needToSetCellWidths();\r\n        const cell = domAdapter.createElement(\"td\");\r\n        cell.style.textAlign = alignment;\r\n        const $cell = $(cell);\r\n        if (\"data\" === options.rowType && column.headerId && !column.type) {\r\n            if (this.component.option(\"showColumnHeaders\")) {\r\n                this.setAria(\"describedby\", column.headerId, $cell)\r\n            }\r\n        }\r\n        if (column.cssClass) {\r\n            $cell.addClass(column.cssClass)\r\n        }\r\n        if (Array.isArray(column.elementAttr)) {\r\n            column.elementAttr.forEach((_ref => {\r\n                let {\r\n                    name: name,\r\n                    value: value\r\n                } = _ref;\r\n                $cell.attr(name, value)\r\n            }))\r\n        }\r\n        if (\"expand\" === column.command) {\r\n            $cell.addClass(column.cssClass);\r\n            $cell.addClass(this.addWidgetPrefix(\"group-space\"))\r\n        }\r\n        if (column.colspan > 1) {\r\n            $cell.attr(\"colSpan\", column.colspan)\r\n        } else if (!column.isBand && \"auto\" !== column.visibleWidth && needToSetCellWidths) {\r\n            if (column.width || column.minWidth) {\r\n                cell.style.minWidth = getWidthStyle(column.minWidth || column.width)\r\n            }\r\n            if (column.width) {\r\n                setCellWidth(cell, column, getWidthStyle(column.width))\r\n            }\r\n        }\r\n        return $cell\r\n    }\r\n    _createRow(rowObject, tagName) {\r\n        tagName = tagName || \"tr\";\r\n        const $element = $(`<${tagName}>`).addClass(\"dx-row\");\r\n        if (\"tr\" === tagName) {\r\n            this.setAria(\"role\", \"row\", $element)\r\n        }\r\n        return $element\r\n    }\r\n    _isAltRow(row) {\r\n        return row && row.dataIndex % 2 === 1\r\n    }\r\n    _createTable(columns, isAppend) {\r\n        const $table = $(\"<table>\").addClass(this.addWidgetPrefix(\"table\")).addClass(this.addWidgetPrefix(\"table-fixed\"));\r\n        if (columns && !isAppend) {\r\n            $table.attr(\"id\", `dx-${new Guid}`).append(this._createColGroup(columns));\r\n            if (browser.safari) {\r\n                $table.append($(\"<thead>\").append(\"<tr>\"))\r\n            }\r\n            this.setAria(\"role\", \"presentation\", $table)\r\n        } else {\r\n            this.setAria(\"hidden\", true, $table)\r\n        }\r\n        this.setAria(\"role\", \"presentation\", $(\"<tbody>\").appendTo($table));\r\n        if (isAppend) {\r\n            return $table\r\n        }\r\n        if (browser.mozilla) {\r\n            eventsEngine.on($table, \"mousedown\", \"td\", (e => {\r\n                if (e.ctrlKey) {\r\n                    e.preventDefault()\r\n                }\r\n            }))\r\n        }\r\n        if (this.option(\"cellHintEnabled\")) {\r\n            eventsEngine.on($table, \"mousemove\", \".dx-row > td\", this.createAction((args => {\r\n                const e = args.event;\r\n                const $element = $(e.target);\r\n                const $cell = $(e.currentTarget);\r\n                const $row = $cell.parent();\r\n                const visibleColumns = this._columnsController.getVisibleColumns();\r\n                const rowOptions = $row.data(\"options\");\r\n                const columnIndex = $cell.index();\r\n                const cellOptions = rowOptions && rowOptions.cells && rowOptions.cells[columnIndex];\r\n                const column = cellOptions ? cellOptions.column : visibleColumns[columnIndex];\r\n                const isHeaderRow = $row.hasClass(\"dx-header-row\");\r\n                const isDataRow = $row.hasClass(\"dx-data-row\");\r\n                const isMasterDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                const isGroupRow = $row.hasClass(\"dx-group-row\");\r\n                const isFilterRow = $row.hasClass(this.addWidgetPrefix(\"filter-row\"));\r\n                const isDataRowWithTemplate = isDataRow && (!column || column.cellTemplate);\r\n                const isEditorShown = isDataRow && cellOptions && (rowOptions.isEditing || cellOptions.isEditing || (null === column || void 0 === column ? void 0 : column.showEditorAlways));\r\n                const isHeaderRowWithTemplate = isHeaderRow && (!column || column.headerCellTemplate);\r\n                const isGroupCellWithTemplate = isGroupRow && (!column || column.groupIndex && column.groupCellTemplate);\r\n                const shouldShowHint = !isMasterDetailRow && !isFilterRow && !isEditorShown && !isDataRowWithTemplate && !isHeaderRowWithTemplate && !isGroupCellWithTemplate;\r\n                if (shouldShowHint) {\r\n                    if ($element.data(CELL_HINT_VISIBLE)) {\r\n                        $element.removeAttr(\"title\");\r\n                        $element.data(CELL_HINT_VISIBLE, false)\r\n                    }\r\n                    const difference = $element[0].scrollWidth - $element[0].clientWidth;\r\n                    if (difference > 0 && !isDefined($element.attr(\"title\"))) {\r\n                        $element.attr(\"title\", $element.text());\r\n                        $element.data(CELL_HINT_VISIBLE, true)\r\n                    }\r\n                }\r\n            })))\r\n        }\r\n        const getOptions = event => {\r\n            const $cell = $(event.currentTarget);\r\n            const $fieldItemContent = $(event.target).closest(\".dx-field-item-content\");\r\n            const $row = $cell.parent();\r\n            const rowOptions = $row.data(\"options\");\r\n            const options = rowOptions && rowOptions.cells && rowOptions.cells[$cell.index()];\r\n            if (!$cell.closest(\"table\").is(event.delegateTarget)) {\r\n                return\r\n            }\r\n            const resultOptions = extend({}, options, {\r\n                cellElement: getPublicElement($cell),\r\n                event: event,\r\n                eventType: event.type\r\n            });\r\n            resultOptions.rowIndex = this.getRowIndex($row);\r\n            if ($fieldItemContent.length) {\r\n                const formItemOptions = $fieldItemContent.data(\"dx-form-item\");\r\n                if (formItemOptions.column) {\r\n                    resultOptions.column = formItemOptions.column;\r\n                    resultOptions.columnIndex = this._columnsController.getVisibleIndex(resultOptions.column.index)\r\n                }\r\n            }\r\n            return resultOptions\r\n        };\r\n        eventsEngine.on($table, \"mouseover\", \".dx-row > td\", (e => {\r\n            const options = getOptions(e);\r\n            options && this.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, \"mouseout\", \".dx-row > td\", (e => {\r\n            const options = getOptions(e);\r\n            options && this.executeAction(\"onCellHoverChanged\", options)\r\n        }));\r\n        eventsEngine.on($table, clickEventName, \".dx-row > td\", (e => {\r\n            const options = getOptions(e);\r\n            options && this.executeAction(\"onCellClick\", options)\r\n        }));\r\n        eventsEngine.on($table, dblclickEvent, \".dx-row > td\", (e => {\r\n            const options = getOptions(e);\r\n            options && this.executeAction(\"onCellDblClick\", options)\r\n        }));\r\n        subscribeToRowEvents(this, $table);\r\n        return $table\r\n    }\r\n    _rowPointerDown(e) {}\r\n    _rowClick() {}\r\n    _rowDblClick() {}\r\n    _createColGroup(columns) {\r\n        const colgroupElement = $(\"<colgroup>\");\r\n        for (let i = 0; i < columns.length; i++) {\r\n            const colspan = columns[i].colspan || 1;\r\n            for (let j = 0; j < colspan; j++) {\r\n                colgroupElement.append(this._createCol(columns[i]))\r\n            }\r\n        }\r\n        return colgroupElement\r\n    }\r\n    _createCol(column) {\r\n        let width = column.visibleWidth || column.width;\r\n        if (\"adaptiveHidden\" === width) {\r\n            width = \"0.0001px\"\r\n        }\r\n        const col = $(\"<col>\");\r\n        setWidth(col, width);\r\n        return col\r\n    }\r\n    renderDelayedTemplates(change) {\r\n        const delayedTemplates = this._delayedTemplates;\r\n        const syncTemplates = delayedTemplates.filter((template => !template.async));\r\n        const asyncTemplates = delayedTemplates.filter((template => template.async));\r\n        this._delayedTemplates = [];\r\n        this._renderDelayedTemplatesCore(syncTemplates, false, change);\r\n        this._renderDelayedTemplatesCoreAsync(asyncTemplates)\r\n    }\r\n    _renderDelayedTemplatesCoreAsync(templates) {\r\n        if (templates.length) {\r\n            const templateTimeout = getWindow().setTimeout((() => {\r\n                this._templateTimeouts.delete(templateTimeout);\r\n                this._renderDelayedTemplatesCore(templates, true)\r\n            }));\r\n            this._templateTimeouts.add(templateTimeout)\r\n        }\r\n    }\r\n    _renderDelayedTemplatesCore(templates, isAsync, change) {\r\n        const date = new Date;\r\n        while (templates.length) {\r\n            const templateParameters = templates.shift();\r\n            const {\r\n                options: options\r\n            } = templateParameters;\r\n            const doc = domAdapter.getRootNode($(options.container).get(0));\r\n            const needWaitAsyncTemplates = this.needWaitAsyncTemplates();\r\n            if (!isAsync || $(options.container).closest(doc).length || needWaitAsyncTemplates) {\r\n                if (change) {\r\n                    options.change = change\r\n                }\r\n                templateParameters.template.render(options)\r\n            }\r\n            if (isAsync && new Date - date > 30) {\r\n                this._renderDelayedTemplatesCoreAsync(templates);\r\n                break\r\n            }\r\n        }\r\n        if (!templates.length && this._delayedTemplates.length) {\r\n            this.renderDelayedTemplates()\r\n        }\r\n    }\r\n    _processTemplate(template, options) {\r\n        const that = this;\r\n        let renderingTemplate;\r\n        if (template && template.render && !isRenderer(template)) {\r\n            renderingTemplate = {\r\n                allowRenderToDetachedContainer: template.allowRenderToDetachedContainer,\r\n                render(options) {\r\n                    template.render(options.container, options.model, options.change);\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else if (isFunction(template)) {\r\n            renderingTemplate = {\r\n                render(options) {\r\n                    const renderedTemplate = template(getPublicElement(options.container), options.model, options.change);\r\n                    if (renderedTemplate && (renderedTemplate.nodeType || isRenderer(renderedTemplate))) {\r\n                        options.container.append(renderedTemplate)\r\n                    }\r\n                    options.deferred && options.deferred.resolve()\r\n                }\r\n            }\r\n        } else {\r\n            const templateID = isString(template) ? template : $(template).attr(\"id\");\r\n            if (!templateID) {\r\n                renderingTemplate = that.getTemplate(template)\r\n            } else {\r\n                if (!that._templatesCache[templateID]) {\r\n                    that._templatesCache[templateID] = that.getTemplate(template)\r\n                }\r\n                renderingTemplate = that._templatesCache[templateID]\r\n            }\r\n        }\r\n        return renderingTemplate\r\n    }\r\n    renderTemplate(container, template, options, allowRenderToDetachedContainer, change) {\r\n        const renderingTemplate = this._processTemplate(template, options);\r\n        const {\r\n            column: column\r\n        } = options;\r\n        const isDataRow = \"data\" === options.rowType;\r\n        const templateDeferred = new Deferred;\r\n        const templateOptions = {\r\n            container: container,\r\n            model: options,\r\n            deferred: templateDeferred,\r\n            onRendered: () => {\r\n                if (this.isDisposed()) {\r\n                    templateDeferred.reject()\r\n                } else {\r\n                    templateDeferred.resolve()\r\n                }\r\n            }\r\n        };\r\n        if (renderingTemplate) {\r\n            options.component = this.component;\r\n            const columnAsync = column && (column.renderAsync && isDataRow || this.option(\"renderAsync\") && (false !== column.renderAsync && (column.command || column.showEditorAlways) && isDataRow || \"filter\" === options.rowType));\r\n            const async = options.renderAsync ?? columnAsync;\r\n            if ((renderingTemplate.allowRenderToDetachedContainer || allowRenderToDetachedContainer) && !async) {\r\n                renderingTemplate.render(templateOptions)\r\n            } else {\r\n                this._delayedTemplates.push({\r\n                    template: renderingTemplate,\r\n                    options: templateOptions,\r\n                    async: async\r\n                })\r\n            }\r\n            this._templateDeferreds.add(templateDeferred);\r\n            eventsEngine.on(container, removeEvent, removeHandler.bind(null, templateDeferred))\r\n        } else {\r\n            templateDeferred.reject()\r\n        }\r\n        return templateDeferred.promise().always((() => {\r\n            this._templateDeferreds.delete(templateDeferred)\r\n        }))\r\n    }\r\n    _getBodies(tableElement) {\r\n        return $(tableElement).children(\"tbody\").not(\".dx-header\").not(\".dx-footer\")\r\n    }\r\n    _needWrapRow($tableElement) {\r\n        var _this$_getBodies;\r\n        const hasRowTemplate = !!this.option().rowTemplate;\r\n        return hasRowTemplate && !!(null !== (_this$_getBodies = this._getBodies($tableElement)) && void 0 !== _this$_getBodies && _this$_getBodies.filter(\".dx-row\").length)\r\n    }\r\n    _wrapRowIfNeed($table, $row, isRefreshing) {\r\n        const $tableElement = isRefreshing ? $table || this._tableElement : this._tableElement || $table;\r\n        const needWrapRow = this._needWrapRow($tableElement);\r\n        if (needWrapRow) {\r\n            const $tbody = $(\"<tbody>\").addClass($row.attr(\"class\"));\r\n            this.setAria(\"role\", \"presentation\", $tbody);\r\n            return $tbody.append($row)\r\n        }\r\n        return $row\r\n    }\r\n    _appendRow($table, $row, appendTemplate) {\r\n        appendTemplate = appendTemplate || appendElementTemplate;\r\n        appendTemplate.render({\r\n            content: $row,\r\n            container: $table\r\n        })\r\n    }\r\n    _resizeCore() {\r\n        const scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    }\r\n    _renderCore(e) {\r\n        const $root = this.element().parent();\r\n        if (!$root || $root.parent().length) {\r\n            this.renderDelayedTemplates(e)\r\n        }\r\n        return (new Deferred).resolve()\r\n    }\r\n    _renderTable(options) {\r\n        options = options || {};\r\n        options.columns = this._columnsController.getVisibleColumns();\r\n        const changeType = options.change && options.change.changeType;\r\n        const $table = this._createTable(options.columns, \"append\" === changeType || \"prepend\" === changeType || \"update\" === changeType);\r\n        this._renderRows($table, options);\r\n        return $table\r\n    }\r\n    _renderRows($table, options) {\r\n        const that = this;\r\n        const rows = that._getRows(options.change);\r\n        const columnIndices = options.change && options.change.columnIndices || [];\r\n        const changeTypes = options.change && options.change.changeTypes || [];\r\n        for (let i = 0; i < rows.length; i++) {\r\n            that._renderRow($table, extend({\r\n                row: rows[i],\r\n                columnIndices: columnIndices[i],\r\n                changeType: changeTypes[i]\r\n            }, options))\r\n        }\r\n    }\r\n    _renderRow($table, options) {\r\n        if (!options.columnIndices) {\r\n            options.row.cells = []\r\n        }\r\n        const $row = this._createRow(options.row);\r\n        const $wrappedRow = this._wrapRowIfNeed($table, $row);\r\n        if (\"remove\" !== options.changeType) {\r\n            this._renderCells($row, options)\r\n        }\r\n        this._appendRow($table, $wrappedRow);\r\n        const rowOptions = extend({\r\n            columns: options.columns\r\n        }, options.row);\r\n        this._addWatchMethod(rowOptions, options.row);\r\n        this._rowPrepared($wrappedRow, rowOptions, options.row)\r\n    }\r\n    _needRenderCell(columnIndex, columnIndices) {\r\n        return !columnIndices || columnIndices.indexOf(columnIndex) >= 0\r\n    }\r\n    _renderCells($row, options) {\r\n        const that = this;\r\n        let columnIndex = 0;\r\n        const {\r\n            row: row\r\n        } = options;\r\n        const {\r\n            columns: columns\r\n        } = options;\r\n        for (let i = 0; i < columns.length; i++) {\r\n            if (this._needRenderCell(i, options.columnIndices)) {\r\n                that._renderCell($row, extend({\r\n                    column: columns[i],\r\n                    columnIndex: columnIndex,\r\n                    value: row.values && row.values[columnIndex],\r\n                    oldValue: row.oldValues && row.oldValues[columnIndex]\r\n                }, options))\r\n            }\r\n            if (columns[i].colspan > 1) {\r\n                columnIndex += columns[i].colspan\r\n            } else {\r\n                columnIndex++\r\n            }\r\n        }\r\n    }\r\n    _updateCells($rowElement, $newRowElement, columnIndices, options) {\r\n        var _options$node;\r\n        const that = this;\r\n        const $cells = $rowElement.children();\r\n        const $newCells = $newRowElement.children();\r\n        const highlightChanges = this.option(\"highlightChanges\");\r\n        const cellUpdatedClass = this.addWidgetPrefix(\"cell-updated-animation\");\r\n        if (null !== options && void 0 !== options && null !== (_options$node = options.node) && void 0 !== _options$node && _options$node.hasChildren) {\r\n            $cells.each((function() {\r\n                that.setAria(\"expanded\", options.isExpanded, $(this))\r\n            }))\r\n        }\r\n        columnIndices.forEach(((columnIndex, index) => {\r\n            const $cell = $cells.eq(columnIndex);\r\n            const $newCell = $newCells.eq(index);\r\n            $cell.replaceWith($newCell);\r\n            if (highlightChanges && !$newCell.hasClass(\"dx-command-expand\")) {\r\n                $newCell.addClass(cellUpdatedClass)\r\n            }\r\n        }));\r\n        copyAttributes($rowElement.get(0), $newRowElement.get(0))\r\n    }\r\n    _setCellAriaAttributes($cell, cellOptions, options) {\r\n        var _row$node;\r\n        const {\r\n            row: row\r\n        } = options;\r\n        const isFreeSpaceRow = \"freeSpace\" === cellOptions.rowType;\r\n        const isGroupRow = \"group\" === cellOptions.rowType;\r\n        const rowHasChildren = null === row || void 0 === row || null === (_row$node = row.node) || void 0 === _row$node ? void 0 : _row$node.hasChildren;\r\n        if (isFreeSpaceRow) {\r\n            return\r\n        }\r\n        this.setAria(\"role\", \"gridcell\", $cell);\r\n        if (rowHasChildren) {\r\n            this.setAria(\"expanded\", row.isExpanded, $cell)\r\n        }\r\n        const columnIndexOffset = this._columnsController.getColumnIndexOffset();\r\n        const ariaColIndex = isGroupRow ? cellOptions.columnIndex + 1 : cellOptions.columnIndex + columnIndexOffset + 1;\r\n        this.setAria(\"colindex\", ariaColIndex, $cell)\r\n    }\r\n    _renderCell($row, options) {\r\n        const cellOptions = this._getCellOptions(options);\r\n        if (options.columnIndices) {\r\n            if (options.row.cells) {\r\n                const cellIndex = options.row.cells.findIndex((cell => cell.columnIndex === cellOptions.columnIndex));\r\n                options.row.cells[cellIndex] = cellOptions\r\n            }\r\n        } else {\r\n            options.row.cells.push(cellOptions)\r\n        }\r\n        const $cell = this._createCell(cellOptions);\r\n        this._setCellAriaAttributes($cell, cellOptions, options);\r\n        this._renderCellContent($cell, cellOptions, options);\r\n        $row.get(0).appendChild($cell.get(0));\r\n        return $cell\r\n    }\r\n    _renderCellContent($cell, options, renderOptions) {\r\n        const template = this._getCellTemplate(options);\r\n        when(!template || this.renderTemplate($cell, template, options, void 0, renderOptions.change)).done((() => {\r\n            this._updateCell($cell, options)\r\n        }))\r\n    }\r\n    _getCellTemplate(options) {}\r\n    _getRows(change) {\r\n        return []\r\n    }\r\n    _getCellOptions(options) {\r\n        const cellOptions = {\r\n            column: options.column,\r\n            columnIndex: options.columnIndex,\r\n            rowType: options.row.rowType,\r\n            rowIndex: options.row.rowIndex,\r\n            isAltRow: this._isAltRow(options.row)\r\n        };\r\n        this._addWatchMethod(cellOptions);\r\n        return cellOptions\r\n    }\r\n    _addWatchMethod(options, source) {\r\n        if (!this.option(\"repaintChangesOnly\")) {\r\n            return\r\n        }\r\n        const watchers = [];\r\n        source = source || options;\r\n        source.watch = source.watch || function(getter, updateValueFunc, updateRowFunc) {\r\n            let oldValue = getter(source.data);\r\n            const watcher = function(row) {\r\n                if (row && updateRowFunc) {\r\n                    updateRowFunc(row)\r\n                }\r\n                const newValue = getter(source.data);\r\n                if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {\r\n                    if (row) {\r\n                        updateValueFunc(newValue)\r\n                    }\r\n                    oldValue = newValue\r\n                }\r\n            };\r\n            watchers.push(watcher);\r\n            return function() {\r\n                const index = watchers.indexOf(watcher);\r\n                if (index >= 0) {\r\n                    watchers.splice(index, 1)\r\n                }\r\n            }\r\n        };\r\n        source.update = source.update || function(row, keepRow) {\r\n            if (row) {\r\n                this.data = options.data = row.data;\r\n                this.rowIndex = options.rowIndex = row.rowIndex;\r\n                this.dataIndex = options.dataIndex = row.dataIndex;\r\n                this.isExpanded = options.isExpanded = row.isExpanded;\r\n                if (options.row && !keepRow) {\r\n                    options.row = row\r\n                }\r\n            }\r\n            watchers.forEach((watcher => {\r\n                watcher(row)\r\n            }))\r\n        };\r\n        if (source !== options) {\r\n            options.watch = source.watch.bind(source)\r\n        }\r\n        return options\r\n    }\r\n    _cellPrepared(cell, options) {\r\n        options.cellElement = getPublicElement($(cell));\r\n        this.executeAction(\"onCellPrepared\", options)\r\n    }\r\n    _rowPrepared($row, options, row) {\r\n        elementData($row.get(0), \"options\", options);\r\n        options.rowElement = getPublicElement($row);\r\n        this.executeAction(\"onRowPrepared\", options)\r\n    }\r\n    _columnOptionChanged(e) {\r\n        const {\r\n            optionNames: optionNames\r\n        } = e;\r\n        if (gridCoreUtils.checkChanges(optionNames, [\"width\", \"visibleWidth\"])) {\r\n            const visibleColumns = this._columnsController.getVisibleColumns();\r\n            const widths = visibleColumns.map((column => column.visibleWidth || column.width));\r\n            this.setColumnWidths({\r\n                widths: widths,\r\n                optionNames: optionNames\r\n            });\r\n            return\r\n        }\r\n        if (!this._requireReady) {\r\n            this.render()\r\n        }\r\n    }\r\n    getCellIndex($cell, rowIndex) {\r\n        const cellIndex = $cell.length ? $cell[0].cellIndex : -1;\r\n        return cellIndex\r\n    }\r\n    getTableElements() {\r\n        return this._tableElement || $()\r\n    }\r\n    getTableElement(isFixedTableRendering) {\r\n        return this._tableElement\r\n    }\r\n    setTableElement(tableElement, isFixedTableRendering) {\r\n        this._tableElement = tableElement\r\n    }\r\n    _afterRowPrepared(e) {}\r\n    _handleDataChanged(e) {}\r\n    callbackNames() {\r\n        return [\"scrollChanged\"]\r\n    }\r\n    _updateScrollLeftPosition() {\r\n        const scrollLeft = this._scrollLeft;\r\n        if (scrollLeft >= 0) {\r\n            this._scrollLeft = 0;\r\n            this.scrollTo({\r\n                left: scrollLeft\r\n            })\r\n        }\r\n    }\r\n    scrollTo(pos) {\r\n        const $element = this.element();\r\n        const $scrollContainer = $element && $element.children(`.${this.addWidgetPrefix(\"scroll-container\")}`).not(`.${this.addWidgetPrefix(\"content-fixed\")}`);\r\n        if (isDefined(pos) && isDefined(pos.left) && this._scrollLeft !== pos.left) {\r\n            this._scrollLeft = pos.left;\r\n            $scrollContainer && $scrollContainer.scrollLeft(pos.left)\r\n        }\r\n    }\r\n    getContent(isFixedTableRendering) {\r\n        var _this$_tableElement;\r\n        return null === (_this$_tableElement = this._tableElement) || void 0 === _this$_tableElement ? void 0 : _this$_tableElement.parent()\r\n    }\r\n    _removeContent(isFixedTableRendering) {\r\n        const $scrollContainer = this.getContent(isFixedTableRendering);\r\n        if (null !== $scrollContainer && void 0 !== $scrollContainer && $scrollContainer.length) {\r\n            $scrollContainer.remove()\r\n        }\r\n    }\r\n    _wrapTableInScrollContainer($table, isFixedTableRendering) {\r\n        const $scrollContainer = $(\"<div>\");\r\n        const useNative = this.option(\"scrolling.useNative\");\r\n        if (false === useNative || \"auto\" === useNative && !supportUtils.nativeScrolling) {\r\n            $scrollContainer.addClass(this.addWidgetPrefix(\"scrollable-simulated\"))\r\n        }\r\n        eventsEngine.on($scrollContainer, \"scroll\", (() => {\r\n            const scrollLeft = $scrollContainer.scrollLeft();\r\n            if (scrollLeft !== this._scrollLeft) {\r\n                this.scrollChanged.fire({\r\n                    left: scrollLeft\r\n                }, this.name)\r\n            }\r\n        }));\r\n        $scrollContainer.addClass(this.addWidgetPrefix(\"content\")).addClass(this.addWidgetPrefix(\"scroll-container\")).append($table).appendTo(this.element());\r\n        this.setAria(\"role\", \"presentation\", $scrollContainer);\r\n        return $scrollContainer\r\n    }\r\n    needWaitAsyncTemplates() {\r\n        return this.option(\"templatesRenderAsynchronously\") && false === this.option(\"renderAsync\")\r\n    }\r\n    waitAsyncTemplates() {\r\n        let forceWaiting = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : false;\r\n        const result = new Deferred;\r\n        const needWaitAsyncTemplates = forceWaiting || this.needWaitAsyncTemplates();\r\n        if (!needWaitAsyncTemplates || !isDefined(this._templateDeferreds)) {\r\n            return result.resolve()\r\n        }\r\n        const waitTemplatesRecursion = () => when.apply(this, Array.from(this._templateDeferreds)).done((() => {\r\n            if (this.isDisposed()) {\r\n                result.reject()\r\n            } else if (this._templateDeferreds.size > 0) {\r\n                waitTemplatesRecursion()\r\n            } else {\r\n                result.resolve()\r\n            }\r\n        })).fail(result.reject);\r\n        waitTemplatesRecursion();\r\n        return result.promise()\r\n    }\r\n    _updateContent($newTableElement, change, isFixedTableRendering) {\r\n        return this.waitAsyncTemplates().done((() => {\r\n            this._removeContent(isFixedTableRendering);\r\n            this.setTableElement($newTableElement, isFixedTableRendering);\r\n            this._wrapTableInScrollContainer($newTableElement, isFixedTableRendering)\r\n        }))\r\n    }\r\n    _findContentElement(isFixedTableRendering) {}\r\n    _getWidths($cellElements) {\r\n        if (!$cellElements) {\r\n            return []\r\n        }\r\n        const result = [];\r\n        const cellElements = $cellElements.toArray();\r\n        cellElements.forEach((cell => {\r\n            let width = cell.offsetWidth;\r\n            if (cell.getBoundingClientRect) {\r\n                const rect = getBoundingRect(cell);\r\n                if (rect.width > cell.offsetWidth - 1) {\r\n                    width = rect.width\r\n                }\r\n            }\r\n            result.push(width)\r\n        }));\r\n        return result\r\n    }\r\n    getColumnWidths($tableElement, rowIndex) {\r\n        (this.option(\"forceApplyBindings\") || noop)();\r\n        $tableElement = $tableElement ?? this.getTableElement();\r\n        if ($tableElement) {\r\n            const $rows = $tableElement.children(\"tbody:not(.dx-header)\").children();\r\n            for (let i = 0; i < $rows.length; i++) {\r\n                const $row = $rows.eq(i);\r\n                const isGroupRow = $row.hasClass(\"dx-group-row\");\r\n                const isDetailRow = $row.hasClass(DETAIL_ROW_CLASS);\r\n                const isErrorRow = $row.hasClass(\"dx-error-row\");\r\n                const isRowVisible = \"none\" !== $row.get(0).style.display && !$row.hasClass(\"dx-state-invisible\");\r\n                const isRelevantRow = !isGroupRow && !isDetailRow && !isErrorRow;\r\n                if (isRowVisible && isRelevantRow) {\r\n                    const $cells = $row.children(\"td\");\r\n                    const result = this._getWidths($cells);\r\n                    return result\r\n                }\r\n            }\r\n        }\r\n        return []\r\n    }\r\n    getVisibleColumnIndex(columnIndex, rowIndex) {\r\n        return columnIndex\r\n    }\r\n    setCellPropertiesCore(styleProps, $row, visibleCellIndex) {\r\n        const $cell = $row.hasClass(\"dx-group-row\") ? $row.find(`td[aria-colindex='${visibleCellIndex+1}']:not(.dx-group-cell)`) : $row.find(\"td\").eq(visibleCellIndex);\r\n        for (let i = 0; i < $cell.length; i += 1) {\r\n            const cell = $cell.get(i);\r\n            Object.assign(cell.style, styleProps)\r\n        }\r\n    }\r\n    setCellProperties(styleProps, columnIndex, rowIndex) {\r\n        const $tableElement = this.getTableElement();\r\n        if (!(null !== $tableElement && void 0 !== $tableElement && $tableElement.length)) {\r\n            return\r\n        }\r\n        const $rows = $tableElement.children().children(\".dx-row\").not(`.${DETAIL_ROW_CLASS}`);\r\n        if (isDefined(rowIndex)) {\r\n            this.setCellPropertiesCore(styleProps, $rows.eq(rowIndex), columnIndex)\r\n        } else {\r\n            for (let rowIndex = 0; rowIndex < $rows.length; rowIndex++) {\r\n                const visibleIndex = this.getVisibleColumnIndex(columnIndex, rowIndex);\r\n                if (visibleIndex >= 0) {\r\n                    this.setCellPropertiesCore(styleProps, $rows.eq(rowIndex), visibleIndex)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    setColumnWidths(_ref2) {\r\n        let {\r\n            widths: widths,\r\n            optionNames: optionNames\r\n        } = _ref2;\r\n        const $tableElement = this.getTableElement();\r\n        if (!(null !== $tableElement && void 0 !== $tableElement && $tableElement.length) || !widths) {\r\n            return\r\n        }\r\n        const columns = this.getColumns();\r\n        const needToSetCellWidths = this._needToSetCellWidths();\r\n        const $cols = $tableElement.children(\"colgroup\").children(\"col\");\r\n        $cols.toArray().forEach((col => col.removeAttribute(\"style\")));\r\n        columns.forEach(((column, columnIndex) => {\r\n            if (needToSetCellWidths && column.width && !column.command) {\r\n                const styleProps = {};\r\n                const width = getWidthStyle(column.visibleWidth || column.width);\r\n                const minWidth = getWidthStyle(column.minWidth || width);\r\n                styleProps.width = \"auto\" === column.width ? \"\" : width;\r\n                styleProps.maxWidth = styleProps.width;\r\n                styleProps.minWidth = minWidth;\r\n                this.setCellProperties(styleProps, columnIndex)\r\n            }\r\n            const colWidth = normalizeWidth(widths[columnIndex]);\r\n            if (isDefined(colWidth)) {\r\n                setWidth($cols.eq(columnIndex), colWidth)\r\n            }\r\n        }))\r\n    }\r\n    getCellElements(rowIndex) {\r\n        return this._getCellElementsCore(rowIndex)\r\n    }\r\n    _getCellElementsCore(rowIndex) {\r\n        if (rowIndex < 0) {\r\n            return\r\n        }\r\n        const $row = this._getRowElements().eq(rowIndex);\r\n        return $row.children()\r\n    }\r\n    _getCellElement(rowIndex, columnIdentifier) {\r\n        const $cells = this.getCellElements(rowIndex);\r\n        const columnVisibleIndex = this._getVisibleColumnIndex($cells, rowIndex, columnIdentifier);\r\n        if (!(null !== $cells && void 0 !== $cells && $cells.length) || columnVisibleIndex < 0) {\r\n            return\r\n        }\r\n        const $cell = $cells.eq(columnVisibleIndex);\r\n        return $cell.length > 0 ? $cell : void 0\r\n    }\r\n    _getRowElement(rowIndex) {\r\n        const that = this;\r\n        let $rowElement = $();\r\n        const $tableElements = that.getTableElements();\r\n        iteratorUtils.each($tableElements, ((_, tableElement) => {\r\n            $rowElement = $rowElement.add(that._getRowElements($(tableElement)).eq(rowIndex))\r\n        }));\r\n        if ($rowElement.length) {\r\n            return $rowElement\r\n        }\r\n        return\r\n    }\r\n    getCellElement(rowIndex, columnIdentifier) {\r\n        const $cell = this._getCellElement(rowIndex, columnIdentifier);\r\n        if ($cell) {\r\n            return getPublicElement($cell)\r\n        }\r\n        return\r\n    }\r\n    getRowElement(rowIndex) {\r\n        const $rows = this._getRowElement(rowIndex);\r\n        let elements = [];\r\n        if ($rows && !getPublicElement($rows).get) {\r\n            for (let i = 0; i < $rows.length; i++) {\r\n                elements.push($rows[i])\r\n            }\r\n        } else {\r\n            elements = $rows\r\n        }\r\n        return elements\r\n    }\r\n    _getVisibleColumnIndex($cells, rowIndex, columnIdentifier) {\r\n        if (isString(columnIdentifier)) {\r\n            const columnIndex = this._columnsController.columnOption(columnIdentifier, \"index\");\r\n            return this._columnsController.getVisibleIndex(columnIndex)\r\n        }\r\n        return columnIdentifier\r\n    }\r\n    getColumnElements() {}\r\n    getColumns(rowIndex, $tableElement) {\r\n        return this._columnsController.getVisibleColumns(rowIndex)\r\n    }\r\n    getCell(cellPosition, rows, cells) {\r\n        const $rows = rows || this._getRowElements();\r\n        let $cells;\r\n        if ($rows.length > 0 && cellPosition.rowIndex >= 0) {\r\n            var _$cells;\r\n            if (\"virtual\" !== this.option(\"scrolling.mode\") && \"virtual\" !== this.option(\"scrolling.rowRenderingMode\")) {\r\n                cellPosition.rowIndex = cellPosition.rowIndex < $rows.length ? cellPosition.rowIndex : $rows.length - 1\r\n            }\r\n            $cells = cells || this.getCellElements(cellPosition.rowIndex);\r\n            if ((null === (_$cells = $cells) || void 0 === _$cells ? void 0 : _$cells.length) > 0) {\r\n                return $cells.eq($cells.length > cellPosition.columnIndex ? cellPosition.columnIndex : $cells.length - 1)\r\n            }\r\n        }\r\n    }\r\n    getRowsCount() {\r\n        const tableElement = this.getTableElement();\r\n        if (tableElement && 1 === tableElement.length) {\r\n            return tableElement[0].rows.length\r\n        }\r\n        return 0\r\n    }\r\n    _getRowElementsCore(tableElement) {\r\n        tableElement = tableElement || this.getTableElement();\r\n        if (tableElement) {\r\n            const hasRowTemplate = this.option().rowTemplate || this.option(\"dataRowTemplate\");\r\n            const tBodies = hasRowTemplate && tableElement.find(\"> tbody.dx-row\");\r\n            return tBodies && tBodies.length ? tBodies : tableElement.find(\"> tbody > .dx-row, > .dx-row\")\r\n        }\r\n        return $()\r\n    }\r\n    _getRowElements(tableElement) {\r\n        return this._getRowElementsCore(tableElement)\r\n    }\r\n    getRowIndex($row) {\r\n        return this._getRowElements().index($row)\r\n    }\r\n    getBoundingRect() {}\r\n    getName() {}\r\n    setScrollerSpacing(width) {\r\n        const $element = this.element();\r\n        const rtlEnabled = this.option(\"rtlEnabled\");\r\n        $element && $element.css({\r\n            paddingLeft: rtlEnabled ? width : \"\",\r\n            paddingRight: !rtlEnabled ? width : \"\"\r\n        })\r\n    }\r\n    isScrollbarVisible(isHorizontal) {\r\n        const $element = this.element();\r\n        const $tableElement = this._tableElement;\r\n        if ($element && $tableElement) {\r\n            return isHorizontal ? getOuterWidth($tableElement) - getWidth($element) > 0 : getOuterHeight($tableElement) - getHeight($element) > 0\r\n        }\r\n        return false\r\n    }\r\n    isDisposed() {\r\n        var _this$component;\r\n        return null === (_this$component = this.component) || void 0 === _this$component ? void 0 : _this$component._disposed\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}