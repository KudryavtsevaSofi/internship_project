{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofia\\\\Desktop\\\\\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0438\\u0439 \\u0426\\u041A\\\\internship_project\\\\client\\\\src\\\\components\\\\BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect } from \"react\";\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\nimport { COLUMNS } from \"./columns\";\nimport \"./table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n  // State for planets and suitabilities\n  const [planets, setPlanets] = useState([]);\n  const [suitabilities, setSuitabilities] = useState([]);\n  // State for form data with default empty strings to ensure controlled inputs\n  const [formData, setFormData] = useState({\n    id: \"\",\n    name: \"\",\n    type: \"\",\n    distanceFromEarth: \"\",\n    suitabilityId: \"\"\n  });\n  // State to track if we're editing\n  const [isEditing, setIsEditing] = useState(false);\n\n  // Fetch planets and suitabilities on mount\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [planetsResponse, suitabilitiesResponse] = await Promise.all([fetch(\"http://localhost:5000/planets\"), fetch(\"http://localhost:5000/suitabilities\")]);\n        const planetsData = await planetsResponse.json();\n        const suitabilitiesData = await suitabilitiesResponse.json();\n        setPlanets(planetsData);\n        setSuitabilities(suitabilitiesData);\n      } catch (error) {\n        console.error(\"Failed to fetch data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n\n  // Memoized columns\n  const columns = useMemo(() => [...COLUMNS.filter(col => col.accessorKey !== \"suitabilityId\"), {\n    id: \"suitability\",\n    header: \"Suitability\",\n    accessorFn: row => {\n      const suitability = suitabilities.find(s => s.id === row.suitabilityId);\n      return suitability ? suitability.name : row.suitabilityId || \"Unknown\";\n    }\n  }, {\n    id: \"actions\",\n    header: \"Actions\",\n    cell: ({\n      row\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(row.original),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(row.original.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }, this)\n  }], [suitabilities]);\n\n  // Memoized data\n  const data = useMemo(() => planets, [planets]);\n\n  // Table instance\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel()\n  });\n\n  // Handle form input changes\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle form submission (Create or Update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const planetData = {\n      name: formData.name,\n      type: formData.type,\n      distanceFromEarth: parseFloat(formData.distanceFromEarth) || 0,\n      // Fallback to 0 if invalid\n      suitabilityId: parseInt(formData.suitabilityId) || 0 // Fallback to 0 if invalid\n    };\n    try {\n      if (isEditing) {\n        // Update existing planet\n        const response = await fetch(`http://localhost:5000/planets/${formData.id}`, {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(planetData)\n        });\n        if (response.ok) {\n          const updatedPlanet = await response.json();\n          setPlanets(prev => prev.map(planet => planet.id === formData.id ? updatedPlanet : planet));\n        }\n      } else {\n        // Create new planet\n        const response = await fetch(\"http://localhost:5000/planets\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(planetData)\n        });\n        if (response.ok) {\n          const newPlanet = await response.json();\n          setPlanets(prev => [...prev, newPlanet]);\n        }\n      }\n      // Reset form with defined values\n      setFormData({\n        // id: \"\",\n        name: \"\",\n        type: \"\",\n        distanceFromEarth: \"\",\n        suitabilityId: \"\"\n      });\n      setIsEditing(false);\n    } catch (error) {\n      console.error(\"Failed to save planet:\", error);\n    }\n  };\n\n  // Handle edit button click\n  const handleEdit = planet => {\n    var _planet$distanceFromE, _planet$suitabilityId;\n    // Ensure all fields are defined to prevent uncontrolled inputs\n    setFormData({\n      id: planet.id || \"\",\n      name: planet.name || \"\",\n      type: planet.type || \"\",\n      distanceFromEarth: ((_planet$distanceFromE = planet.distanceFromEarth) === null || _planet$distanceFromE === void 0 ? void 0 : _planet$distanceFromE.toString()) || \"\",\n      suitabilityId: ((_planet$suitabilityId = planet.suitabilityId) === null || _planet$suitabilityId === void 0 ? void 0 : _planet$suitabilityId.toString()) || \"\"\n    });\n    setIsEditing(true);\n  };\n\n  // Handle delete button click\n  const handleDelete = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/planets/${id}`, {\n        method: \"DELETE\"\n      });\n      if (response.ok) {\n        setPlanets(prev => prev.filter(planet => planet.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Failed to delete planet:\", error);\n    }\n  };\n\n  // Handle form reset/cancel\n  const handleCancel = () => {\n    // Reset form with defined values\n    setFormData({\n      id: \"\",\n      name: \"\",\n      type: \"\",\n      distanceFromEarth: \"\",\n      suitabilityId: \"\"\n    });\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: isEditing ? \"Edit Planet\" : \"Add New Planet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"name\",\n          value: formData.name,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"type\",\n          value: formData.type,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Distance from Earth (ly):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"distanceFromEarth\",\n          value: formData.distanceFromEarth,\n          onChange: handleInputChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Suitability:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"suitabilityId\",\n          value: formData.suitabilityId,\n          onChange: handleInputChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Suitability\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), suitabilities.map(suitability => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: suitability.id,\n            children: suitability.name\n          }, suitability.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isEditing ? \"Update\" : \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancel,\n        style: {\n          marginLeft: \"10px\"\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: table.getHeaderGroups().map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: headerGroup.headers.map(header => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: header.isPlaceholder ? null : flexRender(header.column.columnDef.header, header.getContext())\n          }, header.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this))\n        }, headerGroup.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: table.getRowModel().rows.map(row => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: row.getVisibleCells().map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: flexRender(cell.column.columnDef.cell, cell.getContext())\n          }, cell.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 17\n          }, this))\n        }, row.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(BasicTable, \"Xeb5BeqHKQ6QyZtcjCclVagiLeA=\", false, function () {\n  return [useReactTable];\n});\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useReactTable","getCoreRowModel","flexRender","COLUMNS","jsxDEV","_jsxDEV","BasicTable","_s","planets","setPlanets","suitabilities","setSuitabilities","formData","setFormData","id","name","type","distanceFromEarth","suitabilityId","isEditing","setIsEditing","fetchData","planetsResponse","suitabilitiesResponse","Promise","all","fetch","planetsData","json","suitabilitiesData","error","console","columns","filter","col","accessorKey","header","accessorFn","row","suitability","find","s","cell","children","onClick","handleEdit","original","fileName","_jsxFileName","lineNumber","columnNumber","handleDelete","data","table","handleInputChange","e","value","target","prev","handleSubmit","preventDefault","planetData","parseFloat","parseInt","response","method","headers","body","JSON","stringify","ok","updatedPlanet","map","planet","newPlanet","_planet$distanceFromE","_planet$suitabilityId","toString","handleCancel","onSubmit","style","marginBottom","onChange","required","marginLeft","getHeaderGroups","headerGroup","isPlaceholder","column","columnDef","getContext","getRowModel","rows","getVisibleCells","_c","$RefreshReg$"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/src/components/BasicTable.js"],"sourcesContent":["import React, { useMemo, useState, useEffect } from \"react\";\r\nimport { useReactTable, getCoreRowModel, flexRender } from \"@tanstack/react-table\";\r\nimport { COLUMNS } from \"./columns\";\r\nimport \"./table.css\";\r\n\r\nexport const BasicTable = () => {\r\n  // State for planets and suitabilities\r\n  const [planets, setPlanets] = useState([]);\r\n  const [suitabilities, setSuitabilities] = useState([]);\r\n  // State for form data with default empty strings to ensure controlled inputs\r\n  const [formData, setFormData] = useState({\r\n    id: \"\",\r\n    name: \"\",\r\n    type: \"\",\r\n    distanceFromEarth: \"\",\r\n    suitabilityId: \"\",\r\n  });\r\n  // State to track if we're editing\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  // Fetch planets and suitabilities on mount\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [planetsResponse, suitabilitiesResponse] = await Promise.all([\r\n          fetch(\"http://localhost:5000/planets\"),\r\n          fetch(\"http://localhost:5000/suitabilities\"),\r\n        ]);\r\n        const planetsData = await planetsResponse.json();\r\n        const suitabilitiesData = await suitabilitiesResponse.json();\r\n        setPlanets(planetsData);\r\n        setSuitabilities(suitabilitiesData);\r\n      } catch (error) {\r\n        console.error(\"Failed to fetch data:\", error);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Memoized columns\r\n  const columns = useMemo(\r\n    () => [\r\n      ...COLUMNS.filter((col) => col.accessorKey !== \"suitabilityId\"),\r\n      {\r\n        id: \"suitability\",\r\n        header: \"Suitability\",\r\n        accessorFn: (row) => {\r\n          const suitability = suitabilities.find((s) => s.id === row.suitabilityId);\r\n          return suitability ? suitability.name : row.suitabilityId || \"Unknown\";\r\n        },\r\n      },\r\n      {\r\n        id: \"actions\",\r\n        header: \"Actions\",\r\n        cell: ({ row }) => (\r\n          <div>\r\n            <button onClick={() => handleEdit(row.original)}>Edit</button>\r\n            <button onClick={() => handleDelete(row.original.id)}>Delete</button>\r\n          </div>\r\n        ),\r\n      },\r\n    ],\r\n    [suitabilities]\r\n  );\r\n\r\n  // Memoized data\r\n  const data = useMemo(() => planets, [planets]);\r\n\r\n  // Table instance\r\n  const table = useReactTable({\r\n    data,\r\n    columns,\r\n    getCoreRowModel: getCoreRowModel(),\r\n  });\r\n\r\n  // Handle form input changes\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle form submission (Create or Update)\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const planetData = {\r\n      name: formData.name,\r\n      type: formData.type,\r\n      distanceFromEarth: parseFloat(formData.distanceFromEarth) || 0, // Fallback to 0 if invalid\r\n      suitabilityId: parseInt(formData.suitabilityId) || 0, // Fallback to 0 if invalid\r\n    };\r\n\r\n    try {\r\n      if (isEditing) {\r\n        // Update existing planet\r\n        const response = await fetch(`http://localhost:5000/planets/${formData.id}`, {\r\n          method: \"PUT\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(planetData),\r\n        });\r\n        if (response.ok) {\r\n          const updatedPlanet = await response.json();\r\n          setPlanets((prev) =>\r\n            prev.map((planet) => (planet.id === formData.id ? updatedPlanet : planet))\r\n          );\r\n        }\r\n      } else {\r\n        // Create new planet\r\n        const response = await fetch(\"http://localhost:5000/planets\", {\r\n          method: \"POST\",\r\n          headers: { \"Content-Type\": \"application/json\" },\r\n          body: JSON.stringify(planetData),\r\n        });\r\n        if (response.ok) {\r\n          const newPlanet = await response.json();\r\n          setPlanets((prev) => [...prev, newPlanet]);\r\n        }\r\n      }\r\n      // Reset form with defined values\r\n      setFormData({\r\n        // id: \"\",\r\n        name: \"\",\r\n        type: \"\",\r\n        distanceFromEarth: \"\",\r\n        suitabilityId: \"\",\r\n      });\r\n      setIsEditing(false);\r\n    } catch (error) {\r\n      console.error(\"Failed to save planet:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle edit button click\r\n  const handleEdit = (planet) => {\r\n    // Ensure all fields are defined to prevent uncontrolled inputs\r\n    setFormData({\r\n      id: planet.id || \"\",\r\n      name: planet.name || \"\",\r\n      type: planet.type || \"\",\r\n      distanceFromEarth: planet.distanceFromEarth?.toString() || \"\",\r\n      suitabilityId: planet.suitabilityId?.toString() || \"\",\r\n    });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  // Handle delete button click\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/planets/${id}`, {\r\n        method: \"DELETE\",\r\n      });\r\n      if (response.ok) {\r\n        setPlanets((prev) => prev.filter((planet) => planet.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Failed to delete planet:\", error);\r\n    }\r\n  };\r\n\r\n  // Handle form reset/cancel\r\n  const handleCancel = () => {\r\n    // Reset form with defined values\r\n    setFormData({\r\n      id: \"\",\r\n      name: \"\",\r\n      type: \"\",\r\n      distanceFromEarth: \"\",\r\n      suitabilityId: \"\",\r\n    });\r\n    setIsEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Form for creating/editing planets */}\r\n      <form onSubmit={handleSubmit} style={{ marginBottom: \"20px\" }}>\r\n        <h3>{isEditing ? \"Edit Planet\" : \"Add New Planet\"}</h3>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={formData.name}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Type:</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"type\"\r\n            value={formData.type}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Distance from Earth (ly):</label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"distanceFromEarth\"\r\n            value={formData.distanceFromEarth}\r\n            onChange={handleInputChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div>\r\n          <label>Suitability:</label>\r\n          <select\r\n            name=\"suitabilityId\"\r\n            value={formData.suitabilityId}\r\n            onChange={handleInputChange}\r\n            required\r\n          >\r\n            <option value=\"\">Select Suitability</option>\r\n            {suitabilities.map((suitability) => (\r\n              <option key={suitability.id} value={suitability.id}>\r\n                {suitability.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <button type=\"submit\">{isEditing ? \"Update\" : \"Create\"}</button>\r\n        <button type=\"button\" onClick={handleCancel} style={{ marginLeft: \"10px\" }}>\r\n          Cancel\r\n        </button>\r\n      </form>\r\n\r\n      {/* Table */}\r\n      <table>\r\n        <thead>\r\n          {table.getHeaderGroups().map((headerGroup) => (\r\n            <tr key={headerGroup.id}>\r\n              {headerGroup.headers.map((header) => (\r\n                <th key={header.id}>\r\n                  {header.isPlaceholder\r\n                    ? null\r\n                    : flexRender(header.column.columnDef.header, header.getContext())}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody>\r\n          {table.getRowModel().rows.map((row) => (\r\n            <tr key={row.id}>\r\n              {row.getVisibleCells().map((cell) => (\r\n                <td key={cell.id}>\r\n                  {flexRender(cell.column.columnDef.cell, cell.getContext())}\r\n                </td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}