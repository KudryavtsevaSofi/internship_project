{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sofia\\\\Desktop\\\\\\u0420\\u0435\\u043F\\u043E\\u0437\\u0438\\u0442\\u043E\\u0440\\u0438\\u0439 \\u0426\\u041A\\\\internship_project\\\\src\\\\components\\\\BasicTable.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport { useReactTable } from '@tanstack/react-table';\nimport planets from '../server/database/data.json';\nimport { COLUMNS } from \"./columns\";\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BasicTable = () => {\n  _s();\n  // Мемоизация колонок и данных для оптимизации производительности\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => planetsData.planets, []);\n\n  // Используем useTable вместо useReactTable для корректного импорта\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    ...getTableProps(),\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", {\n        ...headerGroup.getHeaderGroupProps(),\n        children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", {\n          ...column.getHeaderProps(),\n          children: column.render('header')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      ...getTableBodyProps(),\n      children: rows.map(row => {\n        prepareRow(row);\n        return (\n          /*#__PURE__*/\n          // Исправляем getRowProps на row.getRowProps\n          _jsxDEV(\"tr\", {\n            ...row.getRowProps(),\n            children: row.cells.map(cell => /*#__PURE__*/_jsxDEV(\"td\", {\n              ...cell.getCellProps(),\n              children: cell.render('Cell')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)\n        );\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 7\n  }, this);\n};\n_s(BasicTable, \"u0fTMWXPwoYT4YFaUbvnmOkmXC8=\", true);\n_c = BasicTable;\nvar _c;\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"names":["React","useMemo","useReactTable","planets","COLUMNS","jsxDEV","_jsxDEV","BasicTable","_s","columns","data","planetsData","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","useTable","children","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","fileName","_jsxFileName","lineNumber","columnNumber","row","getRowProps","cells","cell","getCellProps","_c","$RefreshReg$"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/src/components/BasicTable.js"],"sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { useReactTable } from '@tanstack/react-table'\r\nimport planets from '../server/database/data.json'\r\nimport { COLUMNS } from \"./columns\";\r\nimport './table.css';\r\n\r\nexport const BasicTable = () => {\r\n    // Мемоизация колонок и данных для оптимизации производительности\r\n    const columns = useMemo(() => COLUMNS, []);\r\n    const data = useMemo(() => planetsData.planets, []);\r\n  \r\n    // Используем useTable вместо useReactTable для корректного импорта\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable({\r\n      columns,\r\n      data,\r\n    });\r\n  \r\n    return (\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              // Исправляем getRowProps на row.getRowProps\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => (\r\n                  <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                ))}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,SAASC,aAAa,QAAQ,uBAAuB;AACrD,OAAOC,OAAO,MAAM,8BAA8B;AAClD,SAASC,OAAO,QAAQ,WAAW;AACnC,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErB,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAMC,OAAO,GAAGR,OAAO,CAAC,MAAMG,OAAO,EAAE,EAAE,CAAC;EAC1C,MAAMM,IAAI,GAAGT,OAAO,CAAC,MAAMU,WAAW,CAACR,OAAO,EAAE,EAAE,CAAC;;EAEnD;EACA,MAAM;IACJS,aAAa;IACbC,iBAAiB;IACjBC,YAAY;IACZC,IAAI;IACJC;EACF,CAAC,GAAGC,QAAQ,CAAC;IACXR,OAAO;IACPC;EACF,CAAC,CAAC;EAEF,oBACEJ,OAAA;IAAA,GAAWM,aAAa,CAAC,CAAC;IAAAM,QAAA,gBACxBZ,OAAA;MAAAY,QAAA,EACGJ,YAAY,CAACK,GAAG,CAAEC,WAAW,iBAC5Bd,OAAA;QAAA,GAAQc,WAAW,CAACC,mBAAmB,CAAC,CAAC;QAAAH,QAAA,EACtCE,WAAW,CAACE,OAAO,CAACH,GAAG,CAAEI,MAAM,iBAC9BjB,OAAA;UAAA,GAAQiB,MAAM,CAACC,cAAc,CAAC,CAAC;UAAAN,QAAA,EAAGK,MAAM,CAACE,MAAM,CAAC,QAAQ;QAAC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAC/D;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACRvB,OAAA;MAAA,GAAWO,iBAAiB,CAAC,CAAC;MAAAK,QAAA,EAC3BH,IAAI,CAACI,GAAG,CAAEW,GAAG,IAAK;QACjBd,UAAU,CAACc,GAAG,CAAC;QACf;UAAA;UACE;UACAxB,OAAA;YAAA,GAAQwB,GAAG,CAACC,WAAW,CAAC,CAAC;YAAAb,QAAA,EACtBY,GAAG,CAACE,KAAK,CAACb,GAAG,CAAEc,IAAI,iBAClB3B,OAAA;cAAA,GAAQ2B,IAAI,CAACC,YAAY,CAAC,CAAC;cAAAhB,QAAA,EAAGe,IAAI,CAACR,MAAM,CAAC,MAAM;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CACvD;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA;QAAC;MAET,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEd,CAAC;AAACrB,EAAA,CA3CWD,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}