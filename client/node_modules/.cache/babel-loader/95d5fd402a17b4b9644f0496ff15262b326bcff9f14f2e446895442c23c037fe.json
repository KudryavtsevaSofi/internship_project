{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/pagination/pages/large.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport { createVNode, createFragment, createComponentVNode } from \"inferno\";\nimport { BaseInfernoComponent } from \"@devextreme/runtime/inferno\";\nimport { Fragment } from \"inferno\";\nimport { ConfigContext } from \"../../core/r1/config_context\";\nimport { PaginationDefaultProps } from \"../common/pagination_props\";\nimport { Page } from \"./page\";\nconst PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\nconst PAGES_LIMITER = 4;\nconst PagesLargeDefaultProps = {\n  maxPagesCount: PaginationDefaultProps.maxPagesCount,\n  pageCount: PaginationDefaultProps.pageCount,\n  pageIndex: PaginationDefaultProps.pageIndex,\n  pageIndexChangedInternal: PaginationDefaultProps.pageIndexChangedInternal\n};\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\n  switch (true) {\n    case 1 === startIndex:\n      return \"high\";\n    case startIndex + slidingWindowSize === pageCount - 1:\n      return \"low\";\n    default:\n      return \"both\";\n  }\n}\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\n  let pageIndexes = [];\n  let indexesForReuse = [];\n  switch (delimiter) {\n    case \"none\":\n      pageIndexes = [...slidingWindowIndexes];\n      break;\n    case \"both\":\n      pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\n      indexesForReuse = slidingWindowIndexes.slice(1, -1);\n      break;\n    case \"high\":\n      pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\n      indexesForReuse = slidingWindowIndexes.slice(0, -1);\n      break;\n    case \"low\":\n      pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\n      indexesForReuse = slidingWindowIndexes.slice(1);\n  }\n  return {\n    slidingWindowIndexes: slidingWindowIndexes,\n    indexesForReuse: indexesForReuse,\n    pageIndexes: pageIndexes\n  };\n}\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\n  const slidingWindowIndexes = [];\n  for (let i = 0; i < slidingWindowSize; i += 1) {\n    slidingWindowIndexes.push(i + startIndex);\n  }\n  return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter);\n}\nexport class PagesLarge extends BaseInfernoComponent {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.refs = null;\n    this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\n    this.generatePageIndexes = this.generatePageIndexes.bind(this);\n    this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\n    this.onPageClick = this.onPageClick.bind(this);\n  }\n  getConfig() {\n    if (this.context[ConfigContext.id]) {\n      return this.context[ConfigContext.id];\n    }\n    return ConfigContext.defaultValue;\n  }\n  getSlidingWindowState() {\n    const slidingWindowState = this.slidingWindowStateHolder;\n    if (!slidingWindowState) {\n      return {\n        indexesForReuse: [],\n        slidingWindowIndexes: []\n      };\n    }\n    return slidingWindowState;\n  }\n  canReuseSlidingWindow(currentPageCount, pageIndex) {\n    const {\n      indexesForReuse: indexesForReuse\n    } = this.getSlidingWindowState();\n    const lastPageIsFartherThanWindow = indexesForReuse.slice(-1)[0] < currentPageCount - 1;\n    const pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\n    return lastPageIsFartherThanWindow && pageIndexExistInIndexes;\n  }\n  generatePageIndexes() {\n    const {\n      pageCount: pageCount,\n      pageIndex: pageIndex\n    } = this.props;\n    let startIndex = 0;\n    const {\n      slidingWindowIndexes: slidingWindowIndexes\n    } = this.getSlidingWindowState();\n    if (pageIndex === slidingWindowIndexes[0]) {\n      startIndex = pageIndex - 1;\n    } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\n      startIndex = pageIndex + 2 - 4;\n    } else if (pageIndex < 4) {\n      startIndex = 1;\n    } else if (pageIndex >= pageCount - 4) {\n      startIndex = pageCount - 4 - 1;\n    } else {\n      startIndex = pageIndex - 1;\n    }\n    const delimiter = getDelimiterType(startIndex, 4, pageCount);\n    const indexes = createPageIndexes(startIndex, 4, pageCount, delimiter);\n    const {\n      pageIndexes: pageIndexes\n    } = indexes;\n    this.slidingWindowStateHolder = indexes;\n    return pageIndexes;\n  }\n  isSlidingWindowMode() {\n    const {\n      maxPagesCount: maxPagesCount,\n      pageCount: pageCount\n    } = this.props;\n    return pageCount <= 4 || pageCount <= maxPagesCount;\n  }\n  onPageClick(pageIndex) {\n    this.props.pageIndexChangedInternal(pageIndex);\n  }\n  getPageIndexes() {\n    const {\n      pageCount: pageCount\n    } = this.props;\n    if (this.isSlidingWindowMode()) {\n      return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes;\n    }\n    if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\n      const {\n        slidingWindowIndexes: slidingWindowIndexes\n      } = this.getSlidingWindowState();\n      const delimiter = getDelimiterType(slidingWindowIndexes[0], 4, pageCount);\n      return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes;\n    }\n    return this.generatePageIndexes();\n  }\n  getPages() {\n    var _this$getConfig;\n    const {\n      pageIndex: pageIndex\n    } = this.props;\n    const createPage = index => {\n      const paginationProps = \"low\" === index || \"high\" === index ? null : {\n        index: index,\n        onClick: () => this.onPageClick(index),\n        selected: pageIndex === index\n      };\n      return {\n        key: index.toString(),\n        pageProps: paginationProps\n      };\n    };\n    const indices = this.getPageIndexes();\n    const rtlPageIndexes = null !== (_this$getConfig = this.getConfig()) && void 0 !== _this$getConfig && _this$getConfig.rtlEnabled ? [...indices].reverse() : indices;\n    return rtlPageIndexes.map(index => createPage(index));\n  }\n  render() {\n    const PagesMarkup = this.getPages().map(_ref => {\n      let {\n        key: key,\n        pageProps: pageProps\n      } = _ref;\n      return pageProps ? createComponentVNode(2, Page, {\n        index: pageProps.index,\n        selected: pageProps.selected,\n        onClick: pageProps.onClick\n      }, key) : createVNode(1, \"div\", \"dx-separator\", \". . .\", 16, null, key);\n    });\n    return createFragment(PagesMarkup, 0);\n  }\n}\nPagesLarge.defaultProps = PagesLargeDefaultProps;","map":{"version":3,"names":["createVNode","createFragment","createComponentVNode","BaseInfernoComponent","Fragment","ConfigContext","PaginationDefaultProps","Page","PAGER_PAGE_SEPARATOR_CLASS","PAGES_LIMITER","PagesLargeDefaultProps","maxPagesCount","pageCount","pageIndex","pageIndexChangedInternal","getDelimiterType","startIndex","slidingWindowSize","createPageIndexesBySlidingWindowIndexes","slidingWindowIndexes","delimiter","pageIndexes","indexesForReuse","slice","createPageIndexes","i","push","PagesLarge","constructor","props","state","refs","canReuseSlidingWindow","bind","generatePageIndexes","isSlidingWindowMode","onPageClick","getConfig","context","id","defaultValue","getSlidingWindowState","slidingWindowState","slidingWindowStateHolder","currentPageCount","lastPageIsFartherThanWindow","pageIndexExistInIndexes","includes","length","indexes","getPageIndexes","getPages","_this$getConfig","createPage","index","paginationProps","onClick","selected","key","toString","pageProps","indices","rtlPageIndexes","rtlEnabled","reverse","map","render","PagesMarkup","_ref","defaultProps"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/pagination/pages/large.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/pagination/pages/large.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport {\r\n    createVNode,\r\n    createFragment,\r\n    createComponentVNode\r\n} from \"inferno\";\r\nimport {\r\n    BaseInfernoComponent\r\n} from \"@devextreme/runtime/inferno\";\r\nimport {\r\n    Fragment\r\n} from \"inferno\";\r\nimport {\r\n    ConfigContext\r\n} from \"../../core/r1/config_context\";\r\nimport {\r\n    PaginationDefaultProps\r\n} from \"../common/pagination_props\";\r\nimport {\r\n    Page\r\n} from \"./page\";\r\nconst PAGER_PAGE_SEPARATOR_CLASS = \"dx-separator\";\r\nconst PAGES_LIMITER = 4;\r\nconst PagesLargeDefaultProps = {\r\n    maxPagesCount: PaginationDefaultProps.maxPagesCount,\r\n    pageCount: PaginationDefaultProps.pageCount,\r\n    pageIndex: PaginationDefaultProps.pageIndex,\r\n    pageIndexChangedInternal: PaginationDefaultProps.pageIndexChangedInternal\r\n};\r\n\r\nfunction getDelimiterType(startIndex, slidingWindowSize, pageCount) {\r\n    switch (true) {\r\n        case 1 === startIndex:\r\n            return \"high\";\r\n        case startIndex + slidingWindowSize === pageCount - 1:\r\n            return \"low\";\r\n        default:\r\n            return \"both\"\r\n    }\r\n}\r\n\r\nfunction createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter) {\r\n    let pageIndexes = [];\r\n    let indexesForReuse = [];\r\n    switch (delimiter) {\r\n        case \"none\":\r\n            pageIndexes = [...slidingWindowIndexes];\r\n            break;\r\n        case \"both\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1, -1);\r\n            break;\r\n        case \"high\":\r\n            pageIndexes = [0, ...slidingWindowIndexes, \"high\", pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(0, -1);\r\n            break;\r\n        case \"low\":\r\n            pageIndexes = [0, \"low\", ...slidingWindowIndexes, pageCount - 1];\r\n            indexesForReuse = slidingWindowIndexes.slice(1)\r\n    }\r\n    return {\r\n        slidingWindowIndexes: slidingWindowIndexes,\r\n        indexesForReuse: indexesForReuse,\r\n        pageIndexes: pageIndexes\r\n    }\r\n}\r\n\r\nfunction createPageIndexes(startIndex, slidingWindowSize, pageCount, delimiter) {\r\n    const slidingWindowIndexes = [];\r\n    for (let i = 0; i < slidingWindowSize; i += 1) {\r\n        slidingWindowIndexes.push(i + startIndex)\r\n    }\r\n    return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter)\r\n}\r\nexport class PagesLarge extends BaseInfernoComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.refs = null;\r\n        this.canReuseSlidingWindow = this.canReuseSlidingWindow.bind(this);\r\n        this.generatePageIndexes = this.generatePageIndexes.bind(this);\r\n        this.isSlidingWindowMode = this.isSlidingWindowMode.bind(this);\r\n        this.onPageClick = this.onPageClick.bind(this)\r\n    }\r\n    getConfig() {\r\n        if (this.context[ConfigContext.id]) {\r\n            return this.context[ConfigContext.id]\r\n        }\r\n        return ConfigContext.defaultValue\r\n    }\r\n    getSlidingWindowState() {\r\n        const slidingWindowState = this.slidingWindowStateHolder;\r\n        if (!slidingWindowState) {\r\n            return {\r\n                indexesForReuse: [],\r\n                slidingWindowIndexes: []\r\n            }\r\n        }\r\n        return slidingWindowState\r\n    }\r\n    canReuseSlidingWindow(currentPageCount, pageIndex) {\r\n        const {\r\n            indexesForReuse: indexesForReuse\r\n        } = this.getSlidingWindowState();\r\n        const lastPageIsFartherThanWindow = indexesForReuse.slice(-1)[0] < currentPageCount - 1;\r\n        const pageIndexExistInIndexes = indexesForReuse.includes(pageIndex);\r\n        return lastPageIsFartherThanWindow && pageIndexExistInIndexes\r\n    }\r\n    generatePageIndexes() {\r\n        const {\r\n            pageCount: pageCount,\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        let startIndex = 0;\r\n        const {\r\n            slidingWindowIndexes: slidingWindowIndexes\r\n        } = this.getSlidingWindowState();\r\n        if (pageIndex === slidingWindowIndexes[0]) {\r\n            startIndex = pageIndex - 1\r\n        } else if (pageIndex === slidingWindowIndexes[slidingWindowIndexes.length - 1]) {\r\n            startIndex = pageIndex + 2 - 4\r\n        } else if (pageIndex < 4) {\r\n            startIndex = 1\r\n        } else if (pageIndex >= pageCount - 4) {\r\n            startIndex = pageCount - 4 - 1\r\n        } else {\r\n            startIndex = pageIndex - 1\r\n        }\r\n        const delimiter = getDelimiterType(startIndex, 4, pageCount);\r\n        const indexes = createPageIndexes(startIndex, 4, pageCount, delimiter);\r\n        const {\r\n            pageIndexes: pageIndexes\r\n        } = indexes;\r\n        this.slidingWindowStateHolder = indexes;\r\n        return pageIndexes\r\n    }\r\n    isSlidingWindowMode() {\r\n        const {\r\n            maxPagesCount: maxPagesCount,\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        return pageCount <= 4 || pageCount <= maxPagesCount\r\n    }\r\n    onPageClick(pageIndex) {\r\n        this.props.pageIndexChangedInternal(pageIndex)\r\n    }\r\n    getPageIndexes() {\r\n        const {\r\n            pageCount: pageCount\r\n        } = this.props;\r\n        if (this.isSlidingWindowMode()) {\r\n            return createPageIndexes(0, pageCount, pageCount, \"none\").pageIndexes\r\n        }\r\n        if (this.canReuseSlidingWindow(pageCount, this.props.pageIndex)) {\r\n            const {\r\n                slidingWindowIndexes: slidingWindowIndexes\r\n            } = this.getSlidingWindowState();\r\n            const delimiter = getDelimiterType(slidingWindowIndexes[0], 4, pageCount);\r\n            return createPageIndexesBySlidingWindowIndexes(slidingWindowIndexes, pageCount, delimiter).pageIndexes\r\n        }\r\n        return this.generatePageIndexes()\r\n    }\r\n    getPages() {\r\n        var _this$getConfig;\r\n        const {\r\n            pageIndex: pageIndex\r\n        } = this.props;\r\n        const createPage = index => {\r\n            const paginationProps = \"low\" === index || \"high\" === index ? null : {\r\n                index: index,\r\n                onClick: () => this.onPageClick(index),\r\n                selected: pageIndex === index\r\n            };\r\n            return {\r\n                key: index.toString(),\r\n                pageProps: paginationProps\r\n            }\r\n        };\r\n        const indices = this.getPageIndexes();\r\n        const rtlPageIndexes = null !== (_this$getConfig = this.getConfig()) && void 0 !== _this$getConfig && _this$getConfig.rtlEnabled ? [...indices].reverse() : indices;\r\n        return rtlPageIndexes.map((index => createPage(index)))\r\n    }\r\n    render() {\r\n        const PagesMarkup = this.getPages().map((_ref => {\r\n            let {\r\n                key: key,\r\n                pageProps: pageProps\r\n            } = _ref;\r\n            return pageProps ? createComponentVNode(2, Page, {\r\n                index: pageProps.index,\r\n                selected: pageProps.selected,\r\n                onClick: pageProps.onClick\r\n            }, key) : createVNode(1, \"div\", \"dx-separator\", \". . .\", 16, null, key)\r\n        }));\r\n        return createFragment(PagesMarkup, 0)\r\n    }\r\n}\r\nPagesLarge.defaultProps = PagesLargeDefaultProps;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}