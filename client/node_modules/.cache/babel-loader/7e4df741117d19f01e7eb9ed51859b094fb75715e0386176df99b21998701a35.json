{"ast":null,"code":"/**\r\n * DevExtreme (esm/__internal/grids/grid_core/views/utils/update_views_borders.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"rowsView\"];\nimport { isDefined } from \"../../../../../core/utils/type\";\nconst CLASSES = {\n  borderedTop: \"dx-bordered-top-view\",\n  borderedBottom: \"dx-bordered-bottom-view\"\n};\nconst getFirstVisibleViewElement = _ref => {\n  let {\n    columnHeadersView: columnHeadersView,\n    rowsView: rowsView\n  } = _ref;\n  if (null !== columnHeadersView && void 0 !== columnHeadersView && columnHeadersView.isVisible()) {\n    return columnHeadersView.element();\n  }\n  return rowsView.element();\n};\nconst getLastVisibleViewElement = _ref2 => {\n  let {\n    filterPanelView: filterPanelView,\n    footerView: footerView,\n    rowsView: rowsView\n  } = _ref2;\n  if (null !== filterPanelView && void 0 !== filterPanelView && filterPanelView.isVisible()) {\n    return filterPanelView.element();\n  }\n  if (null !== footerView && void 0 !== footerView && footerView.isVisible()) {\n    return footerView.element();\n  }\n  return rowsView.element();\n};\nconst getViewElementWithClass = (viewsWithBorder, className) => {\n  const borderedView = Object.values(viewsWithBorder).find(view => {\n    var _view$element;\n    return null === view || void 0 === view || null === (_view$element = view.element()) || void 0 === _view$element ? void 0 : _view$element.hasClass(className);\n  });\n  return (null === borderedView || void 0 === borderedView ? void 0 : borderedView.element()) ?? null;\n};\nconst shouldUpdateBorders = (viewName, viewsWithBorder) => {\n  var _rowsView$element;\n  if (!Object.keys(viewsWithBorder).includes(viewName)) {\n    return false;\n  }\n  const {\n      rowsView: rowsView\n    } = viewsWithBorder,\n    otherViews = _objectWithoutPropertiesLoose(viewsWithBorder, _excluded);\n  if (!isDefined(null === rowsView || void 0 === rowsView || null === (_rowsView$element = rowsView.element) || void 0 === _rowsView$element ? void 0 : _rowsView$element.call(rowsView))) {\n    return false;\n  }\n  return Object.values(otherViews).filter(view => {\n    var _view$isVisible;\n    return null === view || void 0 === view || null === (_view$isVisible = view.isVisible) || void 0 === _view$isVisible ? void 0 : _view$isVisible.call(view);\n  }).every(view => isDefined(null === view || void 0 === view ? void 0 : view.element()));\n};\nexport const updateViewsBorders = (viewName, viewsWithBorder) => {\n  if (!shouldUpdateBorders(viewName, viewsWithBorder)) {\n    return;\n  }\n  const $oldFirst = getViewElementWithClass(viewsWithBorder, CLASSES.borderedTop);\n  const $oldLast = getViewElementWithClass(viewsWithBorder, CLASSES.borderedBottom);\n  const $newFirst = getFirstVisibleViewElement(viewsWithBorder);\n  const $newLast = getLastVisibleViewElement(viewsWithBorder);\n  if ($oldFirst && !$oldFirst.is($newFirst)) {\n    $oldFirst.removeClass(CLASSES.borderedTop);\n  }\n  if ($oldLast && !$oldLast.is($newLast)) {\n    $oldLast.removeClass(CLASSES.borderedBottom);\n  }\n  if (!$newFirst.hasClass(CLASSES.borderedTop)) {\n    $newFirst.addClass(CLASSES.borderedTop);\n  }\n  if (!$newLast.hasClass(CLASSES.borderedBottom)) {\n    $newLast.addClass(CLASSES.borderedBottom);\n  }\n};","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_excluded","isDefined","CLASSES","borderedTop","borderedBottom","getFirstVisibleViewElement","_ref","columnHeadersView","rowsView","isVisible","element","getLastVisibleViewElement","_ref2","filterPanelView","footerView","getViewElementWithClass","viewsWithBorder","className","borderedView","Object","values","find","view","_view$element","hasClass","shouldUpdateBorders","viewName","_rowsView$element","keys","includes","otherViews","call","filter","_view$isVisible","every","updateViewsBorders","$oldFirst","$oldLast","$newFirst","$newLast","is","removeClass","addClass"],"sources":["C:/Users/Sofia/Desktop/Репозиторий ЦК/internship_project/client/node_modules/devextreme/esm/__internal/grids/grid_core/views/utils/update_views_borders.js"],"sourcesContent":["/**\r\n * DevExtreme (esm/__internal/grids/grid_core/views/utils/update_views_borders.js)\r\n * Version: 24.2.7\r\n * Build date: Mon Apr 28 2025\r\n *\r\n * Copyright (c) 2012 - 2025 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\r\nconst _excluded = [\"rowsView\"];\r\nimport {\r\n    isDefined\r\n} from \"../../../../../core/utils/type\";\r\nconst CLASSES = {\r\n    borderedTop: \"dx-bordered-top-view\",\r\n    borderedBottom: \"dx-bordered-bottom-view\"\r\n};\r\nconst getFirstVisibleViewElement = _ref => {\r\n    let {\r\n        columnHeadersView: columnHeadersView,\r\n        rowsView: rowsView\r\n    } = _ref;\r\n    if (null !== columnHeadersView && void 0 !== columnHeadersView && columnHeadersView.isVisible()) {\r\n        return columnHeadersView.element()\r\n    }\r\n    return rowsView.element()\r\n};\r\nconst getLastVisibleViewElement = _ref2 => {\r\n    let {\r\n        filterPanelView: filterPanelView,\r\n        footerView: footerView,\r\n        rowsView: rowsView\r\n    } = _ref2;\r\n    if (null !== filterPanelView && void 0 !== filterPanelView && filterPanelView.isVisible()) {\r\n        return filterPanelView.element()\r\n    }\r\n    if (null !== footerView && void 0 !== footerView && footerView.isVisible()) {\r\n        return footerView.element()\r\n    }\r\n    return rowsView.element()\r\n};\r\nconst getViewElementWithClass = (viewsWithBorder, className) => {\r\n    const borderedView = Object.values(viewsWithBorder).find((view => {\r\n        var _view$element;\r\n        return null === view || void 0 === view || null === (_view$element = view.element()) || void 0 === _view$element ? void 0 : _view$element.hasClass(className)\r\n    }));\r\n    return (null === borderedView || void 0 === borderedView ? void 0 : borderedView.element()) ?? null\r\n};\r\nconst shouldUpdateBorders = (viewName, viewsWithBorder) => {\r\n    var _rowsView$element;\r\n    if (!Object.keys(viewsWithBorder).includes(viewName)) {\r\n        return false\r\n    }\r\n    const {\r\n        rowsView: rowsView\r\n    } = viewsWithBorder, otherViews = _objectWithoutPropertiesLoose(viewsWithBorder, _excluded);\r\n    if (!isDefined(null === rowsView || void 0 === rowsView || null === (_rowsView$element = rowsView.element) || void 0 === _rowsView$element ? void 0 : _rowsView$element.call(rowsView))) {\r\n        return false\r\n    }\r\n    return Object.values(otherViews).filter((view => {\r\n        var _view$isVisible;\r\n        return null === view || void 0 === view || null === (_view$isVisible = view.isVisible) || void 0 === _view$isVisible ? void 0 : _view$isVisible.call(view)\r\n    })).every((view => isDefined(null === view || void 0 === view ? void 0 : view.element())))\r\n};\r\nexport const updateViewsBorders = (viewName, viewsWithBorder) => {\r\n    if (!shouldUpdateBorders(viewName, viewsWithBorder)) {\r\n        return\r\n    }\r\n    const $oldFirst = getViewElementWithClass(viewsWithBorder, CLASSES.borderedTop);\r\n    const $oldLast = getViewElementWithClass(viewsWithBorder, CLASSES.borderedBottom);\r\n    const $newFirst = getFirstVisibleViewElement(viewsWithBorder);\r\n    const $newLast = getLastVisibleViewElement(viewsWithBorder);\r\n    if ($oldFirst && !$oldFirst.is($newFirst)) {\r\n        $oldFirst.removeClass(CLASSES.borderedTop)\r\n    }\r\n    if ($oldLast && !$oldLast.is($newLast)) {\r\n        $oldLast.removeClass(CLASSES.borderedBottom)\r\n    }\r\n    if (!$newFirst.hasClass(CLASSES.borderedTop)) {\r\n        $newFirst.addClass(CLASSES.borderedTop)\r\n    }\r\n    if (!$newLast.hasClass(CLASSES.borderedBottom)) {\r\n        $newLast.addClass(CLASSES.borderedBottom)\r\n    }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}